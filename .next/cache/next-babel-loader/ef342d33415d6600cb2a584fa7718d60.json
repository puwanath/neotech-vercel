{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeIdGenerator, nameToSlug } from '../utils';\nconst getId = makeIdGenerator();\nconst categoriesDef = [{\n  name: 'Instruments',\n  slug: 'instruments',\n  items: 272,\n  children: [{\n    name: 'Power Tools',\n    slug: 'power-tools',\n    image: 'assets/images/categories/category-1.jpg',\n    items: 370,\n    children: [{\n      name: 'Drills & Mixers',\n      slug: 'drills-mixers',\n      items: 57\n    }, {\n      name: 'Cordless Screwdrivers',\n      slug: 'cordless-screwdrivers',\n      items: 15\n    }, {\n      name: 'Screwdrivers',\n      slug: 'screwdrivers',\n      items: 126\n    }, {\n      name: 'Wrenches',\n      slug: 'wrenches',\n      items: 12\n    }, {\n      name: 'Grinding Machines',\n      slug: 'grinding-machines',\n      items: 25\n    }, {\n      name: 'Milling Cutters',\n      slug: 'milling-cutters',\n      items: 78\n    }, {\n      name: 'Electric Spray Guns',\n      slug: 'electric-spray-guns',\n      items: 3\n    }]\n  }, {\n    name: 'Hand Tools',\n    slug: 'hand-tools',\n    image: 'assets/images/categories/category-2.jpg',\n    items: 134,\n    children: [{\n      name: 'Tool Kits',\n      slug: 'tool-kits',\n      items: 57\n    }, {\n      name: 'Hammers',\n      slug: 'hammers',\n      items: 15\n    }, {\n      name: 'Spanners',\n      slug: 'spanners',\n      items: 5\n    }, {\n      name: 'Handsaws',\n      slug: 'handsaws',\n      items: 54\n    }, {\n      name: 'Paint Tools',\n      slug: 'paint-tools',\n      items: 13\n    }]\n  }, {\n    name: 'Machine Tools',\n    slug: 'machine-tools',\n    image: 'assets/images/categories/category-3.jpg',\n    items: 302,\n    children: [{\n      name: 'Lathes',\n      slug: 'lathes',\n      items: 104\n    }, {\n      name: 'Milling Machines',\n      slug: 'milling-machines',\n      items: 12\n    }, {\n      name: 'Grinding Machines',\n      slug: 'grinding-machines',\n      items: 67\n    }, {\n      name: 'CNC Machines',\n      slug: 'cnc-machines',\n      items: 5\n    }, {\n      name: 'Sharpening Machines',\n      slug: 'sharpening-machines',\n      items: 88\n    }]\n  }, {\n    name: 'Power Machinery',\n    slug: 'power-machinery',\n    image: 'assets/images/categories/category-4.jpg',\n    items: 79,\n    children: [{\n      name: 'Generators',\n      slug: 'generators',\n      items: 23\n    }, {\n      name: 'Compressors',\n      slug: 'compressors',\n      items: 76\n    }, {\n      name: 'Winches',\n      slug: 'winches',\n      items: 43\n    }, {\n      name: 'Plasma Cutting',\n      slug: 'plasma-cutting',\n      items: 128\n    }, {\n      name: 'Electric Motors',\n      slug: 'electric-motors',\n      items: 76\n    }]\n  }, {\n    name: 'Measurement',\n    slug: 'measurement',\n    image: 'assets/images/categories/category-5.jpg',\n    items: 366,\n    children: [{\n      name: 'Tape Measure',\n      slug: 'tape-measure',\n      items: 57\n    }, {\n      name: 'Theodolites',\n      slug: 'theodolites',\n      items: 5\n    }, {\n      name: 'Thermal Imagers',\n      slug: 'thermal-imagers',\n      items: 3\n    }, {\n      name: 'Calipers',\n      slug: 'calipers',\n      items: 37\n    }, {\n      name: 'Levels',\n      slug: 'levels',\n      items: 14\n    }]\n  }, {\n    name: 'Clothes and PPE',\n    slug: 'clothes-and-ppe',\n    image: 'assets/images/categories/category-6.jpg',\n    items: 82,\n    children: [{\n      name: 'Winter Workwear',\n      slug: 'winter-workwear',\n      items: 24\n    }, {\n      name: 'Summer Workwear',\n      slug: 'summer-workwear',\n      items: 87\n    }, {\n      name: 'Helmets',\n      slug: 'helmets',\n      items: 9\n    }, {\n      name: 'Belts and Bags',\n      slug: 'belts-and-bags',\n      items: 1\n    }, {\n      name: 'Work Shoes',\n      slug: 'work-shoes',\n      items: 0\n    }]\n  }]\n}, {\n  name: 'Electronics',\n  slug: 'electronics',\n  items: 54\n}, {\n  name: 'Computers',\n  slug: 'computers',\n  items: 421\n}, {\n  name: 'Automotive',\n  slug: 'automotive',\n  items: 182\n}, {\n  name: 'Furniture & Appliances',\n  slug: 'furniture-appliances',\n  items: 15\n}, {\n  name: 'Music & Books',\n  slug: 'music-books',\n  items: 89\n}, {\n  name: 'Health & Beauty',\n  slug: 'health-beauty',\n  items: 201\n}];\n\nfunction makeShopCategory(def) {\n  return {\n    type: 'shop',\n    id: getId(),\n    name: def.name,\n    slug: def.slug || nameToSlug(def.name),\n    image: def.image,\n    items: def.items || 0,\n    customFields: {},\n    parent: undefined,\n    children: []\n  };\n}\n\nfunction walkTree(makeFn, defs, parent) {\n  let list = [];\n  const tree = defs.map(def => {\n    const category = makeFn(def);\n    const [childrenTree, childrenList] = walkTree(makeFn, def.children || [], category);\n    category.parent = parent;\n    category.children = childrenTree;\n    list = [...list, category, ...childrenList];\n    return category;\n  });\n  return [tree, list];\n}\n\nexport function prepareCategory(category, depth) {\n  let children;\n\n  if (depth && depth > 0) {\n    children = category.children && category.children.map(x => prepareCategory(x, depth - 1));\n  }\n\n  return JSON.parse(JSON.stringify(_objectSpread(_objectSpread({}, category), {}, {\n    parent: category.parent ? prepareCategory(category.parent) : null,\n    children\n  })));\n}\nexport const [categoriesTreeData, categoriesListData] = walkTree(makeShopCategory, categoriesDef);","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/fake-server/database/categories.ts"],"names":["makeIdGenerator","nameToSlug","getId","categoriesDef","name","slug","items","children","image","makeShopCategory","def","type","id","customFields","parent","undefined","walkTree","makeFn","defs","list","tree","map","category","childrenTree","childrenList","prepareCategory","depth","x","JSON","parse","stringify","categoriesTreeData","categoriesListData"],"mappings":"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","sourcesContent":["import { makeIdGenerator, nameToSlug } from '../utils';\nimport { ICategoryDef } from '../interfaces/categories';\nimport { IBaseCategory, IShopCategory } from '../../interfaces/category';\n\nconst getId = makeIdGenerator();\n\nconst categoriesDef: ICategoryDef[] = [\n    {\n        name: 'Instruments',\n        slug: 'instruments',\n        items: 272,\n        children: [\n            {\n                name: 'Power Tools',\n                slug: 'power-tools',\n                image: 'assets/images/categories/category-1.jpg',\n                items: 370,\n                children: [\n                    {\n                        name: 'Drills & Mixers',\n                        slug: 'drills-mixers',\n                        items: 57,\n                    },\n                    {\n                        name: 'Cordless Screwdrivers',\n                        slug: 'cordless-screwdrivers',\n                        items: 15,\n                    },\n                    {\n                        name: 'Screwdrivers',\n                        slug: 'screwdrivers',\n                        items: 126,\n                    },\n                    {\n                        name: 'Wrenches',\n                        slug: 'wrenches',\n                        items: 12,\n                    },\n                    {\n                        name: 'Grinding Machines',\n                        slug: 'grinding-machines',\n                        items: 25,\n                    },\n                    {\n                        name: 'Milling Cutters',\n                        slug: 'milling-cutters',\n                        items: 78,\n                    },\n                    {\n                        name: 'Electric Spray Guns',\n                        slug: 'electric-spray-guns',\n                        items: 3,\n                    },\n                ],\n            },\n            {\n                name: 'Hand Tools',\n                slug: 'hand-tools',\n                image: 'assets/images/categories/category-2.jpg',\n                items: 134,\n                children: [\n                    {\n                        name: 'Tool Kits',\n                        slug: 'tool-kits',\n                        items: 57,\n                    },\n                    {\n                        name: 'Hammers',\n                        slug: 'hammers',\n                        items: 15,\n                    },\n                    {\n                        name: 'Spanners',\n                        slug: 'spanners',\n                        items: 5,\n                    },\n                    {\n                        name: 'Handsaws',\n                        slug: 'handsaws',\n                        items: 54,\n                    },\n                    {\n                        name: 'Paint Tools',\n                        slug: 'paint-tools',\n                        items: 13,\n                    },\n                ],\n            },\n            {\n                name: 'Machine Tools',\n                slug: 'machine-tools',\n                image: 'assets/images/categories/category-3.jpg',\n                items: 302,\n                children: [\n                    {\n                        name: 'Lathes',\n                        slug: 'lathes',\n                        items: 104,\n                    },\n                    {\n                        name: 'Milling Machines',\n                        slug: 'milling-machines',\n                        items: 12,\n                    },\n                    {\n                        name: 'Grinding Machines',\n                        slug: 'grinding-machines',\n                        items: 67,\n                    },\n                    {\n                        name: 'CNC Machines',\n                        slug: 'cnc-machines',\n                        items: 5,\n                    },\n                    {\n                        name: 'Sharpening Machines',\n                        slug: 'sharpening-machines',\n                        items: 88,\n                    },\n                ],\n            },\n            {\n                name: 'Power Machinery',\n                slug: 'power-machinery',\n                image: 'assets/images/categories/category-4.jpg',\n                items: 79,\n                children: [\n                    {\n                        name: 'Generators',\n                        slug: 'generators',\n                        items: 23,\n                    },\n                    {\n                        name: 'Compressors',\n                        slug: 'compressors',\n                        items: 76,\n                    },\n                    {\n                        name: 'Winches',\n                        slug: 'winches',\n                        items: 43,\n                    },\n                    {\n                        name: 'Plasma Cutting',\n                        slug: 'plasma-cutting',\n                        items: 128,\n                    },\n                    {\n                        name: 'Electric Motors',\n                        slug: 'electric-motors',\n                        items: 76,\n                    },\n                ],\n            },\n            {\n                name: 'Measurement',\n                slug: 'measurement',\n                image: 'assets/images/categories/category-5.jpg',\n                items: 366,\n                children: [\n                    {\n                        name: 'Tape Measure',\n                        slug: 'tape-measure',\n                        items: 57,\n                    },\n                    {\n                        name: 'Theodolites',\n                        slug: 'theodolites',\n                        items: 5,\n                    },\n                    {\n                        name: 'Thermal Imagers',\n                        slug: 'thermal-imagers',\n                        items: 3,\n                    },\n                    {\n                        name: 'Calipers',\n                        slug: 'calipers',\n                        items: 37,\n                    },\n                    {\n                        name: 'Levels',\n                        slug: 'levels',\n                        items: 14,\n                    },\n                ],\n            },\n            {\n                name: 'Clothes and PPE',\n                slug: 'clothes-and-ppe',\n                image: 'assets/images/categories/category-6.jpg',\n                items: 82,\n                children: [\n                    {\n                        name: 'Winter Workwear',\n                        slug: 'winter-workwear',\n                        items: 24,\n                    },\n                    {\n                        name: 'Summer Workwear',\n                        slug: 'summer-workwear',\n                        items: 87,\n                    },\n                    {\n                        name: 'Helmets',\n                        slug: 'helmets',\n                        items: 9,\n                    },\n                    {\n                        name: 'Belts and Bags',\n                        slug: 'belts-and-bags',\n                        items: 1,\n                    },\n                    {\n                        name: 'Work Shoes',\n                        slug: 'work-shoes',\n                        items: 0,\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        name: 'Electronics',\n        slug: 'electronics',\n        items: 54,\n    },\n    {\n        name: 'Computers',\n        slug: 'computers',\n        items: 421,\n    },\n    {\n        name: 'Automotive',\n        slug: 'automotive',\n        items: 182,\n    },\n    {\n        name: 'Furniture & Appliances',\n        slug: 'furniture-appliances',\n        items: 15,\n    },\n    {\n        name: 'Music & Books',\n        slug: 'music-books',\n        items: 89,\n    },\n    {\n        name: 'Health & Beauty',\n        slug: 'health-beauty',\n        items: 201,\n    },\n];\n\ntype MakeFn<T extends IBaseCategory = IBaseCategory> = (def: ICategoryDef) => T;\n\nfunction makeShopCategory(def: ICategoryDef): IShopCategory {\n    return {\n        type: 'shop',\n        id: getId(),\n        name: def.name,\n        slug: def.slug || nameToSlug(def.name),\n        image: def.image,\n        items: def.items || 0,\n        customFields: {},\n        parent: undefined,\n        children: [],\n    };\n}\n\nfunction walkTree<T extends IBaseCategory = IBaseCategory>(\n    makeFn: MakeFn<T>,\n    defs: ICategoryDef[],\n    parent?: T,\n): [T[], T[]] {\n    let list: T[] = [];\n\n    const tree = defs.map((def) => {\n        const category: T = makeFn(def);\n\n        const [childrenTree, childrenList] = walkTree(makeFn, def.children || [], category);\n\n        category.parent = parent;\n        category.children = childrenTree;\n        list = [...list, category, ...childrenList];\n\n        return category;\n    });\n\n    return [tree, list];\n}\n\nexport function prepareCategory<T extends IBaseCategory>(category: T, depth?: number): T {\n    let children;\n\n    if (depth && depth > 0) {\n        children = category.children && category.children.map((x) => prepareCategory(x, depth - 1));\n    }\n\n    return JSON.parse(JSON.stringify({\n        ...category,\n        parent: category.parent ? prepareCategory(category.parent) : null,\n        children,\n    }));\n}\n\nexport const [categoriesTreeData, categoriesListData] = walkTree(makeShopCategory, categoriesDef);\n"]},"metadata":{},"sourceType":"module"}