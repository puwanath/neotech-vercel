{"ast":null,"code":"export function makeIdGenerator() {\n  var lastId = 0;\n  return function () {\n    lastId += 1;\n    return lastId;\n  };\n}\nexport function nameToSlug(name) {\n  return name.toLowerCase().replace(/[^a-z0-9]/, '-').replace(/-+/, '-');\n}\nexport function categoryHasProducts(category, products) {\n  return products.filter(function (product) {\n    return product.categories.findIndex(function (x) {\n      return x.slug === category.slug;\n    }) !== -1;\n  }).length > 0;\n}\nexport function delayResponse(delay, response) {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      return resolve(response);\n    }, true ? delay : 0);\n  });\n}","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/fake-server/utils.ts"],"names":["makeIdGenerator","lastId","nameToSlug","name","toLowerCase","replace","categoryHasProducts","category","products","filter","product","categories","findIndex","x","slug","length","delayResponse","delay","response","Promise","resolve","setTimeout"],"mappings":"AAGA,OAAO,SAASA,eAAT,GAAyC;AAC5C,MAAIC,MAAM,GAAG,CAAb;AAEA,SAAO,YAAM;AACTA,IAAAA,MAAM,IAAI,CAAV;AAEA,WAAOA,MAAP;AACH,GAJD;AAKH;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0C;AAC7C,SAAOA,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2B,WAA3B,EAAwC,GAAxC,EAA6CA,OAA7C,CAAqD,IAArD,EAA2D,GAA3D,CAAP;AACH;AAED,OAAO,SAASC,mBAAT,CAA6BC,QAA7B,EAAkDC,QAAlD,EAAiF;AACpF,SAAOA,QAAQ,CAACC,MAAT,CAAgB,UAACC,OAAD;AAAA,WACnBA,OAAO,CAACC,UAAR,CAAmBC,SAAnB,CAA6B,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAF,KAAWP,QAAQ,CAACO,IAA3B;AAAA,KAA7B,MAAkE,CAAC,CADhD;AAAA,GAAhB,EAEJC,MAFI,GAEK,CAFZ;AAGH;AAED,OAAO,SAASC,aAAT,CAA0BC,KAA1B,EAAyCC,QAAzC,EAAkE;AACrE,SAAO,IAAIC,OAAJ,CAAe,UAACC,OAAD,EAAa;AAC/BC,IAAAA,UAAU,CAAC;AAAA,aAAMD,OAAO,CAACF,QAAD,CAAb;AAAA,KAAD,EAA0B,OAAkBD,KAAlB,GAA0B,CAApD,CAAV;AACH,GAFM,CAAP;AAGH","sourcesContent":["import { IProduct } from '../interfaces/product';\nimport { ICategory } from '../interfaces/category';\n\nexport function makeIdGenerator(): () => number {\n    let lastId = 0;\n\n    return () => {\n        lastId += 1;\n\n        return lastId;\n    };\n}\n\nexport function nameToSlug(name: string): string {\n    return name.toLowerCase().replace(/[^a-z0-9]/, '-').replace(/-+/, '-');\n}\n\nexport function categoryHasProducts(category: ICategory, products: IProduct[]): boolean {\n    return products.filter((product) => (\n        product.categories.findIndex((x) => x.slug === category.slug) !== -1\n    )).length > 0;\n}\n\nexport function delayResponse<T>(delay: number, response: T): Promise<T> {\n    return new Promise<T>((resolve) => {\n        setTimeout(() => resolve(response), process.browser ? delay : 0);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}