{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\shared\\\\Collapse.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nfunction Collapse(props) {\n  const {\n    toggleClass,\n    render,\n    open\n  } = props;\n  const {\n    0: init,\n    1: setInit\n  } = useState(false);\n  const itemRef = useRef(null);\n  const contentRef = useRef(null);\n  const expand = useCallback((immediate = false) => {\n    if (!itemRef.current || !contentRef.current) {\n      return;\n    }\n\n    if (immediate) {\n      itemRef.current.classList.add(toggleClass);\n      contentRef.current.style.height = '';\n    } else {\n      const startHeight = contentRef.current.getBoundingClientRect().height;\n      itemRef.current.classList.add(toggleClass);\n      const endHeight = contentRef.current.getBoundingClientRect().height;\n      contentRef.current.style.height = `${startHeight}px`;\n      contentRef.current.getBoundingClientRect(); // force reflow\n\n      contentRef.current.style.height = `${endHeight}px`;\n    }\n  }, [toggleClass, itemRef, contentRef]);\n  const collapse = useCallback((immediate = false) => {\n    if (!itemRef.current || !contentRef.current) {\n      return;\n    }\n\n    if (immediate) {\n      itemRef.current.classList.remove(toggleClass);\n      contentRef.current.style.height = '';\n    } else {\n      const startHeight = contentRef.current.getBoundingClientRect().height;\n      contentRef.current.style.height = `${startHeight}px`;\n      itemRef.current.classList.remove(toggleClass);\n      contentRef.current.getBoundingClientRect(); // force reflow\n\n      contentRef.current.style.height = '';\n    }\n  }, [toggleClass, itemRef, contentRef]);\n  const handleToggle = useCallback(() => {\n    if (!itemRef.current || !contentRef.current) {\n      return;\n    }\n\n    if (itemRef.current.classList.contains(toggleClass)) {\n      collapse();\n    } else {\n      expand();\n    }\n  }, [toggleClass, itemRef, contentRef]);\n  useEffect(() => {\n    if (typeof open === 'boolean') {\n      if (open) {\n        expand(!init);\n      } else {\n        collapse(!init);\n      }\n    }\n\n    setInit(true);\n  }, [open, init]);\n  useEffect(() => {\n    if (!contentRef.current) {\n      return () => {};\n    }\n\n    const handleTransitionEnd = event => {\n      if (contentRef.current && event.propertyName === 'height') {\n        contentRef.current.style.height = '';\n      }\n    };\n\n    contentRef.current.addEventListener('transitionend', handleTransitionEnd);\n    return () => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      contentRef.current.removeEventListener('transitionend', handleTransitionEnd);\n    };\n  }, [contentRef]);\n\n  if (render) {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, useMemo(() => render({\n      toggle: handleToggle,\n      setItemRef: itemRef,\n      setContentRef: contentRef\n    }), [render, handleToggle, itemRef, contentRef]));\n  }\n\n  return null;\n}\n\nexport default Collapse;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/shared/Collapse.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Collapse","props","toggleClass","render","open","init","setInit","itemRef","contentRef","expand","immediate","current","classList","add","style","height","startHeight","getBoundingClientRect","endHeight","collapse","remove","handleToggle","contains","handleTransitionEnd","event","propertyName","addEventListener","removeEventListener","toggle","setItemRef","setContentRef"],"mappings":"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","sourcesContent":["// react\nimport React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nexport interface CollapseRenderFnData<T extends HTMLElement, P extends HTMLElement> {\n    toggle: () => void;\n    setItemRef: React.Ref<T>;\n    setContentRef: React.Ref<P>;\n}\n\nexport type CollapseRenderFn<T extends HTMLElement, P extends HTMLElement>\n    = (data: CollapseRenderFnData<T, P>) => React.ReactNode;\n\nexport interface CollapseProps<T extends HTMLElement, P extends HTMLElement> {\n    toggleClass: string;\n    render: CollapseRenderFn<T, P>;\n    open?: boolean;\n}\n\nfunction Collapse<T extends HTMLElement, P extends HTMLElement>(props: CollapseProps<T, P>) {\n    const { toggleClass, render, open } = props;\n    const [init, setInit] = useState(false);\n    const itemRef = useRef<T>(null);\n    const contentRef = useRef<P>(null);\n\n    const expand = useCallback((immediate = false) => {\n        if (!itemRef.current || !contentRef.current) {\n            return;\n        }\n\n        if (immediate) {\n            itemRef.current.classList.add(toggleClass);\n            contentRef.current.style.height = '';\n        } else {\n            const startHeight = contentRef.current.getBoundingClientRect().height;\n\n            itemRef.current.classList.add(toggleClass);\n\n            const endHeight = contentRef.current.getBoundingClientRect().height;\n\n            contentRef.current.style.height = `${startHeight}px`;\n            contentRef.current.getBoundingClientRect(); // force reflow\n            contentRef.current.style.height = `${endHeight}px`;\n        }\n    }, [toggleClass, itemRef, contentRef]);\n\n    const collapse = useCallback((immediate = false) => {\n        if (!itemRef.current || !contentRef.current) {\n            return;\n        }\n\n        if (immediate) {\n            itemRef.current.classList.remove(toggleClass);\n            contentRef.current.style.height = '';\n        } else {\n            const startHeight = contentRef.current.getBoundingClientRect().height;\n\n            contentRef.current.style.height = `${startHeight}px`;\n            itemRef.current.classList.remove(toggleClass);\n\n            contentRef.current.getBoundingClientRect(); // force reflow\n            contentRef.current.style.height = '';\n        }\n    }, [toggleClass, itemRef, contentRef]);\n\n    const handleToggle = useCallback(() => {\n        if (!itemRef.current || !contentRef.current) {\n            return;\n        }\n\n        if (itemRef.current.classList.contains(toggleClass)) {\n            collapse();\n        } else {\n            expand();\n        }\n    }, [toggleClass, itemRef, contentRef]);\n\n    useEffect(() => {\n        if (typeof open === 'boolean') {\n            if (open) {\n                expand(!init);\n            } else {\n                collapse(!init);\n            }\n        }\n\n        setInit(true);\n    }, [open, init]);\n\n    useEffect(() => {\n        if (!contentRef.current) {\n            return () => {};\n        }\n\n        const handleTransitionEnd = (event: TransitionEvent) => {\n            if (contentRef.current && event.propertyName === 'height') {\n                contentRef.current.style.height = '';\n            }\n        };\n\n        contentRef.current.addEventListener('transitionend', handleTransitionEnd);\n\n        return () => {\n            if (!contentRef.current) {\n                return;\n            }\n\n            contentRef.current.removeEventListener('transitionend', handleTransitionEnd);\n        };\n    }, [contentRef]);\n\n    if (render) {\n        return (\n            <React.Fragment>\n                {useMemo(() => render({\n                    toggle: handleToggle,\n                    setItemRef: itemRef,\n                    setContentRef: contentRef,\n                }), [render, handleToggle, itemRef, contentRef])}\n            </React.Fragment>\n        );\n    }\n\n    return null;\n}\n\nexport default Collapse;\n"]},"metadata":{},"sourceType":"module"}