{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport theme from '../data/theme';\nexport var getServerSideProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var params, res, result, dataaddr;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _ref.params, res = _ref.res;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(theme.apiurl + \"/home?select=getcontactinfo&lang=th\");\n\n          case 4:\n            result = _context.sent;\n            _context.next = 7;\n            return result.json();\n\n          case 7:\n            dataaddr = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                dataaddr: dataaddr\n              }\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            res.statusCode = 404;\n            return _context.abrupt(\"return\", {\n              props: {}\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function getServerSideProps(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction ConfigAddress(_ref3) {\n  var dataaddr = _ref3.dataaddr;\n  return {\n    dataaddr: dataaddr\n  };\n}\n\n_c = ConfigAddress;\nexport default ConfigAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigAddress\");","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/ConfigAddress.tsx"],"names":["theme","getServerSideProps","params","res","fetch","apiurl","result","json","dataaddr","props","statusCode","ConfigAddress"],"mappings":";;AAEA,OAAOA,KAAP,MAAkB,eAAlB;AAoBA,OAAO,IAAMC,kBAAsC;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAClDC,YAAAA,MADkD,QAClDA,MADkD,EAElDC,GAFkD,QAElDA,GAFkD;AAAA;AAAA;AAAA,mBAOzBC,KAAK,CAACJ,KAAK,CAACK,MAAN,wCAAD,CAPoB;;AAAA;AAOxCC,YAAAA,MAPwC;AAAA;AAAA,mBAQjBA,MAAM,CAACC,IAAP,EARiB;;AAAA;AAQxCC,YAAAA,QARwC;AAAA,6CAUvC;AACHC,cAAAA,KAAK,EAAG;AAAED,gBAAAA,QAAQ,EAARA;AAAF;AADL,aAVuC;;AAAA;AAAA;AAAA;AAc9CL,YAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AAd8C,6CAevC;AACHD,cAAAA,KAAK,EAAE;AADJ,aAfuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtCR,kBAAsC;AAAA;AAAA;AAAA,GAA5C;;AAsBP,SAASU,aAAT,QAA4F;AAAA,MAAnEH,QAAmE,SAAnEA,QAAmE;AAExF,SAAO;AAACA,IAAAA,QAAQ,EAARA;AAAD,GAAP;AAEH;;KAJQG,a;AAMT,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport { GetServerSideProps, InferGetServerSidePropsType } from 'next';\r\nimport theme from '../data/theme';\r\nimport { FormattedMessage,useIntl } from 'react-intl';\r\nimport Head from 'next/head';\r\n\r\ntype Data = {\r\n    contact_name_th: string;\r\n    contact_name_en: string;\r\n    contact_address_th: string;\r\n    contact_address_en: string;\r\n    contact_tel_th: string;\r\n    contact_tel_en: string;\r\n    contact_fax: string;\r\n    contact_email: string;\r\n    contact_lineid: string;\r\n    contact_facebook: string;\r\n    contact_facebook_chat: string;\r\n    contact_website: string;\r\n    contact_location_name: string;\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async ({\r\n    params,\r\n    res\r\n}) => {\r\n// const {id} = params;\r\n    try{\r\n    \r\n        const result = await fetch(theme.apiurl+`/home?select=getcontactinfo&lang=th`);\r\n        const dataaddr: Data = await result.json();\r\n        \r\n        return {\r\n            props : { dataaddr }\r\n        };\r\n    } catch {\r\n        res.statusCode = 404\r\n        return {\r\n            props: {}\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction ConfigAddress({ dataaddr }: InferGetServerSidePropsType<typeof getServerSideProps>){\r\n\r\n    return {dataaddr}\r\n\r\n}\r\n\r\nexport default ConfigAddress;"]},"metadata":{},"sourceType":"module"}