{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars,arrow-body-style */\n// noinspection ES6UnusedImports\nimport { getCategories as _getCategories, getCategoryBySlug as _getCategoryBySlug } from '../fake-server/endpoints/categories';\nimport { getDiscountedProducts as _getDiscountedProducts, getFeaturedProducts as _getFeaturedProducts, getLatestProducts as _getLatestProducts, getPopularProducts as _getPopularProducts, getProductBySlug as _getProductBySlug, getProductsList as _getProductsList, getRelatedProducts as _getRelatedProducts, getSuggestions as _getSuggestions, getTopRatedProducts as _getTopRatedProducts } from '../fake-server/endpoints/products';\nvar shopApi = {\n  /**\n   * Returns array of categories.\n   */\n  getCategories: function getCategories() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/categories.json?depth=2\n     *\n     * where:\n     * - 2 = options.depth\n     */\n    // return fetch(`https://example.com/api/categories.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getCategories(options);\n  },\n\n  /**\n   * Returns category by slug.\n   */\n  getCategoryBySlug: function getCategoryBySlug(slug) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/categories/power-tools.json?depth=2\n     *\n     * where:\n     * - power-tools = slug\n     * - 2           = options.depth\n     */\n    // return fetch(`https://example.com/api/categories/${slug}.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getCategoryBySlug(slug, options);\n  },\n\n  /**\n   * Returns product.\n   */\n  getProductBySlug: function getProductBySlug(slug) {\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/products/screwdriver-a2017.json\n     *\n     * where:\n     * - screwdriver-a2017 = slug\n     */\n    // return fetch(`https://example.com/api/products/${slug}.json`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getProductBySlug(slug);\n  },\n\n  /**\n   * Returns array of related products.\n   */\n  getRelatedProducts: function getRelatedProducts(slug) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/shop/products/screwdriver-a2017/related.json&limit=3\n     *\n     * where:\n     * - screwdriver-a2017 = slug\n     * - limit             = options.limit\n     */\n    // return fetch(`https://example.com/api/products/${slug}/related.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getRelatedProducts(slug, options);\n  },\n\n  /**\n   * Return products list.\n   */\n  getProductsList: function getProductsList() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/products.json?page=2&limit=12&sort=name_desc&filter_category=screwdriwers&filter_price=500-1000\n     *\n     * where:\n     * - page            = options.page\n     * - limit           = options.limit\n     * - sort            = options.sort\n     * - filter_category = filters.category\n     * - filter_price    = filters.price\n     */\n    // const params = { ...options };\n    //\n    // Object.keys(filters).forEach((slug) => {\n    //     params[`filter_${slug}`] = filters[slug];\n    // });\n    //\n    // return fetch(`https://example.com/api/products.json?${qs.stringify(params)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getProductsList(options, filters);\n  },\n\n  /**\n   * Returns array of featured products.\n   */\n  getFeaturedProducts: function getFeaturedProducts() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/shop/featured-products.json?limit=3&category=power-tools\n     *\n     * where:\n     * - 3           = options.limit\n     * - power-tools = options.category\n     */\n    // return fetch(`https://example.com/api/featured-products.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getFeaturedProducts(options);\n  },\n\n  /**\n   * Returns array of latest products.\n   */\n  getLatestProducts: function getLatestProducts() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/shop/latest-products.json?limit=3&category=power-tools\n     *\n     * where:\n     * - 3           = options.limit\n     * - power-tools = options.category\n     */\n    // return fetch(`https://example.com/api/latest-products.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getLatestProducts(options);\n  },\n\n  /**\n   * Returns an array of top rated products.\n   */\n  getTopRatedProducts: function getTopRatedProducts() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/shop/top-rated-products.json?limit=3&category=power-tools\n     *\n     * where:\n     * - 3           = options.limit\n     * - power-tools = options.category\n     */\n    // return fetch(`https://example.com/api/top-rated-products.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getTopRatedProducts(options);\n  },\n\n  /**\n   * Returns an array of discounted products.\n   */\n  getDiscountedProducts: function getDiscountedProducts() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/shop/discounted-products.json?limit=3&category=power-tools\n     *\n     * where:\n     * - 3           = options.limit\n     * - power-tools = options.category\n     */\n    // return fetch(`https://example.com/api/discounted-products.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getDiscountedProducts(options);\n  },\n\n  /**\n   * Returns an array of most popular products.\n   */\n  getPopularProducts: function getPopularProducts() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/shop/popular-products.json?limit=3&category=power-tools\n     *\n     * where:\n     * - 3           = options.limit\n     * - power-tools = options.category\n     */\n    // return fetch(`https://example.com/api/popular-products.json?${qs.stringify(options)}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getPopularProducts(options);\n  },\n\n  /**\n   * Returns search suggestions.\n   */\n  getSuggestions: function getSuggestions(query) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /**\n     * This is what your API endpoint might look like:\n     *\n     * https://example.com/api/search/suggestions.json?query=screwdriver&limit=5&category=power-tools\n     *\n     * where:\n     * - screwdriver = query\n     * - 5           = options.limit\n     * - power-tools = options.category\n     */\n    // return fetch(`https://example.com/api/search/suggestions.json?${qs.stringify({ ...options, query })}`)\n    //     .then((response) => response.json());\n    // This is for demonstration purposes only. Remove it and use the code above.\n    return _getSuggestions(query, options);\n  }\n};\nexport default shopApi;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/api/shop.ts"],"names":["getCategories","getCategoryBySlug","getDiscountedProducts","getFeaturedProducts","getLatestProducts","getPopularProducts","getProductBySlug","getProductsList","getRelatedProducts","getSuggestions","getTopRatedProducts","shopApi","options","slug","filters","query"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars,arrow-body-style */\n// noinspection ES6UnusedImports\nimport qs from 'query-string';\nimport { getCategories, getCategoryBySlug } from '../fake-server/endpoints/categories';\nimport { IShopCategory } from '../interfaces/category';\nimport { IProduct, IProductsList } from '../interfaces/product';\nimport { IFilterValues, IListOptions } from '../interfaces/list';\nimport {\n    getDiscountedProducts,\n    getFeaturedProducts,\n    getLatestProducts,\n    getPopularProducts,\n    getProductBySlug,\n    getProductsList,\n    getRelatedProducts,\n    getSuggestions,\n    getTopRatedProducts,\n} from '../fake-server/endpoints/products';\n\nexport interface GetCategoriesOptions {\n    depth?: number;\n}\n\nexport interface GetCategoryBySlugOptions {\n    depth?: number;\n}\n\nexport interface GetRelatedProductsOptions {\n    limit?: number;\n}\n\nexport interface GetProductsOptions {\n    limit?: number;\n    category?: string;\n}\n\nexport type GetSuggestionsOptions = {\n    limit?: number;\n    category?: string;\n};\n\nconst shopApi = {\n    /**\n     * Returns array of categories.\n     */\n    getCategories: (options: GetCategoriesOptions = {}): Promise<IShopCategory[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/categories.json?depth=2\n         *\n         * where:\n         * - 2 = options.depth\n         */\n        // return fetch(`https://example.com/api/categories.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getCategories(options);\n    },\n    /**\n     * Returns category by slug.\n     */\n    getCategoryBySlug: (slug: string, options: GetCategoryBySlugOptions = {}): Promise<IShopCategory> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/categories/power-tools.json?depth=2\n         *\n         * where:\n         * - power-tools = slug\n         * - 2           = options.depth\n         */\n        // return fetch(`https://example.com/api/categories/${slug}.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getCategoryBySlug(slug, options);\n    },\n    /**\n     * Returns product.\n     */\n    getProductBySlug: (slug: string): Promise<IProduct> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/products/screwdriver-a2017.json\n         *\n         * where:\n         * - screwdriver-a2017 = slug\n         */\n        // return fetch(`https://example.com/api/products/${slug}.json`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getProductBySlug(slug);\n    },\n    /**\n     * Returns array of related products.\n     */\n    getRelatedProducts: (slug: string, options: GetRelatedProductsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/shop/products/screwdriver-a2017/related.json&limit=3\n         *\n         * where:\n         * - screwdriver-a2017 = slug\n         * - limit             = options.limit\n         */\n        // return fetch(`https://example.com/api/products/${slug}/related.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getRelatedProducts(slug, options);\n    },\n    /**\n     * Return products list.\n     */\n    getProductsList: (options: IListOptions = {}, filters: IFilterValues = {}): Promise<IProductsList> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/products.json?page=2&limit=12&sort=name_desc&filter_category=screwdriwers&filter_price=500-1000\n         *\n         * where:\n         * - page            = options.page\n         * - limit           = options.limit\n         * - sort            = options.sort\n         * - filter_category = filters.category\n         * - filter_price    = filters.price\n         */\n        // const params = { ...options };\n        //\n        // Object.keys(filters).forEach((slug) => {\n        //     params[`filter_${slug}`] = filters[slug];\n        // });\n        //\n        // return fetch(`https://example.com/api/products.json?${qs.stringify(params)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getProductsList(options, filters);\n    },\n    /**\n     * Returns array of featured products.\n     */\n    getFeaturedProducts: (options: GetProductsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/shop/featured-products.json?limit=3&category=power-tools\n         *\n         * where:\n         * - 3           = options.limit\n         * - power-tools = options.category\n         */\n        // return fetch(`https://example.com/api/featured-products.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getFeaturedProducts(options);\n    },\n    /**\n     * Returns array of latest products.\n     */\n    getLatestProducts: (options: GetProductsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/shop/latest-products.json?limit=3&category=power-tools\n         *\n         * where:\n         * - 3           = options.limit\n         * - power-tools = options.category\n         */\n        // return fetch(`https://example.com/api/latest-products.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getLatestProducts(options);\n    },\n    /**\n     * Returns an array of top rated products.\n     */\n    getTopRatedProducts: (options: GetProductsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/shop/top-rated-products.json?limit=3&category=power-tools\n         *\n         * where:\n         * - 3           = options.limit\n         * - power-tools = options.category\n         */\n        // return fetch(`https://example.com/api/top-rated-products.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getTopRatedProducts(options);\n    },\n    /**\n     * Returns an array of discounted products.\n     */\n    getDiscountedProducts: (options: GetProductsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/shop/discounted-products.json?limit=3&category=power-tools\n         *\n         * where:\n         * - 3           = options.limit\n         * - power-tools = options.category\n         */\n        // return fetch(`https://example.com/api/discounted-products.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getDiscountedProducts(options);\n    },\n    /**\n     * Returns an array of most popular products.\n     */\n    getPopularProducts: (options: GetProductsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/shop/popular-products.json?limit=3&category=power-tools\n         *\n         * where:\n         * - 3           = options.limit\n         * - power-tools = options.category\n         */\n        // return fetch(`https://example.com/api/popular-products.json?${qs.stringify(options)}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getPopularProducts(options);\n    },\n    /**\n     * Returns search suggestions.\n     */\n    getSuggestions: (query: string, options: GetSuggestionsOptions = {}): Promise<IProduct[]> => {\n        /**\n         * This is what your API endpoint might look like:\n         *\n         * https://example.com/api/search/suggestions.json?query=screwdriver&limit=5&category=power-tools\n         *\n         * where:\n         * - screwdriver = query\n         * - 5           = options.limit\n         * - power-tools = options.category\n         */\n        // return fetch(`https://example.com/api/search/suggestions.json?${qs.stringify({ ...options, query })}`)\n        //     .then((response) => response.json());\n\n        // This is for demonstration purposes only. Remove it and use the code above.\n        return getSuggestions(query, options);\n    },\n};\n\nexport default shopApi;\n"]},"metadata":{},"sourceType":"module"}