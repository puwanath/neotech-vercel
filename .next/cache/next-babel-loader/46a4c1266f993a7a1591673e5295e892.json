{"ast":null,"code":"// application\nimport shopApi from '../../api/shop';\nimport { QUICKVIEW_CLOSE, QUICKVIEW_OPEN } from './quickviewActionTypes';\n\nlet cancelPreviousRequest = () => {};\n\nexport function quickviewOpenSuccess(product) {\n  return {\n    type: QUICKVIEW_OPEN,\n    product\n  };\n}\nexport function quickviewClose() {\n  return {\n    type: QUICKVIEW_CLOSE\n  };\n}\nexport function quickviewOpen(productSlug) {\n  return dispatch => {\n    cancelPreviousRequest();\n    return new Promise(resolve => {\n      let canceled = false; // sending request to server, timeout is used as a stub\n\n      const timer = setTimeout(() => {\n        shopApi.getProductBySlug(productSlug).then(product => {\n          if (canceled) {\n            return;\n          }\n\n          if (product) {\n            dispatch(quickviewOpenSuccess(product));\n          }\n\n          resolve();\n        });\n      }, 350);\n\n      cancelPreviousRequest = () => {\n        canceled = true;\n        clearTimeout(timer);\n        resolve();\n      };\n    });\n  };\n}","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/store/quickview/quickviewActions.ts"],"names":["shopApi","QUICKVIEW_CLOSE","QUICKVIEW_OPEN","cancelPreviousRequest","quickviewOpenSuccess","product","type","quickviewClose","quickviewOpen","productSlug","dispatch","Promise","resolve","canceled","timer","setTimeout","getProductBySlug","then","clearTimeout"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SACIC,eADJ,EAEIC,cAFJ,QAMO,wBANP;;AAQA,IAAIC,qBAAqB,GAAG,MAAM,CAAE,CAApC;;AAEA,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAsE;AACzE,SAAO;AACHC,IAAAA,IAAI,EAAEJ,cADH;AAEHG,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,cAAT,GAAgD;AACnD,SAAO;AACHD,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH;AAED,OAAO,SAASO,aAAT,CAAuBC,WAAvB,EAAiF;AACpF,SAAQC,QAAD,IAAc;AACjBP,IAAAA,qBAAqB;AAErB,WAAO,IAAIQ,OAAJ,CAAaC,OAAD,IAAa;AAC5B,UAAIC,QAAQ,GAAG,KAAf,CAD4B,CAE5B;;AACA,YAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3Bf,QAAAA,OAAO,CAACgB,gBAAR,CAAyBP,WAAzB,EAAsCQ,IAAtC,CAA4CZ,OAAD,IAAa;AACpD,cAAIQ,QAAJ,EAAc;AACV;AACH;;AAED,cAAIR,OAAJ,EAAa;AACTK,YAAAA,QAAQ,CAACN,oBAAoB,CAACC,OAAD,CAArB,CAAR;AACH;;AAEDO,UAAAA,OAAO;AACV,SAVD;AAWH,OAZuB,EAYrB,GAZqB,CAAxB;;AAcAT,MAAAA,qBAAqB,GAAG,MAAM;AAC1BU,QAAAA,QAAQ,GAAG,IAAX;AACAK,QAAAA,YAAY,CAACJ,KAAD,CAAZ;AACAF,QAAAA,OAAO;AACV,OAJD;AAKH,KAtBM,CAAP;AAuBH,GA1BD;AA2BH","sourcesContent":["// application\nimport shopApi from '../../api/shop';\nimport { IProduct } from '../../interfaces/product';\nimport {\n    QUICKVIEW_CLOSE,\n    QUICKVIEW_OPEN,\n    QuickviewCloseAction,\n    QuickviewOpenAction,\n    QuickviewThunkAction,\n} from './quickviewActionTypes';\n\nlet cancelPreviousRequest = () => {};\n\nexport function quickviewOpenSuccess(product: IProduct): QuickviewOpenAction {\n    return {\n        type: QUICKVIEW_OPEN,\n        product,\n    };\n}\n\nexport function quickviewClose(): QuickviewCloseAction {\n    return {\n        type: QUICKVIEW_CLOSE,\n    };\n}\n\nexport function quickviewOpen(productSlug: string): QuickviewThunkAction<Promise<void>> {\n    return (dispatch) => {\n        cancelPreviousRequest();\n\n        return new Promise((resolve) => {\n            let canceled = false;\n            // sending request to server, timeout is used as a stub\n            const timer = setTimeout(() => {\n                shopApi.getProductBySlug(productSlug).then((product) => {\n                    if (canceled) {\n                        return;\n                    }\n\n                    if (product) {\n                        dispatch(quickviewOpenSuccess(product));\n                    }\n\n                    resolve();\n                });\n            }, 350);\n\n            cancelPreviousRequest = () => {\n                canceled = true;\n                clearTimeout(timer);\n                resolve();\n            };\n        });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}