{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\header\\\\NavLinks.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '../shared/AppLink';\n\nvar ArrowRoundedDown9x6Svg = function ArrowRoundedDown9x6Svg(props) {\n  return __jsx(\"svg\", props, __jsx(\"path\", {\n    d: \"M.2.4c.4-.4 1-.5 1.4-.1l2.9 3 2.9-3c.4-.4 1.1-.4 1.4.1.3.4.3.9-.1 1.3L4.5 6 .3 1.6C-.1 1.3-.1.7.2.4z\"\n  }));\n};\n\n_c2 = ArrowRoundedDown9x6Svg;\nArrowRoundedDown9x6Svg.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"9\",\n  height: \"6\"\n};\nimport Megamenu from './Megamenu';\nimport Menu from './Menu';\nimport { useDirection } from '../../store/locale/localeHooks';\nimport dataHeaderNavigation from '../../data/headerNavigation'; // third-party\n\nimport { FormattedMessage } from 'react-intl';\n\nfunction NavLinks() {\n  _s();\n\n  var _this = this;\n\n  var direction = useDirection();\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    var item = event.currentTarget;\n    var megamenu = item.querySelector('.nav-links__megamenu');\n\n    if (megamenu) {\n      var container = megamenu.offsetParent;\n      var containerWidth = container.getBoundingClientRect().width;\n      var megamenuWidth = megamenu.getBoundingClientRect().width;\n      var itemOffsetLeft = item.offsetLeft;\n      var megamenuPosition = Math.round(Math.min(itemOffsetLeft, containerWidth - megamenuWidth));\n      megamenu.style.right = '';\n      megamenu.style.left = \"\".concat(megamenuPosition, \"px\");\n    }\n  };\n\n  var linksList = dataHeaderNavigation.map(function (item, index) {\n    var arrow;\n    var submenu;\n\n    if (item.submenu) {\n      arrow = __jsx(ArrowRoundedDown9x6Svg, {\n        className: \"nav-links__arrow\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      });\n    }\n\n    if (item.submenu && item.submenu.type === 'menu') {\n      submenu = __jsx(\"div\", {\n        className: \"nav-links__menu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, __jsx(Menu, {\n        items: item.submenu.menu,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (item.submenu && item.submenu.type === 'megamenu') {\n      submenu = __jsx(\"div\", {\n        className: \"nav-links__megamenu nav-links__megamenu--size--\".concat(item.submenu.menu.size),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(Megamenu, {\n        menu: item.submenu.menu,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    var classes = classNames('nav-links__item', {\n      'nav-links__item--with-submenu': item.submenu\n    });\n    return __jsx(\"li\", {\n      key: index,\n      className: classes,\n      onMouseEnter: handleMouseEnter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(AppLink, _extends({\n      href: item.url\n    }, item.props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: item.title,\n      defaultMessage: item.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }), arrow)), submenu);\n  });\n  return __jsx(\"ul\", {\n    className: \"nav-links__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, linksList);\n}\n\n_s(NavLinks, \"phXYRUOz78y7QtRuB7UNvsVrWPc=\", false, function () {\n  return [useDirection];\n});\n\n_c = NavLinks;\nexport default NavLinks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavLinks\");\n$RefreshReg$(_c2, \"ArrowRoundedDown9x6Svg\");","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/header/NavLinks.tsx"],"names":["React","classNames","AppLink","ArrowRoundedDown9x6Svg","Megamenu","Menu","useDirection","dataHeaderNavigation","FormattedMessage","NavLinks","direction","handleMouseEnter","event","item","currentTarget","megamenu","querySelector","container","offsetParent","containerWidth","getBoundingClientRect","width","megamenuWidth","itemOffsetLeft","offsetLeft","megamenuPosition","Math","round","min","style","right","left","linksList","map","index","arrow","submenu","type","menu","size","classes","url","props","title"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\n\n// application\nimport AppLink from '../shared/AppLink';\nimport ArrowRoundedDown9x6Svg from '../../svg/arrow-rounded-down-9x6.svg';\nimport Megamenu from './Megamenu';\nimport Menu from './Menu';\nimport { useDirection, useLanguage, useLocaleChange  } from '../../store/locale/localeHooks';\n\nimport dataHeaderNavigation from '../../data/headerNavigation';\n// third-party\nimport { FormattedMessage } from 'react-intl';\n\nfunction NavLinks() {\n    const direction = useDirection();\n\n    const handleMouseEnter = (event: React.MouseEvent) => {\n        const item = event.currentTarget as HTMLElement;\n        const megamenu = item.querySelector('.nav-links__megamenu') as HTMLElement;\n\n        if (megamenu) {\n            const container = megamenu.offsetParent;\n            const containerWidth = container!.getBoundingClientRect().width;\n            const megamenuWidth = megamenu.getBoundingClientRect().width;\n            const itemOffsetLeft = item.offsetLeft;\n\n            const megamenuPosition = Math.round(\n                Math.min(itemOffsetLeft, containerWidth - megamenuWidth),\n            );\n\n            megamenu.style.right = '';\n            megamenu.style.left = `${megamenuPosition}px`;\n        }\n    };\n\n    const linksList = dataHeaderNavigation.map((item, index) => {\n        let arrow;\n        let submenu;\n\n        if (item.submenu) {\n            arrow = <ArrowRoundedDown9x6Svg className=\"nav-links__arrow\" />;\n        }\n\n        if (item.submenu && item.submenu.type === 'menu') {\n            submenu = (\n                <div className=\"nav-links__menu\">\n                    <Menu items={item.submenu.menu} />\n                </div>\n            );\n        }\n\n        if (item.submenu && item.submenu.type === 'megamenu') {\n            submenu = (\n                <div className={`nav-links__megamenu nav-links__megamenu--size--${item.submenu.menu.size}`}>\n                    <Megamenu menu={item.submenu.menu} />\n                </div>\n            );\n        }\n\n        const classes = classNames('nav-links__item', {\n            'nav-links__item--with-submenu': item.submenu,\n        });\n\n        return (\n            <li key={index} className={classes} onMouseEnter={handleMouseEnter}>\n                <AppLink href={item.url} {...item.props}>\n                    <span>\n                        <FormattedMessage id={item.title} defaultMessage={item.title} />\n                        {arrow}\n                    </span>\n                </AppLink>\n                {submenu}\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"nav-links__list\">\n            {linksList}\n        </ul>\n    );\n}\n\nexport default NavLinks;\n"]},"metadata":{},"sourceType":"module"}