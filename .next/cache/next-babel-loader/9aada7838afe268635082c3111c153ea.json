{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AbstractFilterBuilder from './abstract';\nimport productsData from '../database/products';\n\nfunction parseValue(value) {\n  return value ? value.split(',') : [];\n}\n\nvar CheckFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(CheckFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(CheckFilterBuilder);\n\n  function CheckFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, CheckFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", []);\n\n    return _this;\n  }\n\n  _createClass(CheckFilterBuilder, [{\n    key: \"test\",\n    value: function test(product) {\n      var _this2 = this;\n\n      if (this.value.length === 0) {\n        return true;\n      }\n\n      return this.value.reduce(function (result, value) {\n        return result || _this2.extractItems(product).map(function (x) {\n          return x.slug;\n        }).includes(value);\n      }, false);\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      var _this3 = this;\n\n      products.forEach(function (product) {\n        return _this3.extractItems(product).forEach(function (item) {\n          if (!_this3.items.find(function (x) {\n            return x.slug === item.slug;\n          })) {\n            _this3.items.push(item);\n          }\n        });\n      });\n      this.value = parseValue(value);\n    }\n  }, {\n    key: \"calc\",\n    value: function calc(filters) {\n      var _this4 = this;\n\n      var products = productsData.filter(function (product) {\n        return filters.reduce(function (isMatched, filter) {\n          return isMatched && (filter === _this4 || filter.test(product));\n        }, true);\n      });\n      this.items = this.items.map(function (item) {\n        var count = products.reduce(function (acc, product) {\n          return acc + (_this4.extractItems(product).map(function (x) {\n            return x.slug;\n          }).includes(item.slug) ? 1 : 0);\n        }, 0);\n        return _objectSpread(_objectSpread({}, item), {}, {\n          count: count\n        });\n      });\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'check',\n        slug: this.slug,\n        name: this.name,\n        items: this.items,\n        value: this.value\n      };\n    }\n  }, {\n    key: \"extractItems\",\n    value: function extractItems(product) {\n      if (this.slug === 'brand') {\n        return product.brand ? [{\n          slug: product.brand.slug,\n          name: product.brand.name,\n          count: 0\n        }] : [];\n      }\n\n      throw Error();\n    }\n  }]);\n\n  return CheckFilterBuilder;\n}(AbstractFilterBuilder);\n\nexport { CheckFilterBuilder as default };","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/fake-server/filters/check.ts"],"names":["AbstractFilterBuilder","productsData","parseValue","value","split","CheckFilterBuilder","product","length","reduce","result","extractItems","map","x","slug","includes","products","forEach","item","items","find","push","filters","filter","isMatched","test","count","acc","type","name","brand","Error"],"mappings":"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","sourcesContent":["import AbstractFilterBuilder from './abstract';\nimport productsData from '../database/products';\nimport { IBaseFilterItem, ICheckFilter, ICheckFilterValue } from '../../interfaces/filter';\nimport { IProduct } from '../../interfaces/product';\n\nfunction parseValue(value?: string): string[] {\n    return value ? value.split(',') : [];\n}\n\nexport default class CheckFilterBuilder extends AbstractFilterBuilder<ICheckFilter> {\n    items: IBaseFilterItem[] = [];\n\n    value: ICheckFilterValue = [];\n\n    test(product: IProduct): boolean {\n        if (this.value.length === 0) {\n            return true;\n        }\n\n        return this.value.reduce<boolean>((result, value) => (\n            result || this.extractItems(product).map((x) => x.slug).includes(value)\n        ), false);\n    }\n\n    makeItems(products: IProduct[], value?: string) {\n        products.forEach((product) => this.extractItems(product).forEach((item) => {\n            if (!this.items.find((x) => x.slug === item.slug)) {\n                this.items.push(item);\n            }\n        }));\n\n        this.value = parseValue(value);\n    }\n\n    calc(filters: AbstractFilterBuilder[]): void {\n        const products = productsData.filter(\n            (product) => filters.reduce<boolean>(\n                (isMatched, filter) => (\n                    isMatched && (filter === this || filter.test(product))\n                ),\n                true,\n            ),\n        );\n\n        this.items = this.items.map((item) => {\n            const count = products.reduce((acc, product) => (\n                acc + (this.extractItems(product).map((x) => x.slug).includes(item.slug) ? 1 : 0)\n            ), 0);\n\n            return { ...item, count };\n        });\n    }\n\n    build(): ICheckFilter {\n        return {\n            type: 'check',\n            slug: this.slug,\n            name: this.name,\n            items: this.items,\n            value: this.value,\n        };\n    }\n\n    extractItems(product: IProduct): IBaseFilterItem[] {\n        if (this.slug === 'brand') {\n            return product.brand ? [{\n                slug: product.brand.slug,\n                name: product.brand.name,\n                count: 0,\n            }] : [];\n        }\n\n        throw Error();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}