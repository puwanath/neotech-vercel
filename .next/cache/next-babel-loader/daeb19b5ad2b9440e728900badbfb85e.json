{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AbstractFilterBuilder from './abstract';\nimport productsData from '../database/products';\nvar colors = [{\n  slug: 'white',\n  color: '#fff'\n}, {\n  slug: 'silver',\n  color: '#d9d9d9'\n}, {\n  slug: 'light-gray',\n  color: '#b3b3b3'\n}, {\n  slug: 'gray',\n  color: '#808080'\n}, {\n  slug: 'dark-gray',\n  color: '#666'\n}, {\n  slug: 'coal',\n  color: '#4d4d4d'\n}, {\n  slug: 'black',\n  color: '#262626'\n}, {\n  slug: 'red',\n  color: '#ff4040'\n}, {\n  slug: 'orange',\n  color: '#ff8126'\n}, {\n  slug: 'yellow',\n  color: '#ffd333'\n}, {\n  slug: 'pear-green',\n  color: '#becc1f'\n}, {\n  slug: 'green',\n  color: '#8fcc14'\n}, {\n  slug: 'emerald',\n  color: '#47cc5e'\n}, {\n  slug: 'shamrock',\n  color: '#47cca0'\n}, {\n  slug: 'shakespeare',\n  color: '#47cccc'\n}, {\n  slug: 'blue',\n  color: '#40bfff'\n}, {\n  slug: 'dark-blue',\n  color: '#3d6dcc'\n}, {\n  slug: 'violet',\n  color: '#7766cc'\n}, {\n  slug: 'purple',\n  color: '#b852cc'\n}, {\n  slug: 'cerise',\n  color: '#e53981'\n}];\n\nfunction getColorCode(slug) {\n  var result = colors.find(function (x) {\n    return x.slug === slug;\n  });\n  return result ? result.color : '#000';\n}\n\nfunction parseValue(value) {\n  return value ? value.split(',') : [];\n}\n\nvar ColorFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(ColorFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(ColorFilterBuilder);\n\n  function ColorFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, ColorFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", []);\n\n    return _this;\n  }\n\n  _createClass(ColorFilterBuilder, [{\n    key: \"test\",\n    value: function test(product) {\n      var _this2 = this;\n\n      if (this.value.length === 0) {\n        return true;\n      }\n\n      return this.value.reduce(function (result, value) {\n        return result || _this2.extractItems(product).map(function (x) {\n          return x.slug;\n        }).includes(value);\n      }, false);\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      var _this3 = this;\n\n      products.forEach(function (product) {\n        return _this3.extractItems(product).forEach(function (item) {\n          if (!_this3.items.find(function (x) {\n            return x.slug === item.slug;\n          })) {\n            _this3.items.push(item);\n          }\n        });\n      });\n      this.value = parseValue(value);\n    }\n  }, {\n    key: \"calc\",\n    value: function calc(filters) {\n      var _this4 = this;\n\n      var products = productsData.filter(function (product) {\n        return filters.reduce(function (isMatched, filter) {\n          return isMatched && (filter === _this4 || filter.test(product));\n        }, true);\n      });\n      this.items = this.items.map(function (item) {\n        var count = products.reduce(function (acc, product) {\n          var match = _this4.extractItems(product).map(function (x) {\n            return x.slug;\n          }).includes(item.slug);\n\n          return acc + (match ? 1 : 0);\n        }, 0);\n        return _objectSpread(_objectSpread({}, item), {}, {\n          count: count\n        });\n      }).sort(function (a, b) {\n        return colors.findIndex(function (x) {\n          return x.slug === a.slug;\n        }) - colors.findIndex(function (x) {\n          return x.slug === b.slug;\n        });\n      });\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'color',\n        slug: this.slug,\n        name: this.name,\n        items: this.items,\n        value: this.value\n      };\n    }\n  }, {\n    key: \"extractItems\",\n    value: function extractItems(product) {\n      var _this5 = this;\n\n      var attribute = product.attributes.find(function (x) {\n        return x.slug === _this5.slug;\n      });\n\n      if (!attribute) {\n        return [];\n      }\n\n      return attribute.values.map(function (value) {\n        return {\n          slug: value.slug,\n          name: value.name,\n          color: getColorCode(value.slug),\n          count: 0\n        };\n      });\n    }\n  }]);\n\n  return ColorFilterBuilder;\n}(AbstractFilterBuilder);\n\nexport { ColorFilterBuilder as default };","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/fake-server/filters/color.ts"],"names":["AbstractFilterBuilder","productsData","colors","slug","color","getColorCode","result","find","x","parseValue","value","split","ColorFilterBuilder","product","length","reduce","extractItems","map","includes","products","forEach","item","items","push","filters","filter","isMatched","test","count","acc","match","sort","a","b","findIndex","type","name","attribute","attributes","values"],"mappings":"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","sourcesContent":["import AbstractFilterBuilder from './abstract';\nimport productsData from '../database/products';\nimport { IColorFilter, IColorFilterItem, IColorFilterValue } from '../../interfaces/filter';\nimport { IProduct } from '../../interfaces/product';\n\nconst colors = [\n    { slug: 'white', color: '#fff' },\n    { slug: 'silver', color: '#d9d9d9' },\n    { slug: 'light-gray', color: '#b3b3b3' },\n    { slug: 'gray', color: '#808080' },\n    { slug: 'dark-gray', color: '#666' },\n    { slug: 'coal', color: '#4d4d4d' },\n    { slug: 'black', color: '#262626' },\n    { slug: 'red', color: '#ff4040' },\n    { slug: 'orange', color: '#ff8126' },\n    { slug: 'yellow', color: '#ffd333' },\n    { slug: 'pear-green', color: '#becc1f' },\n    { slug: 'green', color: '#8fcc14' },\n    { slug: 'emerald', color: '#47cc5e' },\n    { slug: 'shamrock', color: '#47cca0' },\n    { slug: 'shakespeare', color: '#47cccc' },\n    { slug: 'blue', color: '#40bfff' },\n    { slug: 'dark-blue', color: '#3d6dcc' },\n    { slug: 'violet', color: '#7766cc' },\n    { slug: 'purple', color: '#b852cc' },\n    { slug: 'cerise', color: '#e53981' },\n];\n\nfunction getColorCode(slug: string): string {\n    const result = colors.find((x) => x.slug === slug);\n\n    return result ? result.color : '#000';\n}\n\nfunction parseValue(value?: string): IColorFilterValue {\n    return value ? value.split(',') : [];\n}\n\nexport default class ColorFilterBuilder extends AbstractFilterBuilder<IColorFilter> {\n    items: IColorFilterItem[] = [];\n\n    value: IColorFilterValue = [];\n\n    test(product: IProduct): boolean {\n        if (this.value.length === 0) {\n            return true;\n        }\n\n        return this.value.reduce<boolean>((result, value) => (\n            result || this.extractItems(product).map((x) => x.slug).includes(value)\n        ), false);\n    }\n\n    makeItems(products: IProduct[], value?: string): void {\n        products.forEach((product) => this.extractItems(product).forEach((item) => {\n            if (!this.items.find((x) => x.slug === item.slug)) {\n                this.items.push(item);\n            }\n        }));\n\n        this.value = parseValue(value);\n    }\n\n    calc(filters: AbstractFilterBuilder[]): void {\n        const products = productsData.filter(\n            (product) => filters.reduce<boolean>(\n                (isMatched, filter) => isMatched && (filter === this || filter.test(product)),\n                true,\n            ),\n        );\n\n        this.items = this.items.map((item) => {\n            const count = products.reduce((acc, product) => {\n                const match = this.extractItems(product).map((x) => x.slug).includes(item.slug);\n\n                return acc + (match ? 1 : 0);\n            }, 0);\n\n            return { ...item, count };\n        }).sort((a, b) => (\n            colors.findIndex((x) => x.slug === a.slug) - colors.findIndex((x) => x.slug === b.slug)\n        ));\n    }\n\n    build(): IColorFilter {\n        return {\n            type: 'color',\n            slug: this.slug,\n            name: this.name,\n            items: this.items,\n            value: this.value,\n        };\n    }\n\n    extractItems(product: IProduct): IColorFilterItem[] {\n        const attribute = product.attributes.find((x) => x.slug === this.slug);\n\n        if (!attribute) {\n            return [];\n        }\n\n        return attribute.values.map((value) => ({\n            slug: value.slug,\n            name: value.name,\n            color: getColorCode(value.slug),\n            count: 0,\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}