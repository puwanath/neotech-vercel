{"ast":null,"code":"const url = {\n  home: () => ({\n    href: '/'\n  }),\n  catalog: () => '/shop/catalog',\n  cart: () => ({\n    href: '/shop/cart'\n  }),\n  checkout: () => ({\n    href: '/shop/checkout'\n  }),\n  category: category => {\n    if (category.type === 'shop') {\n      return url.shopCategory(category);\n    }\n\n    if (category.type === 'blog') {\n      return url.blogCategory();\n    }\n\n    throw Error('Undefined category type');\n  },\n  shopCategory: category => ({\n    href: '/shop/catalog/[slug]',\n    as: `/shop/catalog/${category.slug}`\n  }),\n  product: product => ({\n    href: '/shop/products/[slug]',\n    as: `/shop/products/${product.slug}`\n  }),\n  wishlist: () => ({\n    href: '/shop/wishlist'\n  }),\n  blogCategory: () => ({\n    href: '/blog/category-classic'\n  }),\n  blogPost: () => ({\n    href: '/blog/post-classic'\n  }),\n  accountSignIn: () => ({\n    href: '/account/login'\n  }),\n  accountSignUp: () => ({\n    href: '/account/login'\n  }),\n  accountSignOut: () => ({\n    href: '/account/login'\n  }),\n  accountDashboard: () => ({\n    href: '/account/dashboard'\n  }),\n  accountProfile: () => ({\n    href: '/account/profile'\n  }),\n  accountOrders: () => ({\n    href: '/account/orders'\n  }),\n  accountOrder: order => ({\n    href: '/account/orders/[orderId]',\n    as: `/account/orders/${order.id}`\n  }),\n  accountAddresses: () => ({\n    href: '/account/addresses',\n    as: '/account/addresses'\n  }),\n  accountAddress: address => ({\n    href: '/account/addresses/[addressId]',\n    as: `/account/addresses/${address.id}`\n  }),\n  accountPassword: () => ({\n    href: '/account/password',\n    as: '/account/password'\n  }),\n  contacts: () => ({\n    href: '/site/contact-us'\n  }),\n  terms: () => ({\n    href: '/site/terms'\n  })\n};\nexport default url;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/services/url.ts"],"names":["url","home","href","catalog","cart","checkout","category","type","shopCategory","blogCategory","Error","as","slug","product","wishlist","blogPost","accountSignIn","accountSignUp","accountSignOut","accountDashboard","accountProfile","accountOrders","accountOrder","order","id","accountAddresses","accountAddress","address","accountPassword","contacts","terms"],"mappings":"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","sourcesContent":["import { ILinkProps } from '../interfaces/menus/link-props';\nimport { ICategory, IShopCategory } from '../interfaces/category';\n\nconst url = {\n    home: (): ILinkProps => ({\n        href: '/',\n    }),\n\n    catalog: () => '/shop/catalog',\n\n    cart: (): ILinkProps => ({\n        href: '/shop/cart',\n    }),\n\n    checkout: (): ILinkProps => ({\n        href: '/shop/checkout',\n    }),\n\n    category: (category: ICategory): ILinkProps => {\n        if (category.type === 'shop') {\n            return url.shopCategory(category);\n        }\n        if (category.type === 'blog') {\n            return url.blogCategory();\n        }\n\n        throw Error('Undefined category type');\n    },\n\n    shopCategory: (category: IShopCategory): ILinkProps => ({\n        href: '/shop/catalog/[slug]',\n        as: `/shop/catalog/${category.slug}`,\n    }),\n\n    product: (product: { slug: string }): ILinkProps => ({\n        href: '/shop/products/[slug]',\n        as: `/shop/products/${product.slug}`,\n    }),\n\n    wishlist: (): ILinkProps => ({\n        href: '/shop/wishlist',\n    }),\n\n    blogCategory: (): ILinkProps => ({\n        href: '/blog/category-classic',\n    }),\n\n    blogPost: (): ILinkProps => ({\n        href: '/blog/post-classic',\n    }),\n\n    accountSignIn: (): ILinkProps => ({\n        href: '/account/login',\n    }),\n\n    accountSignUp: (): ILinkProps => ({\n        href: '/account/login',\n    }),\n\n    accountSignOut: (): ILinkProps => ({\n        href: '/account/login',\n    }),\n\n    accountDashboard: (): ILinkProps => ({\n        href: '/account/dashboard',\n    }),\n\n    accountProfile: (): ILinkProps => ({\n        href: '/account/profile',\n    }),\n\n    accountOrders: (): ILinkProps => ({\n        href: '/account/orders',\n    }),\n\n    accountOrder: (order: { id: number }): ILinkProps => ({\n        href: '/account/orders/[orderId]',\n        as: `/account/orders/${order.id}`,\n    }),\n\n    accountAddresses: (): ILinkProps => ({\n        href: '/account/addresses',\n        as: '/account/addresses',\n    }),\n\n    accountAddress: (address: { id: number }): ILinkProps => ({\n        href: '/account/addresses/[addressId]',\n        as: `/account/addresses/${address.id}`,\n    }),\n\n    accountPassword: (): ILinkProps => ({\n        href: '/account/password',\n        as: '/account/password',\n    }),\n\n    contacts: (): ILinkProps => ({\n        href: '/site/contact-us',\n    }),\n\n    terms: (): ILinkProps => ({\n        href: '/site/terms',\n    }),\n};\n\nexport default url;\n"]},"metadata":{},"sourceType":"module"}