{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\mobile\\\\MobileLinks.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // application\n\nimport AppLink from '../shared/AppLink';\n\nvar ArrowRoundedDown12x7Svg = function ArrowRoundedDown12x7Svg(props) {\n  return __jsx(\"svg\", props, __jsx(\"path\", {\n    d: \"M.286.273a.92.92 0 0 0-.01 1.292l5.24 5.428 5.241-5.428a.92.92 0 0 0-.01-1.292.923.923 0 0 0-1.31.006L5.516 4.296 1.596.279A.923.923 0 0 0 .286.273z\"\n  }));\n};\n\nArrowRoundedDown12x7Svg.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"12\",\n  height: \"7\"\n};\nimport Collapse from '../shared/Collapse';\n\nfunction MobileLinks(props) {\n  const {\n    links = [],\n    level = 0,\n    onItemClick\n  } = props;\n\n  const handleItemClick = item => {\n    if (onItemClick) {\n      onItemClick(item);\n    }\n  };\n\n  const linksList = links.map((link, index) => {\n    let item;\n\n    if (link.type === 'link' || link.type === 'button') {\n      const renderItem = ({\n        toggle,\n        setItemRef,\n        setContentRef\n      }) => {\n        let arrow;\n        let subLinks;\n        let linkOrButton;\n\n        if (link.children && link.children.length > 0) {\n          arrow = __jsx(\"button\", {\n            className: \"mobile-links__item-toggle\",\n            type: \"button\",\n            onClick: toggle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }\n          }, __jsx(ArrowRoundedDown12x7Svg, {\n            className: \"mobile-links__item-arrow\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }\n          }));\n          subLinks = __jsx(\"div\", {\n            className: \"mobile-links__item-sub-links\",\n            ref: setContentRef,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }\n          }, __jsx(MobileLinks, {\n            links: link.children,\n            level: level + 1,\n            onItemClick: onItemClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }\n          }));\n        }\n\n        if (link.type === 'link') {\n          linkOrButton = __jsx(AppLink, {\n            href: link.url,\n            className: \"mobile-links__item-link\",\n            onClick: () => handleItemClick(link),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }\n          }, link.title);\n        } else {\n          linkOrButton = __jsx(\"button\", {\n            type: \"button\",\n            className: \"mobile-links__item-link\",\n            onClick: () => handleItemClick(link),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }\n          }, link.title);\n        }\n\n        return __jsx(\"div\", {\n          className: \"mobile-links__item\",\n          ref: setItemRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: \"mobile-links__item-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }\n        }, linkOrButton, arrow), subLinks);\n      };\n\n      item = __jsx(Collapse, {\n        toggleClass: \"mobile-links__item--open\",\n        render: renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }\n      });\n    } else if (link.type === 'divider') {\n      item = __jsx(\"div\", {\n        className: \"mobile-links__divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return __jsx(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    }, item);\n  });\n  return __jsx(\"ul\", {\n    className: `mobile-links mobile-links--level--${level}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, linksList);\n}\n\nexport default MobileLinks;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/mobile/MobileLinks.tsx"],"names":["React","AppLink","ArrowRoundedDown12x7Svg","Collapse","MobileLinks","props","links","level","onItemClick","handleItemClick","item","linksList","map","link","index","type","renderItem","toggle","setItemRef","setContentRef","arrow","subLinks","linkOrButton","children","length","url","title"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// application\nimport AppLink from '../shared/AppLink';\nimport ArrowRoundedDown12x7Svg from '../../svg/arrow-rounded-down-12x7.svg';\nimport Collapse, { CollapseRenderFn } from '../shared/Collapse';\nimport { IMobileMenuLink } from '../../interfaces/menus/mobile-menu';\n\nexport type RenderItemFn = CollapseRenderFn<HTMLDivElement, HTMLDivElement>;\n\nexport interface MobileLinksProps {\n    links?: IMobileMenuLink[];\n    level?: number;\n    onItemClick?: (item: IMobileMenuLink) => void;\n}\n\nfunction MobileLinks(props: MobileLinksProps) {\n    const { links = [], level = 0, onItemClick } = props;\n\n    const handleItemClick = (item: IMobileMenuLink) => {\n        if (onItemClick) {\n            onItemClick(item);\n        }\n    };\n\n    const linksList = links.map((link, index) => {\n        let item;\n\n        if (link.type === 'link' || link.type === 'button') {\n            const renderItem: RenderItemFn = ({ toggle, setItemRef, setContentRef }) => {\n                let arrow;\n                let subLinks;\n                let linkOrButton;\n\n                if (link.children && link.children.length > 0) {\n                    arrow = (\n                        <button className=\"mobile-links__item-toggle\" type=\"button\" onClick={toggle}>\n                            <ArrowRoundedDown12x7Svg className=\"mobile-links__item-arrow\" />\n                        </button>\n                    );\n\n                    subLinks = (\n                        <div className=\"mobile-links__item-sub-links\" ref={setContentRef}>\n                            <MobileLinks\n                                links={link.children}\n                                level={level + 1}\n                                onItemClick={onItemClick}\n                            />\n                        </div>\n                    );\n                }\n\n                if (link.type === 'link') {\n                    linkOrButton = (\n                        <AppLink\n                            href={link.url}\n                            className=\"mobile-links__item-link\"\n                            onClick={() => handleItemClick(link)}\n                        >\n                            {link.title}\n                        </AppLink>\n                    );\n                } else {\n                    linkOrButton = (\n                        <button\n                            type=\"button\"\n                            className=\"mobile-links__item-link\"\n                            onClick={() => handleItemClick(link)}\n                        >\n                            {link.title}\n                        </button>\n                    );\n                }\n\n                return (\n                    <div className=\"mobile-links__item\" ref={setItemRef}>\n                        <div className=\"mobile-links__item-title\">\n                            {linkOrButton}\n                            {arrow}\n                        </div>\n                        {subLinks}\n                    </div>\n                );\n            };\n\n            item = <Collapse toggleClass=\"mobile-links__item--open\" render={renderItem} />;\n        } else if (link.type === 'divider') {\n            item = <div className=\"mobile-links__divider\" />;\n        }\n\n        return <li key={index}>{item}</li>;\n    });\n\n    return (\n        <ul className={`mobile-links mobile-links--level--${level}`}>\n            {linksList}\n        </ul>\n    );\n}\n\nexport default MobileLinks;\n"]},"metadata":{},"sourceType":"module"}