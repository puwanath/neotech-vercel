{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\shared\\\\CurrencyFormat.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // application\n\nimport { useCurrency } from '../../store/currency/currencyHooks';\n\nfunction CurrencyFormat(props) {\n  _s();\n\n  var value = props.value,\n      currency = props.currency;\n  var currentCurrency = useCurrency();\n\n  var _ref = currency || currentCurrency,\n      symbol = _ref.symbol;\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, \"\".concat(symbol).concat(value.toFixed(2)));\n}\n\n_s(CurrencyFormat, \"pDFKhJivybzWYKS523f6OnlIY00=\", false, function () {\n  return [useCurrency];\n});\n\n_c = CurrencyFormat;\nexport default CurrencyFormat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyFormat\");","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/shared/CurrencyFormat.tsx"],"names":["React","useCurrency","CurrencyFormat","props","value","currency","currentCurrency","symbol","toFixed"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,SAASC,WAAT,QAA4B,oCAA5B;;AAOA,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;AAAA;;AAAA,MACxCC,KADwC,GACpBD,KADoB,CACxCC,KADwC;AAAA,MACjCC,QADiC,GACpBF,KADoB,CACjCE,QADiC;AAEhD,MAAMC,eAAe,GAAGL,WAAW,EAAnC;;AAFgD,aAG7BI,QAAQ,IAAIC,eAHiB;AAAA,MAGxCC,MAHwC,QAGxCA,MAHwC;;AAKhD,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoBA,MAApB,SAA6BH,KAAK,CAACI,OAAN,CAAc,CAAd,CAA7B,EAAP;AACH;;GANQN,c;UAEmBD,W;;;KAFnBC,c;AAQT,eAAeA,cAAf","sourcesContent":["// react\nimport React from 'react';\n\n// application\nimport { ICurrency } from '../../interfaces/currency';\nimport { useCurrency } from '../../store/currency/currencyHooks';\n\nexport interface CurrencyFormatProps {\n    value: number;\n    currency?: ICurrency;\n}\n\nfunction CurrencyFormat(props: CurrencyFormatProps) {\n    const { value, currency } = props;\n    const currentCurrency = useCurrency();\n    const { symbol } = currency || currentCurrency;\n\n    return <React.Fragment>{`${symbol}${value.toFixed(2)}`}</React.Fragment>;\n}\n\nexport default CurrencyFormat;\n"]},"metadata":{},"sourceType":"module"}