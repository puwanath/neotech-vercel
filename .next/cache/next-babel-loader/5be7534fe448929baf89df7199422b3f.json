{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\shared\\\\AppLink.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react'; // third-party\n\nimport Link from 'next/link';\n\nfunction isLink(href) {\n  return href !== undefined;\n}\n\nfunction isSimpleLink(href) {\n  return href !== undefined && typeof href === 'string';\n}\n\nfunction isExternal(href) {\n  return /^(https?:)?\\/\\//.test(href);\n}\n\nfunction AppLink(props) {\n  var href = props.href,\n      children = props.children,\n      anchorProps = _objectWithoutProperties(props, [\"href\", \"children\"]);\n\n  var link;\n\n  if (!isLink(href) || isSimpleLink(href) && isExternal(href)) {\n    link = __jsx(\"a\", _extends({\n      href: href\n    }, anchorProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    }), children);\n  } else {\n    var linkProps = typeof href === 'string' ? {\n      href: href\n    } : href;\n    link = __jsx(Link, _extends({}, linkProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), __jsx(\"a\", _extends({}, anchorProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), children));\n  }\n\n  return link;\n}\n\n_c = AppLink;\nexport default AppLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLink\");","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/shared/AppLink.tsx"],"names":["React","Link","isLink","href","undefined","isSimpleLink","isExternal","test","AppLink","props","children","anchorProps","link","linkProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAgC,WAAhC;;AAUA,SAASC,MAAT,CAAgBC,IAAhB,EAA8D;AAC1D,SAAOA,IAAI,KAAKC,SAAhB;AACH;;AACD,SAASC,YAAT,CAAsBF,IAAtB,EAAkE;AAC9D,SAAOA,IAAI,KAAKC,SAAT,IAAsB,OAAOD,IAAP,KAAgB,QAA7C;AACH;;AACD,SAASG,UAAT,CAAoBH,IAApB,EAA2C;AACvC,SAAO,kBAAkBI,IAAlB,CAAuBJ,IAAvB,CAAP;AACH;;AAED,SAASK,OAAT,CAAiBC,KAAjB,EAAsC;AAAA,MAC1BN,IAD0B,GACSM,KADT,CAC1BN,IAD0B;AAAA,MACpBO,QADoB,GACSD,KADT,CACpBC,QADoB;AAAA,MACPC,WADO,4BACSF,KADT;;AAGlC,MAAIG,IAAJ;;AAEA,MAAI,CAACV,MAAM,CAACC,IAAD,CAAP,IAAkBE,YAAY,CAACF,IAAD,CAAZ,IAAsBG,UAAU,CAACH,IAAD,CAAtD,EAA+D;AAC3DS,IAAAA,IAAI,GAAG;AAAG,MAAA,IAAI,EAAET;AAAT,OAAmBQ,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAiCD,QAAjC,CAAP;AACH,GAFD,MAEO;AACH,QAAMG,SAAoB,GAAG,OAAOV,IAAP,KAAgB,QAAhB,GAA2B;AAAEA,MAAAA,IAAI,EAAJA;AAAF,KAA3B,GAAsCA,IAAnE;AAEAS,IAAAA,IAAI,GACA,MAAC,IAAD,eAAUC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,wBAAOF,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqBD,QAArB,CADJ,CADJ;AAKH;;AAED,SAAOE,IAAP;AACH;;KAlBQJ,O;AAoBT,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\n// third-party\nimport Link, { LinkProps } from 'next/link';\nimport { ILinkProps } from '../../interfaces/menus/link-props';\n\nexport type LinkType = string | ILinkProps;\n\nexport interface AppLinkProps extends React.PropsWithChildren<React.HTMLAttributes<HTMLElement>> {\n    href?: LinkType;\n    target?: React.AnchorHTMLAttributes<HTMLAnchorElement>['target'];\n}\n\nfunction isLink(href: LinkType | undefined): href is LinkType {\n    return href !== undefined;\n}\nfunction isSimpleLink(href: LinkType | undefined): href is string {\n    return href !== undefined && typeof href === 'string';\n}\nfunction isExternal(href: string): boolean {\n    return /^(https?:)?\\/\\//.test(href);\n}\n\nfunction AppLink(props: AppLinkProps) {\n    const { href, children, ...anchorProps } = props;\n\n    let link;\n\n    if (!isLink(href) || (isSimpleLink(href) && isExternal(href))) {\n        link = <a href={href} {...anchorProps}>{children}</a>;\n    } else {\n        const linkProps: LinkProps = typeof href === 'string' ? { href } : href;\n\n        link = (\n            <Link {...linkProps}>\n                <a {...anchorProps}>{children}</a>\n            </Link>\n        );\n    }\n\n    return link;\n}\n\nexport default AppLink;\n"]},"metadata":{},"sourceType":"module"}