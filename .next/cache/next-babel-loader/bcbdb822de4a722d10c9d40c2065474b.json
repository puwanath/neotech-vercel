{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\header\\\\Megamenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // application\n\nimport MegamenuLinks from './MegamenuLinks';\nimport { useDirection } from '../../store/locale/localeHooks';\n\nfunction Megamenu(props) {\n  _s();\n\n  var _this = this;\n\n  var menu = props.menu,\n      _props$location = props.location,\n      location = _props$location === void 0 ? 'nav-links' : _props$location;\n  var direction = useDirection();\n\n  if (!menu) {\n    return null;\n  }\n\n  var menuStyle = {};\n  var image = menu.image;\n\n  if (image) {\n    menuStyle = {\n      backgroundImage: \"url('\".concat(image, \"')\")\n    };\n  }\n\n  var columns = menu.columns.map(function (column, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"col-\".concat(column.size),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(MegamenuLinks, {\n      links: column.links,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  });\n  return __jsx(\"div\", {\n    className: \"megamenu megamenu--\".concat(location),\n    style: menuStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, columns));\n}\n\n_s(Megamenu, \"phXYRUOz78y7QtRuB7UNvsVrWPc=\", false, function () {\n  return [useDirection];\n});\n\n_c = Megamenu;\nexport default Megamenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Megamenu\");","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/header/Megamenu.tsx"],"names":["React","MegamenuLinks","useDirection","Megamenu","props","menu","location","direction","menuStyle","image","backgroundImage","columns","map","column","index","size","links"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,gCAA7B;;AAUA,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAAA;;AAAA;;AAAA,MAC5BC,IAD4B,GACKD,KADL,CAC5BC,IAD4B;AAAA,wBACKD,KADL,CACtBE,QADsB;AAAA,MACtBA,QADsB,gCACX,WADW;AAEpC,MAAMC,SAAS,GAAGL,YAAY,EAA9B;;AAEA,MAAI,CAACG,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AAED,MAAIG,SAAS,GAAG,EAAhB;AARoC,MAS9BC,KAT8B,GASpBJ,IAToB,CAS9BI,KAT8B;;AAWpC,MAAIA,KAAJ,EAAW;AAEPD,IAAAA,SAAS,GAAG;AACRE,MAAAA,eAAe,iBAAUD,KAAV;AADP,KAAZ;AAGH;;AAED,MAAME,OAAO,GAAGN,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAiB,UAACC,MAAD,EAASC,KAAT;AAAA,WAC7B;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,gBAASD,MAAM,CAACE,IAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEF,MAAM,CAACG,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAD6B;AAAA,GAAjB,CAAhB;AAMA,SACI;AAAK,IAAA,SAAS,+BAAwBV,QAAxB,CAAd;AAAkD,IAAA,KAAK,EAAEE,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OADL,CADJ,CADJ;AAOH;;GA/BQR,Q;UAEaD,Y;;;KAFbC,Q;AAiCT,eAAeA,QAAf","sourcesContent":["// react\nimport React from 'react';\n\n// application\nimport MegamenuLinks from './MegamenuLinks';\nimport { useDirection } from '../../store/locale/localeHooks';\nimport { IMegamenu } from '../../interfaces/menus/megamenu';\n\nexport type MegamenuLocation = 'nav-links' | 'department';\n\nexport interface MegamenuProps {\n    menu: IMegamenu;\n    location?: MegamenuLocation;\n}\n\nfunction Megamenu(props: MegamenuProps) {\n    const { menu, location = 'nav-links' } = props;\n    const direction = useDirection();\n\n    if (!menu) {\n        return null;\n    }\n\n    let menuStyle = {};\n    let { image } = menu;\n\n    if (image) {\n\n        menuStyle = {\n            backgroundImage: `url('${image}')`,\n        };\n    }\n\n    const columns = menu.columns.map((column, index) => (\n        <div key={index} className={`col-${column.size}`}>\n            <MegamenuLinks links={column.links} />\n        </div>\n    ));\n\n    return (\n        <div className={`megamenu megamenu--${location}`} style={menuStyle}>\n            <div className=\"row\">\n                {columns}\n            </div>\n        </div>\n    );\n}\n\nexport default Megamenu;\n"]},"metadata":{},"sourceType":"module"}