{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AbstractFilterBuilder from './abstract';\nimport productsData from '../database/products';\n\nvar RadioFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(RadioFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(RadioFilterBuilder);\n\n  function RadioFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, RadioFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", null);\n\n    return _this;\n  }\n\n  _createClass(RadioFilterBuilder, [{\n    key: \"test\",\n    value: function test(product) {\n      return this.value !== null && this.extractItems(product).map(function (x) {\n        return x.slug;\n      }).includes(this.value);\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      var _this2 = this;\n\n      products.forEach(function (product) {\n        return _this2.extractItems(product).forEach(function (item) {\n          if (!_this2.items.find(function (x) {\n            return x.slug === item.slug;\n          })) {\n            _this2.items.push(item);\n          }\n        });\n      });\n      this.value = value || this.items[0].slug;\n    }\n  }, {\n    key: \"calc\",\n    value: function calc(filters) {\n      var _this3 = this;\n\n      var products = productsData.filter(function (product) {\n        return filters.reduce(function (isMatched, filter) {\n          return isMatched && (filter === _this3 || filter.test(product));\n        }, true);\n      });\n      this.items = this.items.map(function (item) {\n        var count = products.reduce(function (acc, product) {\n          var match = _this3.extractItems(product).map(function (x) {\n            return x.slug;\n          }).includes(item.slug);\n\n          return acc + (match ? 1 : 0);\n        }, 0);\n        return _objectSpread(_objectSpread({}, item), {}, {\n          count: count\n        });\n      });\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'radio',\n        slug: this.slug,\n        name: this.name,\n        items: this.items,\n        value: this.value\n      };\n    }\n  }, {\n    key: \"extractItems\",\n    value: function extractItems(product) {\n      if (this.slug === 'discount') {\n        var items = [{\n          slug: 'any',\n          name: 'Any',\n          count: 0\n        }];\n\n        if (product.compareAtPrice) {\n          items.push({\n            slug: 'yes',\n            name: 'Yes',\n            count: 0\n          });\n        } else {\n          items.push({\n            slug: 'no',\n            name: 'No',\n            count: 0\n          });\n        }\n\n        return items;\n      }\n\n      throw Error();\n    }\n  }]);\n\n  return RadioFilterBuilder;\n}(AbstractFilterBuilder);\n\nexport { RadioFilterBuilder as default };","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/fake-server/filters/radio.ts"],"names":["AbstractFilterBuilder","productsData","RadioFilterBuilder","product","value","extractItems","map","x","slug","includes","products","forEach","item","items","find","push","filters","filter","reduce","isMatched","test","count","acc","match","type","name","compareAtPrice","Error"],"mappings":"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","sourcesContent":["import AbstractFilterBuilder from './abstract';\nimport productsData from '../database/products';\nimport { IBaseFilterItem, IRadioFilter, IRadioFilterValue } from '../../interfaces/filter';\nimport { IProduct } from '../../interfaces/product';\n\nexport default class RadioFilterBuilder extends AbstractFilterBuilder {\n    items: IBaseFilterItem[] = [];\n\n    value: IRadioFilterValue = null;\n\n    test(product: IProduct): boolean {\n        return this.value !== null && this.extractItems(product).map((x) => x.slug).includes(this.value);\n    }\n\n    makeItems(products: IProduct[], value?: string): void {\n        products.forEach((product) => this.extractItems(product).forEach((item) => {\n            if (!this.items.find((x) => x.slug === item.slug)) {\n                this.items.push(item);\n            }\n        }));\n\n        this.value = value || this.items[0].slug;\n    }\n\n    calc(filters: AbstractFilterBuilder[]): void {\n        const products = productsData.filter(\n            (product) => filters.reduce<boolean>(\n                (isMatched, filter) => isMatched && (filter === this || filter.test(product)),\n                true,\n            ),\n        );\n\n        this.items = this.items.map((item) => {\n            const count = products.reduce((acc, product) => {\n                const match = this.extractItems(product).map((x) => x.slug).includes(item.slug);\n\n                return acc + (match ? 1 : 0);\n            }, 0);\n\n            return { ...item, count };\n        });\n    }\n\n    build(): IRadioFilter {\n        return {\n            type: 'radio',\n            slug: this.slug,\n            name: this.name,\n            items: this.items,\n            value: this.value,\n        };\n    }\n\n    extractItems(product: IProduct): IBaseFilterItem[] {\n        if (this.slug === 'discount') {\n            const items = [\n                { slug: 'any', name: 'Any', count: 0 },\n            ];\n\n            if (product.compareAtPrice) {\n                items.push({ slug: 'yes', name: 'Yes', count: 0 });\n            } else {\n                items.push({ slug: 'no', name: 'No', count: 0 });\n            }\n\n            return items;\n        }\n\n        throw Error();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}