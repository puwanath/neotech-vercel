{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { LOCALE_CHANGE } from './localeActionTypes';\nimport { withClientState } from '../client';\nconst initialState = {\n  current: 'en'\n};\nexport const LOCALE_NAMESPACE = 'locale';\n\nfunction localeBaseReducer(state = initialState, action) {\n  if (action.type === LOCALE_CHANGE) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: action.locale\n    });\n  }\n\n  return state;\n}\n\nconst localeReducer = withClientState(localeBaseReducer, LOCALE_NAMESPACE);\nexport default localeReducer;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/store/locale/localeReducer.ts"],"names":["LOCALE_CHANGE","withClientState","initialState","current","LOCALE_NAMESPACE","localeBaseReducer","state","action","type","locale","localeReducer"],"mappings":";;;;;;AAAA;AACA,SAASA,aAAT,QAA4C,qBAA5C;AAEA,SAASC,eAAT,QAAgC,WAAhC;AAEA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAAlC;AAIA,OAAO,MAAMC,gBAAgB,GAAG,QAAzB;;AAEP,SAASC,iBAAT,CAA2BC,KAAK,GAAGJ,YAAnC,EAAiDK,MAAjD,EAAoF;AAChF,MAAIA,MAAM,CAACC,IAAP,KAAgBR,aAApB,EAAmC;AAC/B,2CACOM,KADP;AAEIH,MAAAA,OAAO,EAAEI,MAAM,CAACE;AAFpB;AAIH;;AAED,SAAOH,KAAP;AACH;;AAED,MAAMI,aAAa,GAAGT,eAAe,CAACI,iBAAD,EAAoBD,gBAApB,CAArC;AAEA,eAAeM,aAAf","sourcesContent":["// application\nimport { LOCALE_CHANGE, LocaleAction } from './localeActionTypes';\nimport { LocaleState } from './localeTypes';\nimport { withClientState } from '../client';\n\nconst initialState: LocaleState = {\n    current: 'en',\n};\n\nexport const LOCALE_NAMESPACE = 'locale';\n\nfunction localeBaseReducer(state = initialState, action: LocaleAction): LocaleState {\n    if (action.type === LOCALE_CHANGE) {\n        return {\n            ...state,\n            current: action.locale,\n        };\n    }\n\n    return state;\n}\n\nconst localeReducer = withClientState(localeBaseReducer, LOCALE_NAMESPACE);\n\nexport default localeReducer;\n"]},"metadata":{},"sourceType":"module"}