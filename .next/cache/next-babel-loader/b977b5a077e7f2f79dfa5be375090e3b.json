{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// application\nimport { QUICKVIEW_CLOSE, QUICKVIEW_OPEN } from './quickviewActionTypes';\nvar initialState = {\n  open: false,\n  product: null\n};\nexport var QUICKVIEW_NAMESPACE = 'quickview';\nexport default function quickviewReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState = state;\n\n  if (action.type === QUICKVIEW_OPEN) {\n    newState = _objectSpread(_objectSpread({}, state), {}, {\n      open: true,\n      product: JSON.parse(JSON.stringify(action.product))\n    });\n  } else if (action.type === QUICKVIEW_CLOSE) {\n    newState = _objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    });\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/store/quickview/quickviewReducer.ts"],"names":["QUICKVIEW_CLOSE","QUICKVIEW_OPEN","initialState","open","product","QUICKVIEW_NAMESPACE","quickviewReducer","state","action","newState","type","JSON","parse","stringify"],"mappings":";;;;;;AAAA;AACA,SAASA,eAAT,EAA0BC,cAA1B,QAAiE,wBAAjE;AAGA,IAAMC,YAA4B,GAAG;AACjCC,EAAAA,IAAI,EAAE,KAD2B;AAEjCC,EAAAA,OAAO,EAAE;AAFwB,CAArC;AAKA,OAAO,IAAMC,mBAAmB,GAAG,WAA5B;AAEP,eAAe,SAASC,gBAAT,GAAyE;AAAA,MAA/CC,KAA+C,uEAAvCL,YAAuC;AAAA,MAAzBM,MAAyB;AACpF,MAAIC,QAAQ,GAAGF,KAAf;;AAEA,MAAIC,MAAM,CAACE,IAAP,KAAgBT,cAApB,EAAoC;AAChCQ,IAAAA,QAAQ,mCACDF,KADC;AAEJJ,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,OAAO,EAAEO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,MAAM,CAACJ,OAAtB,CAAX;AAHL,MAAR;AAKH,GAND,MAMO,IAAII,MAAM,CAACE,IAAP,KAAgBV,eAApB,EAAqC;AACxCS,IAAAA,QAAQ,mCACDF,KADC;AAEJJ,MAAAA,IAAI,EAAE;AAFF,MAAR;AAIH;;AAED,SAAOM,QAAP;AACH","sourcesContent":["// application\nimport { QUICKVIEW_CLOSE, QUICKVIEW_OPEN, QuickviewAction } from './quickviewActionTypes';\nimport { QuickviewState } from './quickviewTypes';\n\nconst initialState: QuickviewState = {\n    open: false,\n    product: null,\n};\n\nexport const QUICKVIEW_NAMESPACE = 'quickview';\n\nexport default function quickviewReducer(state = initialState, action: QuickviewAction) {\n    let newState = state;\n\n    if (action.type === QUICKVIEW_OPEN) {\n        newState = {\n            ...state,\n            open: true,\n            product: JSON.parse(JSON.stringify(action.product)),\n        };\n    } else if (action.type === QUICKVIEW_CLOSE) {\n        newState = {\n            ...state,\n            open: false,\n        };\n    }\n\n    return newState;\n}\n"]},"metadata":{},"sourceType":"module"}