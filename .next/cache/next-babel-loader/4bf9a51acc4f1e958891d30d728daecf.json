{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\header\\\\IndicatorCart.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '../shared/AppLink';\nimport AsyncAction from '../shared/AsyncAction';\n\nvar GetQoute = function GetQoute(props) {\n  return __jsx(\"svg\", props, __jsx(\"path\", {\n    d: \"M13.3 8.8c0-.4-.3-.8-.7-.8H5c-.5 0-.8.4-.8.8s.3.7.8.7h7.6c.4 0 .7-.3.7-.7zM5 11c-.4 0-.7.3-.7.7 0 .4.3.7.7.7h4.6c.4 0 .7-.3.7-.7 0-.4-.3-.7-.7-.7H5z\"\n  }), __jsx(\"path\", {\n    d: \"M6.7 18.1H4.2c-.8 0-1.5-.7-1.5-1.5v-13c0-.8.7-1.5 1.5-1.5h9.1c.8 0 1.5.7 1.5 1.5v4.5c0 .4.3.7.7.7.4 0 .7-.3.7-.7V3.6c0-1.6-1.3-3-3-3h-9c-1.6 0-3 1.3-3 3v13c0 1.6 1.3 3 3 3h2.5c.4 0 .7-.3.7-.7 0-.5-.3-.8-.7-.8z\"\n  }), __jsx(\"path\", {\n    d: \"M17.6 11.3c-.9-.9-2.3-.9-3.1 0l-4.1 4.1c-.1.1-.1.2-.2.3l-.9 2.9c-.1.3 0 .5.2.7.1.1.3.2.5.2h.2l3-.8c.1 0 .2-.1.3-.2l4.1-4c.9-.9.9-2.3 0-3.2zm-5 6l-1.5.4.4-1.4 2.7-2.7 1 1-2.6 2.7zm3.9-3.9l-.1.1-1-1 .1-.1c.3-.3.8-.3 1 0 .3.3.3.7 0 1zM12.6 5.1H5c-.4 0-.7.3-.7.7s.2.7.7.7h7.6c.4 0 .7-.3.7-.7s-.3-.7-.7-.7z\"\n  }));\n};\n\nGetQoute.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 20 20\"\n};\n\nvar Cross10Svg = function Cross10Svg(props) {\n  return __jsx(\"svg\", props, __jsx(\"path\", {\n    d: \"M8.8 8.8c-.4.4-1 .4-1.4 0L5 6.4 2.6 8.8c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L3.6 5 1.2 2.6c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0L5 3.6l2.4-2.4c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L6.4 5l2.4 2.4c.4.4.4 1 0 1.4z\"\n  }));\n};\n\nCross10Svg.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"10\",\n  height: \"10\"\n};\nimport CurrencyFormat from '../shared/CurrencyFormat';\nimport Indicator from './Indicator';\nimport url from '../../services/url';\nimport { useCart, useCartRemoveItem } from '../../store/cart/cartHooks';\n\nfunction IndicatorCart() {\n  const cart = useCart();\n  const cartRemoveItem = useCartRemoveItem();\n  let dropdown;\n  let totals;\n\n  if (cart.totals.length > 0) {\n    totals = cart.totals.map((total, index) => __jsx(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, total.title), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, __jsx(CurrencyFormat, {\n      value: total.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }))));\n    totals = __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"Subtotal\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, __jsx(CurrencyFormat, {\n      value: cart.subtotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }))), totals);\n  }\n\n  const items = cart.items.map(item => {\n    let options;\n    let image;\n\n    if (item.options) {\n      options = __jsx(\"ul\", {\n        className: \"dropcart__product-options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, item.options.map((option, index) => __jsx(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, `${option.optionTitle}: ${option.valueTitle}`)));\n    }\n\n    if (item.product.images.length) {\n      image = __jsx(\"div\", {\n        className: \"product-image dropcart__product-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(AppLink, {\n        href: url.product(item.product),\n        className: \"product-image__body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        className: \"product-image__img\",\n        src: item.product.images[0],\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      })));\n    }\n\n    const removeButton = __jsx(AsyncAction, {\n      action: () => cartRemoveItem(item.id),\n      render: ({\n        run,\n        loading\n      }) => {\n        const classes = classNames('dropcart__product-remove btn btn-light btn-sm btn-svg-icon', {\n          'btn-loading': loading\n        });\n        return __jsx(\"button\", {\n          type: \"button\",\n          onClick: run,\n          className: classes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, __jsx(Cross10Svg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    });\n\n    return __jsx(\"div\", {\n      key: item.id,\n      className: \"dropcart__product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, image, __jsx(\"div\", {\n      className: \"dropcart__product-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"dropcart__product-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, __jsx(AppLink, {\n      href: url.product(item.product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, item.product.name)), options, __jsx(\"div\", {\n      className: \"dropcart__product-meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"dropcart__product-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, item.quantity))), removeButton);\n  });\n\n  if (cart.quantity) {\n    dropdown = __jsx(\"div\", {\n      className: \"dropcart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"dropcart__products-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, items), __jsx(\"div\", {\n      className: \"dropcart__buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, __jsx(AppLink, {\n      href: url.cart(),\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"View Cart\"), __jsx(AppLink, {\n      href: url.checkout(),\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Checkout\")));\n  } else {\n    dropdown = __jsx(\"div\", {\n      className: \"dropcart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"dropcart__empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Your cart is empty!\"));\n  }\n\n  return __jsx(Indicator, {\n    url: \"/get-quote\",\n    dropdown: dropdown,\n    value: cart.quantity,\n    icon: __jsx(GetQoute, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 85\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default IndicatorCart;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/header/IndicatorCart.tsx"],"names":["React","classNames","AppLink","AsyncAction","GetQoute","Cross10Svg","CurrencyFormat","Indicator","url","useCart","useCartRemoveItem","IndicatorCart","cart","cartRemoveItem","dropdown","totals","length","map","total","index","title","price","subtotal","items","item","options","image","option","optionTitle","valueTitle","product","images","removeButton","id","run","loading","classes","name","quantity","checkout"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\n\n// application\nimport AppLink from '../shared/AppLink';\nimport AsyncAction from '../shared/AsyncAction';\nimport GetQoute from '../../svg/cart-20.svg';\nimport Cross10Svg from '../../svg/cross-10.svg';\nimport CurrencyFormat from '../shared/CurrencyFormat';\nimport Indicator from './Indicator';\nimport url from '../../services/url';\nimport { useCart, useCartRemoveItem } from '../../store/cart/cartHooks';\n\nfunction IndicatorCart() {\n    const cart = useCart();\n    const cartRemoveItem = useCartRemoveItem();\n    let dropdown;\n    let totals;\n\n    if (cart.totals.length > 0) {\n        totals = cart.totals.map((total, index) => (\n            <tr key={index}>\n                <th>{total.title}</th>\n                <td><CurrencyFormat value={total.price} /></td>\n            </tr>\n        ));\n\n        totals = (\n            <React.Fragment>\n                <tr>\n                    <th>Subtotal</th>\n                    <td><CurrencyFormat value={cart.subtotal} /></td>\n                </tr>\n                {totals}\n            </React.Fragment>\n        );\n    }\n\n    const items = cart.items.map((item) => {\n        let options;\n        let image;\n\n        if (item.options) {\n            options = (\n                <ul className=\"dropcart__product-options\">\n                    {item.options.map((option, index) => (\n                        <li key={index}>{`${option.optionTitle}: ${option.valueTitle}`}</li>\n                    ))}\n                </ul>\n            );\n        }\n\n        if (item.product.images.length) {\n            image = (\n                <div className=\"product-image dropcart__product-image\">\n                    <AppLink href={url.product(item.product)} className=\"product-image__body\">\n                        <img className=\"product-image__img\" src={item.product.images[0]} alt=\"\" />\n                    </AppLink>\n                </div>\n            );\n        }\n\n        const removeButton = (\n            <AsyncAction\n                action={() => cartRemoveItem(item.id)}\n                render={({ run, loading }) => {\n                    const classes = classNames('dropcart__product-remove btn btn-light btn-sm btn-svg-icon', {\n                        'btn-loading': loading,\n                    });\n\n                    return (\n                        <button type=\"button\" onClick={run} className={classes}>\n                            <Cross10Svg />\n                        </button>\n                    );\n                }}\n            />\n        );\n\n        return (\n            <div key={item.id} className=\"dropcart__product\">\n                {image}\n                <div className=\"dropcart__product-info\">\n                    <div className=\"dropcart__product-name\">\n                        <AppLink href={url.product(item.product)}>{item.product.name}</AppLink>\n                    </div>\n                    {options}\n                    <div className=\"dropcart__product-meta\">\n                        <span className=\"dropcart__product-quantity\">{item.quantity}</span>\n                        {/* {' × '} */}\n                        {/* <span className=\"dropcart__product-price\"><CurrencyFormat value={item.price} /></span> */}\n                    </div>\n                </div>\n                {removeButton}\n            </div>\n        );\n    });\n\n    if (cart.quantity) {\n        dropdown = (\n            <div className=\"dropcart\">\n                <div className=\"dropcart__products-list\">\n                    {items}\n                </div>\n\n\n                <div className=\"dropcart__buttons\">\n                    <AppLink href={url.cart()} className=\"btn btn-secondary\">View Cart</AppLink>\n                    <AppLink href={url.checkout()} className=\"btn btn-primary\">Checkout</AppLink>\n                </div>\n            </div>\n        );\n    } else {\n        dropdown = (\n            <div className=\"dropcart\">\n                <div className=\"dropcart__empty\">\n                    Your cart is empty!\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <Indicator url=\"/get-quote\" dropdown={dropdown} value={cart.quantity} icon={<GetQoute/>} />\n    );\n}\n\nexport default IndicatorCart;\n"]},"metadata":{},"sourceType":"module"}