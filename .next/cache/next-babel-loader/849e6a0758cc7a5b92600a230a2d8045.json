{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\neo.co.th\\\\nextapp\\\\src\\\\components\\\\header\\\\Menu.tsx\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '../shared/AppLink';\n\nvar ArrowRoundedRight6x9Svg = function ArrowRoundedRight6x9Svg(props) {\n  return __jsx(\"svg\", props, __jsx(\"path\", {\n    d: \"M.4 8.8c-.4-.4-.5-1-.1-1.4l3-2.9-3-2.9C-.1 1.2-.1.5.4.2c.4-.3.9-.3 1.3.1L6 4.5 1.6 8.7c-.3.4-.9.4-1.2.1z\"\n  }));\n};\n\nArrowRoundedRight6x9Svg.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"6\",\n  height: \"9\"\n};\n\nfunction Menu(props) {\n  const {\n    layout = 'classic',\n    withIcons = false,\n    items = [],\n    onClick = () => {}\n  } = props;\n\n  const renderLink = (item, content) => {\n    let link;\n\n    if (item.url) {\n      link = __jsx(AppLink, {\n        href: item.url,\n        onClick: () => onClick && onClick(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }, content);\n    } else {\n      link = __jsx(\"button\", {\n        type: \"button\",\n        onClick: () => onClick && onClick(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }\n      }, content);\n    }\n\n    return link;\n  };\n\n  const itemsList = items.map((item, index) => {\n    let arrow;\n    let submenu;\n    let icon;\n\n    if (item.children && item.children.length) {\n      arrow = __jsx(ArrowRoundedRight6x9Svg, {\n        className: \"menu__arrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      });\n    }\n\n    if (item.children && item.children.length) {\n      submenu = __jsx(\"div\", {\n        className: \"menu__submenu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(Menu, {\n        items: item.children,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (withIcons && item.icon) {\n      icon = __jsx(\"div\", {\n        className: \"menu__icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, __jsx(\"img\", {\n        src: item.icon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return __jsx(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, renderLink(item, __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, icon, item.title, arrow)), submenu);\n  });\n  const classes = classNames(`menu menu--layout--${layout}`, {\n    'menu--with-icons': withIcons\n  });\n  return __jsx(\"ul\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, itemsList);\n}\n\nexport default Menu;","map":{"version":3,"sources":["D:/xampp/htdocs/neo.co.th/nextapp/src/components/header/Menu.tsx"],"names":["React","classNames","AppLink","ArrowRoundedRight6x9Svg","Menu","props","layout","withIcons","items","onClick","renderLink","item","content","link","url","itemsList","map","index","arrow","submenu","icon","children","length","title","classes"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;;IACOC,uB,YAAAA,uB;;;;;;AAAAA,uB;;;;;;AAYP,SAASC,IAAT,CAAmCC,KAAnC,EAAwD;AACpD,QAAM;AACFC,IAAAA,MAAM,GAAG,SADP;AAEFC,IAAAA,SAAS,GAAG,KAFV;AAGFC,IAAAA,KAAK,GAAG,EAHN;AAIFC,IAAAA,OAAO,GAAG,MAAM,CAAE;AAJhB,MAKFJ,KALJ;;AAOA,QAAMK,UAAU,GAAG,CAACC,IAAD,EAAUC,OAAV,KAAuC;AACtD,QAAIC,IAAJ;;AAEA,QAAIF,IAAI,CAACG,GAAT,EAAc;AACVD,MAAAA,IAAI,GAAG,MAAC,OAAD;AAAS,QAAA,IAAI,EAAEF,IAAI,CAACG,GAApB;AAAyB,QAAA,OAAO,EAAE,MAAML,OAAO,IAAIA,OAAO,CAACE,IAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmEC,OAAnE,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,IAAI,GAAG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMJ,OAAO,IAAIA,OAAO,CAACE,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgEC,OAAhE,CAAP;AACH;;AAED,WAAOC,IAAP;AACH,GAVD;;AAYA,QAAME,SAAS,GAAGP,KAAK,CAACQ,GAAN,CAAU,CAACL,IAAD,EAAOM,KAAP,KAAiB;AACzC,QAAIC,KAAJ;AACA,QAAIC,OAAJ;AACA,QAAIC,IAAJ;;AAEA,QAAIT,IAAI,CAACU,QAAL,IAAiBV,IAAI,CAACU,QAAL,CAAcC,MAAnC,EAA2C;AACvCJ,MAAAA,KAAK,GAAG,MAAC,uBAAD;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AAED,QAAIP,IAAI,CAACU,QAAL,IAAiBV,IAAI,CAACU,QAAL,CAAcC,MAAnC,EAA2C;AACvCH,MAAAA,OAAO,GACH;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAER,IAAI,CAACU,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;AAED,QAAId,SAAS,IAAII,IAAI,CAACS,IAAtB,EAA4B;AACxBA,MAAAA,IAAI,GACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAET,IAAI,CAACS,IAAf;AAAqB,QAAA,GAAG,EAAC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;AAED,WACI;AAAI,MAAA,GAAG,EAAEH,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAACC,IAAD,EACP,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,IADL,EAEKT,IAAI,CAACY,KAFV,EAGKL,KAHL,CADO,CADf,EAQKC,OARL,CADJ;AAYH,GArCiB,CAAlB;AAuCA,QAAMK,OAAO,GAAGvB,UAAU,CAAE,sBAAqBK,MAAO,EAA9B,EAAiC;AACvD,wBAAoBC;AADmC,GAAjC,CAA1B;AAIA,SACI;AAAI,IAAA,SAAS,EAAEiB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,SADL,CADJ;AAKH;;AAED,eAAeX,IAAf","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\n\n// application\nimport AppLink from '../shared/AppLink';\nimport ArrowRoundedRight6x9Svg from '../../svg/arrow-rounded-right-6x9.svg';\nimport { IMenuItem } from '../../interfaces/menus/menu';\n\nexport type MenuLayout = 'classic' | 'topbar';\n\nexport interface MenuProps<T extends IMenuItem> {\n    layout?: MenuLayout;\n    withIcons?: boolean;\n    items: T[];\n    onClick?: (item: T) => void;\n}\n\nfunction Menu<T extends IMenuItem>(props: MenuProps<T>) {\n    const {\n        layout = 'classic',\n        withIcons = false,\n        items = [],\n        onClick = () => {},\n    } = props;\n\n    const renderLink = (item: T, content: React.ReactNode) => {\n        let link;\n\n        if (item.url) {\n            link = <AppLink href={item.url} onClick={() => onClick && onClick(item)}>{content}</AppLink>;\n        } else {\n            link = <button type=\"button\" onClick={() => onClick && onClick(item)}>{content}</button>;\n        }\n\n        return link;\n    };\n\n    const itemsList = items.map((item, index) => {\n        let arrow;\n        let submenu;\n        let icon;\n\n        if (item.children && item.children.length) {\n            arrow = <ArrowRoundedRight6x9Svg className=\"menu__arrow\" />;\n        }\n\n        if (item.children && item.children.length) {\n            submenu = (\n                <div className=\"menu__submenu\">\n                    <Menu items={item.children} />\n                </div>\n            );\n        }\n\n        if (withIcons && item.icon) {\n            icon = (\n                <div className=\"menu__icon\">\n                    <img src={item.icon} alt=\"\" />\n                </div>\n            );\n        }\n\n        return (\n            <li key={index}>\n                {renderLink(item, (\n                    <React.Fragment>\n                        {icon}\n                        {item.title}\n                        {arrow}\n                    </React.Fragment>\n                ))}\n                {submenu}\n            </li>\n        );\n    });\n\n    const classes = classNames(`menu menu--layout--${layout}`, {\n        'menu--with-icons': withIcons,\n    });\n\n    return (\n        <ul className={classes}>\n            {itemsList}\n        </ul>\n    );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}