module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../../../ssr-module-cache.js');
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "0" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		"static\\development\\pages\\_app.js": 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// require() chunk loading for javascript
/******/
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] !== 0) {
/******/ 			var chunk = require("../../../" + ({}[chunkId]||chunkId) + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// uncaught error handler for webpack runtime
/******/ 	__webpack_require__.oe = function(err) {
/******/ 		process.nextTick(function() {
/******/ 			throw err; // catch this error by using import().catch()
/******/ 		});
/******/ 	};
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../next-server/lib/router-context":
/*!**************************************************************!*\
  !*** external "next/dist/next-server/lib/router-context.js" ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/router-context.js");

/***/ }),

/***/ "../next-server/lib/utils":
/*!*****************************************************!*\
  !*** external "next/dist/next-server/lib/utils.js" ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/utils.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "react"));

var _url = __webpack_require__(/*! url */ "url");

var _utils = __webpack_require__(/*! ../next-server/lib/utils */ "../next-server/lib/utils");

var _router = _interopRequireDefault(__webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js"));

var _router2 = __webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js");

function isLocal(href) {
  const url = (0, _url.parse)(href, false, true);
  const origin = (0, _url.parse)((0, _utils.getLocationOrigin)(), false, true);
  return !url.host || url.protocol === origin.protocol && url.host === origin.host;
}

function memoizedFormatUrl(formatFunc) {
  let lastHref = null;
  let lastAs = null;
  let lastResult = null;
  return (href, as) => {
    if (lastResult && href === lastHref && as === lastAs) {
      return lastResult;
    }

    const result = formatFunc(href, as);
    lastHref = href;
    lastAs = as;
    lastResult = result;
    return result;
  };
}

function formatUrl(url) {
  return url && typeof url === 'object' ? (0, _utils.formatWithValidation)(url) : url;
}

let observer;
const listeners = new Map();
const IntersectionObserver = false ? undefined : null;
const prefetched = {};

function getObserver() {
  // Return shared instance of IntersectionObserver if already created
  if (observer) {
    return observer;
  } // Only create shared IntersectionObserver if supported in browser


  if (!IntersectionObserver) {
    return undefined;
  }

  return observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (!listeners.has(entry.target)) {
        return;
      }

      const cb = listeners.get(entry.target);

      if (entry.isIntersecting || entry.intersectionRatio > 0) {
        observer.unobserve(entry.target);
        listeners.delete(entry.target);
        cb();
      }
    });
  }, {
    rootMargin: '200px'
  });
}

const listenToIntersections = (el, cb) => {
  const observer = getObserver();

  if (!observer) {
    return () => {};
  }

  observer.observe(el);
  listeners.set(el, cb);
  return () => {
    try {
      observer.unobserve(el);
    } catch (err) {
      console.error(err);
    }

    listeners.delete(el);
  };
};

class Link extends _react.Component {
  constructor(props) {
    super(props);
    this.p = void 0;

    this.cleanUpListeners = () => {};

    this.formatUrls = memoizedFormatUrl((href, asHref) => {
      return {
        href: (0, _router2.addBasePath)(formatUrl(href)),
        as: asHref ? (0, _router2.addBasePath)(formatUrl(asHref)) : asHref
      };
    });

    this.linkClicked = e => {
      const {
        nodeName,
        target
      } = e.currentTarget;

      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {
        // ignore click for new tab / new window behavior
        return;
      }

      let {
        href,
        as
      } = this.formatUrls(this.props.href, this.props.as);

      if (!isLocal(href)) {
        // ignore click if it's outside our scope (e.g. https://google.com)
        return;
      }

      const {
        pathname
      } = window.location;
      href = (0, _url.resolve)(pathname, href);
      as = as ? (0, _url.resolve)(pathname, as) : href;
      e.preventDefault(); //  avoid scroll for urls with anchor refs

      let {
        scroll
      } = this.props;

      if (scroll == null) {
        scroll = as.indexOf('#') < 0;
      } // replace state instead of push if prop is present


      _router.default[this.props.replace ? 'replace' : 'push'](href, as, {
        shallow: this.props.shallow
      }).then(success => {
        if (!success) return;

        if (scroll) {
          window.scrollTo(0, 0);
          document.body.focus();
        }
      });
    };

    if (true) {
      if (props.prefetch) {
        console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated');
      }
    }

    this.p = props.prefetch !== false;
  }

  componentWillUnmount() {
    this.cleanUpListeners();
  }

  getPaths() {
    const {
      pathname
    } = window.location;
    const {
      href: parsedHref,
      as: parsedAs
    } = this.formatUrls(this.props.href, this.props.as);
    const resolvedHref = (0, _url.resolve)(pathname, parsedHref);
    return [resolvedHref, parsedAs ? (0, _url.resolve)(pathname, parsedAs) : resolvedHref];
  }

  handleRef(ref) {
    if (this.p && IntersectionObserver && ref && ref.tagName) {
      this.cleanUpListeners();
      const isPrefetched = prefetched[this.getPaths().join( // Join on an invalid URI character
      '%')];

      if (!isPrefetched) {
        this.cleanUpListeners = listenToIntersections(ref, () => {
          this.prefetch();
        });
      }
    }
  } // The function is memoized so that no extra lifecycles are needed
  // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html


  prefetch(options) {
    if (!this.p || true) return; // Prefetch the JSON page if asked (only in the client)

    const paths = this.getPaths(); // We need to handle a prefetch error here since we may be
    // loading with priority which can reject but we don't
    // want to force navigation since this is only a prefetch

    _router.default.prefetch(paths[
    /* href */
    0], paths[
    /* asPath */
    1], options).catch(err => {
      if (true) {
        // rethrow to show invalid URL errors
        throw err;
      }
    });

    prefetched[paths.join( // Join on an invalid URI character
    '%')] = true;
  }

  render() {
    let {
      children
    } = this.props;
    const {
      href,
      as
    } = this.formatUrls(this.props.href, this.props.as); // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag

    if (typeof children === 'string') {
      children = /*#__PURE__*/_react.default.createElement("a", null, children);
    } // This will return the first child, if multiple are provided it will throw an error


    const child = _react.Children.only(children);

    const props = {
      ref: el => {
        this.handleRef(el);

        if (child && typeof child === 'object' && child.ref) {
          if (typeof child.ref === 'function') child.ref(el);else if (typeof child.ref === 'object') {
            child.ref.current = el;
          }
        }
      },
      onMouseEnter: e => {
        if (child.props && typeof child.props.onMouseEnter === 'function') {
          child.props.onMouseEnter(e);
        }

        this.prefetch({
          priority: true
        });
      },
      onClick: e => {
        if (child.props && typeof child.props.onClick === 'function') {
          child.props.onClick(e);
        }

        if (!e.defaultPrevented) {
          this.linkClicked(e);
        }
      }
    }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
    // defined, we specify the current 'href', so that repetition is not needed by the user

    if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {
      props.href = as || href;
    } // Add the ending slash to the paths. So, we can serve the
    // "<page>/index.html" directly.


    if (false) {}

    return _react.default.cloneElement(child, props);
  }

}

if (true) {
  const warn = (0, _utils.execOnce)(console.error); // This module gets removed by webpack.IgnorePlugin

  const PropTypes = __webpack_require__(/*! prop-types */ "prop-types");

  const exact = __webpack_require__(/*! prop-types-exact */ "prop-types-exact"); // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.


  Link.propTypes = exact({
    href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    prefetch: PropTypes.bool,
    replace: PropTypes.bool,
    shallow: PropTypes.bool,
    passHref: PropTypes.bool,
    scroll: PropTypes.bool,
    children: PropTypes.oneOfType([PropTypes.element, (props, propName) => {
      const value = props[propName];

      if (typeof value === 'string') {
        warn(`Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>`);
      }

      return null;
    }]).isRequired
  });
}

var _default = Link;
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2.default;
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "../next-server/lib/router-context");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter.default;
/* global window */

const singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],

  ready(cb) {
    if (this.router) return cb();

    if (false) {}
  }

}; // Create public properties and methods of the router in the singletonRouter

const urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];
const routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
const coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get() {
    return _router2.default.events;
  }

});
urlPropertyFields.forEach(field => {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get() {
      const router = getRouter();
      return router[field];
    }

  });
});
coreMethodFields.forEach(field => {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = (...args) => {
    const router = getRouter();
    return router[field](...args);
  };
});
routerEvents.forEach(event => {
  singletonRouter.ready(() => {
    _router2.default.events.on(event, (...args) => {
      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;
      const _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField](...args);
        } catch (err) {
          // tslint:disable-next-line:no-console
          console.error(`Error when running the Router event: ${eventField}`); // tslint:disable-next-line:no-console

          console.error(`${err.message}\n${err.stack}`);
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    const message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports.default = _default;

function useRouter() {
  return _react.default.useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


const createRouter = (...args) => {
  singletonRouter.router = new _router2.default(...args);
  singletonRouter.readyCallbacks.forEach(cb => cb());
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  const _router = router;
  const instance = {};

  for (const property of urlPropertyFields) {
    if (typeof _router[property] === 'object') {
      instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

      continue;
    }

    instance[property] = _router[property];
  } // Events is a static property on the router, the router doesn't have to be initialized to use it


  instance.events = _router2.default.events;
  coreMethodFields.forEach(field => {
    instance[field] = (...args) => {
      return _router[field](...args);
    };
  });
  return instance;
}

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = `withRouter(${name})`;
  }

  return WithRouterWrapper;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = mitt;
/*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file

function mitt() {
  const all = Object.create(null);
  return {
    on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },

    off(type, handler) {
      if (all[type]) {
        // tslint:disable-next-line:no-bitwise
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },

    emit(type, ...evts) {
      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(handler => {
        handler(...evts);
      });
    }

  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.default = void 0;

var _url2 = __webpack_require__(/*! url */ "url");

var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* global __NEXT_DATA__ */
// tslint:disable:no-console


const basePath =  false || '';

function addBasePath(path) {
  return path.indexOf(basePath) !== 0 ? basePath + path : path;
}

function delBasePath(path) {
  return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;
}

function toRoute(path) {
  return path.replace(/\/$/, '') || '/';
}

const prepareRoute = path => toRoute(!path || path === '/' ? '/index' : path);

function fetchNextData(pathname, query, isServerRender, cb) {
  let attempts = isServerRender ? 3 : 1;

  function getResponse() {
    return fetch((0, _utils.formatWithValidation)({
      pathname: addBasePath( // @ts-ignore __NEXT_DATA__
      `/_next/data/${__NEXT_DATA__.buildId}${delBasePath(pathname)}.json`),
      query
    }), {
      // Cookies are required to be present for Next.js' SSG "Preview Mode".
      // Cookies may also be required for `getServerSideProps`.
      //
      // > `fetch` won’t send cookies, unless you set the credentials init
      // > option.
      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
      //
      // > For maximum browser compatibility when it comes to sending &
      // > receiving cookies, always supply the `credentials: 'same-origin'`
      // > option instead of relying on the default.
      // https://github.com/github/fetch#caveats
      credentials: 'same-origin'
    }).then(res => {
      if (!res.ok) {
        if (--attempts > 0 && res.status >= 500) {
          return getResponse();
        }

        throw new Error(`Failed to load static props`);
      }

      return res.json();
    });
  }

  return getResponse().then(data => {
    return cb ? cb(data) : data;
  }).catch(err => {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      ;
      err.code = 'PAGE_LOAD_ERROR';
    }

    throw err;
  });
}

class Router {
  /**
  * Map of all components loaded in `Router`
  */
  // Static Data Cache
  constructor(_pathname, _query, _as2, {
    initialProps,
    pageLoader,
    App,
    wrapApp,
    Component,
    err,
    subscription,
    isFallback
  }) {
    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;

    this.onPopState = e => {
      if (!e.state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        const {
          pathname,
          query
        } = this;
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname,
          query
        }), (0, _utils.getURL)());
        return;
      } // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (e.state && this.isSsr && e.state.as === this.asPath && (0, _url2.parse)(e.state.url).pathname === this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (this._bps && !this._bps(e.state)) {
        return;
      }

      const {
        url,
        as,
        options
      } = e.state;

      if (true) {
        if (typeof url === 'undefined' || typeof as === 'undefined') {
          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/vercel/next.js/popstate-state-empty');
        }
      }

      this.replace(url, as, options);
    };

    this._getStaticData = asPath => {
      const pathname = prepareRoute((0, _url2.parse)(asPath).pathname);
      return  false ? undefined : fetchNextData(pathname, null, this.isSsr, data => this.sdc[pathname] = data);
    };

    this._getServerData = asPath => {
      let {
        pathname,
        query
      } = (0, _url2.parse)(asPath, true);
      pathname = prepareRoute(pathname);
      return fetchNextData(pathname, query, this.isSsr);
    }; // represents the current component key


    this.route = toRoute(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component,
        props: initialProps,
        err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    this.asPath = // @ts-ignore this is temporarily global (attached to window)
    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as2;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;

    if (false) {}
  } // @deprecated backwards compatibility even though it's a private method.


  static _rewriteUrlForNextExport(url) {
    if (false) {} else {
      return url;
    }
  }

  update(route, mod) {
    const Component = mod.default || mod;
    const data = this.components[route];

    if (!data) {
      throw new Error(`Cannot update unavailable route: ${route}`);
    }

    const newData = Object.assign({}, data, {
      Component,
      __N_SSG: mod.__N_SSG,
      __N_SSP: mod.__N_SSP
    });
    this.components[route] = newData; // pages/_app.js updated

    if (route === '/_app') {
      this.notify(this.components[this.route]);
      return;
    }

    if (route === this.route) {
      this.notify(newData);
    }
  }

  reload() {
    window.location.reload();
  }
  /**
  * Go back in history
  */


  back() {
    window.history.back();
  }
  /**
  * Performs a `pushState` with arguments
  * @param url of the route
  * @param as masks `url` for the browser
  * @param options object you can define `shallow` and other options
  */


  push(url, as = url, options = {}) {
    return this.change('pushState', url, as, options);
  }
  /**
  * Performs a `replaceState` with arguments
  * @param url of the route
  * @param as masks `url` for the browser
  * @param options object you can define `shallow` and other options
  */


  replace(url, as = url, options = {}) {
    return this.change('replaceState', url, as, options);
  }

  change(method, _url, _as, options) {
    return new Promise((resolve, reject) => {
      if (!options._h) {
        this.isSsr = false;
      } // marking route changes as a navigation start entry


      if (_utils.ST) {
        performance.mark('routeChange');
      } // If url and as provided as an object representation,
      // we'll format them into the string version here.


      let url = typeof _url === 'object' ? (0, _utils.formatWithValidation)(_url) : _url;
      let as = typeof _as === 'object' ? (0, _utils.formatWithValidation)(_as) : _as;
      url = addBasePath(url);
      as = addBasePath(as); // Add the ending slash to the paths. So, we can serve the
      // "<page>/index.html" directly for the SSR page.

      if (false) {}

      this.abortComponentLoad(as); // If the url change is only related to a hash change
      // We should not proceed. We should only change the state.
      // WARNING: `_h` is an internal option for handing Next.js client-side
      // hydration. Your app should _never_ use this property. It may change at
      // any time without notice.

      if (!options._h && this.onlyAHashChange(as)) {
        this.asPath = as;
        Router.events.emit('hashChangeStart', as);
        this.changeState(method, url, as, options);
        this.scrollToHash(as);
        Router.events.emit('hashChangeComplete', as);
        return resolve(true);
      }

      const {
        pathname,
        query,
        protocol
      } = (0, _url2.parse)(url, true);

      if (!pathname || protocol) {
        if (true) {
          throw new Error(`Invalid href passed to router: ${url} https://err.sh/vercel/next.js/invalid-href-passed`);
        }

        return resolve(false);
      } // If asked to change the current URL we should reload the current page
      // (not location.reload() but reload getInitialProps and other Next.js stuffs)
      // We also need to set the method = replaceState always
      // as this should not go into the history (That's how browsers work)
      // We should compare the new asPath to the current asPath, not the url


      if (!this.urlIsNew(as)) {
        method = 'replaceState';
      }

      const route = toRoute(pathname);
      const {
        shallow = false
      } = options;

      if ((0, _isDynamic.isDynamicRoute)(route)) {
        const {
          pathname: asPathname
        } = (0, _url2.parse)(as);
        const routeRegex = (0, _routeRegex.getRouteRegex)(route);
        const routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);

        if (!routeMatch) {
          const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);

          if (missingParams.length > 0) {
            if (true) {
              console.warn(`Mismatching \`as\` and \`href\` failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \`href\`'s \`query\``);
            }

            return reject(new Error(`The provided \`as\` value (${asPathname}) is incompatible with the \`href\` value (${route}). ` + `Read more: https://err.sh/vercel/next.js/incompatible-href-as`));
          }
        } else {
          // Merge params into `query`, overwriting any specified in search
          Object.assign(query, routeMatch);
        }
      }

      Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result

      this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {
        const {
          error
        } = routeInfo;

        if (error && error.cancelled) {
          return resolve(false);
        }

        Router.events.emit('beforeHistoryChange', as);
        this.changeState(method, url, as, options);

        if (true) {
          const appComp = this.components['/_app'].Component;
          window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
        }

        this.set(route, pathname, query, as, routeInfo).then(() => {
          if (error) {
            Router.events.emit('routeChangeError', error, as);
            throw error;
          }

          Router.events.emit('routeChangeComplete', as);
          return resolve(true);
        });
      }, reject);
    });
  }

  changeState(method, url, as, options = {}) {
    if (true) {
      if (typeof window.history === 'undefined') {
        console.error(`Warning: window.history is not available.`);
        return;
      }

      if (typeof window.history[method] === 'undefined') {
        console.error(`Warning: window.history.${method} is not available`);
        return;
      }
    }

    if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
      window.history[method]({
        url,
        as,
        options
      }, // Most browsers currently ignores this parameter, although they may use it in the future.
      // Passing the empty string here should be safe against future changes to the method.
      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
      '', as);
    }
  }

  getRouteInfo(route, pathname, query, as, shallow = false) {
    const cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible
    // If the route is already rendered on the screen.

    if (shallow && cachedRouteInfo && this.route === route) {
      return Promise.resolve(cachedRouteInfo);
    }

    const handleError = (err, loadErrorFail) => {
      return new Promise(resolve => {
        if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {
          // If we can't load the page it could be one of following reasons
          //  1. Page doesn't exists
          //  2. Page does exist in a different zone
          //  3. Internal error while loading the page
          // So, doing a hard reload is the proper way to deal with this.
          window.location.href = as; // Changing the URL doesn't block executing the current code path.
          // So, we need to mark it as a cancelled error and stop the routing logic.

          err.cancelled = true; // @ts-ignore TODO: fix the control flow here

          return resolve({
            error: err
          });
        }

        if (err.cancelled) {
          // @ts-ignore TODO: fix the control flow here
          return resolve({
            error: err
          });
        }

        resolve(this.fetchComponent('/_error').then(res => {
          const {
            page: Component
          } = res;
          const routeInfo = {
            Component,
            err
          };
          return new Promise(resolve => {
            this.getInitialProps(Component, {
              err,
              pathname,
              query
            }).then(props => {
              routeInfo.props = props;
              routeInfo.error = err;
              resolve(routeInfo);
            }, gipErr => {
              console.error('Error in error page `getInitialProps`: ', gipErr);
              routeInfo.error = err;
              routeInfo.props = {};
              resolve(routeInfo);
            });
          });
        }).catch(err => handleError(err, true)));
      });
    };

    return new Promise((resolve, reject) => {
      if (cachedRouteInfo) {
        return resolve(cachedRouteInfo);
      }

      this.fetchComponent(route).then(res => resolve({
        Component: res.page,
        __N_SSG: res.mod.__N_SSG,
        __N_SSP: res.mod.__N_SSP
      }), reject);
    }).then(routeInfo => {
      const {
        Component,
        __N_SSG,
        __N_SSP
      } = routeInfo;

      if (true) {
        const {
          isValidElementType
        } = __webpack_require__(/*! react-is */ "react-is");

        if (!isValidElementType(Component)) {
          throw new Error(`The default export is not a React Component in page: "${pathname}"`);
        }
      }

      return this._getData(() => __N_SSG ? this._getStaticData(as) : __N_SSP ? this._getServerData(as) : this.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
      {
        pathname,
        query,
        asPath: as
      })).then(props => {
        routeInfo.props = props;
        this.components[route] = routeInfo;
        return routeInfo;
      });
    }).catch(handleError);
  }

  set(route, pathname, query, as, data) {
    this.isFallback = false;
    this.route = route;
    this.pathname = pathname;
    this.query = query;
    this.asPath = as;
    return this.notify(data);
  }
  /**
  * Callback to execute before replacing router state
  * @param cb callback to be executed
  */


  beforePopState(cb) {
    this._bps = cb;
  }

  onlyAHashChange(as) {
    if (!this.asPath) return false;
    const [oldUrlNoHash, oldHash] = this.asPath.split('#');
    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same

    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
      return true;
    } // If the urls are change, there's more than a hash change


    if (oldUrlNoHash !== newUrlNoHash) {
      return false;
    } // If the hash has changed, then it's a hash only change.
    // This check is necessary to handle both the enter and
    // leave hash === '' cases. The identity case falls through
    // and is treated as a next reload.


    return oldHash !== newHash;
  }

  scrollToHash(as) {
    const [, hash] = as.split('#'); // Scroll to top if the hash is just `#` with no value

    if (hash === '') {
      window.scrollTo(0, 0);
      return;
    } // First we check if the element by id is found


    const idEl = document.getElementById(hash);

    if (idEl) {
      idEl.scrollIntoView();
      return;
    } // If there's no element with the id, we check the `name` property
    // To mirror browsers


    const nameEl = document.getElementsByName(hash)[0];

    if (nameEl) {
      nameEl.scrollIntoView();
    }
  }

  urlIsNew(asPath) {
    return this.asPath !== asPath;
  }
  /**
  * Prefetch page code, you may wait for the data during page rendering.
  * This feature only works in production!
  * @param url the href of prefetched page
  * @param asPath the as path of the prefetched page
  */


  prefetch(url, asPath = url, options = {}) {
    return new Promise((resolve, reject) => {
      const {
        pathname,
        protocol
      } = (0, _url2.parse)(url);

      if (!pathname || protocol) {
        if (true) {
          throw new Error(`Invalid href passed to router: ${url} https://err.sh/vercel/next.js/invalid-href-passed`);
        }

        return;
      } // Prefetch is not supported in development mode because it would trigger on-demand-entries


      if (true) {
        return;
      }

      const route = delBasePath(toRoute(pathname));
      Promise.all([this.pageLoader.prefetchData(url, delBasePath(asPath)), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]).then(() => resolve(), reject);
    });
  }

  async fetchComponent(route) {
    let cancelled = false;

    const cancel = this.clc = () => {
      cancelled = true;
    };

    route = delBasePath(route);
    const componentResult = await this.pageLoader.loadPage(route);

    if (cancelled) {
      const error = new Error(`Abort fetching component for route: "${route}"`);
      error.cancelled = true;
      throw error;
    }

    if (cancel === this.clc) {
      this.clc = null;
    }

    return componentResult;
  }

  _getData(fn) {
    let cancelled = false;

    const cancel = () => {
      cancelled = true;
    };

    this.clc = cancel;
    return fn().then(data => {
      if (cancel === this.clc) {
        this.clc = null;
      }

      if (cancelled) {
        const err = new Error('Loading initial props cancelled');
        err.cancelled = true;
        throw err;
      }

      return data;
    });
  }

  getInitialProps(Component, ctx) {
    const {
      Component: App
    } = this.components['/_app'];

    const AppTree = this._wrapApp(App);

    ctx.AppTree = AppTree;
    return (0, _utils.loadGetInitialProps)(App, {
      AppTree,
      Component,
      router: this,
      ctx
    });
  }

  abortComponentLoad(as) {
    if (this.clc) {
      const e = new Error('Route Cancelled');
      e.cancelled = true;
      Router.events.emit('routeChangeError', e, as);
      this.clc();
      this.clc = null;
    }
  }

  notify(data) {
    return this.sub(data, this.components['/_app'].Component);
  }

}

exports.default = Router;
Router.events = (0, _mitt.default)();

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;

function getRouteMatcher(routeRegex) {
  const {
    re,
    groups
  } = routeRegex;
  return pathname => {
    const routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    const decode = param => {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        const err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    const params = {};
    Object.keys(groups).forEach(slugName => {
      const g = groups[slugName];
      const m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(entry => decode(entry)) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function getRouteRegex(normalizedRoute) {
  // Escape all characters that could be considered RegEx
  const escapedRoute = escapeRegex(normalizedRoute.replace(/\/$/, '') || '/');
  const groups = {};
  let groupIndex = 1;
  const parameterizedRoute = escapedRoute.replace(/\/\\\[([^/]+?)\\\](?=\/|$)/g, (_, $1) => {
    const isOptional = /^\\\[.*\\\]$/.test($1);

    if (isOptional) {
      $1 = $1.slice(2, -2);
    }

    const isCatchAll = /^(\\\.){3}/.test($1);

    if (isCatchAll) {
      $1 = $1.slice(6);
    }

    groups[$1 // Un-escape key
    .replace(/\\([|\\{}()[\]^$+*?.-])/g, '$1') // eslint-disable-next-line no-sequences
    ] = {
      pos: groupIndex++,
      repeat: isCatchAll
    };
    return isCatchAll ? isOptional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
  });
  let namedParameterizedRoute; // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (true) {
    namedParameterizedRoute = escapedRoute.replace(/\/\\\[([^/]+?)\\\](?=\/|$)/g, (_, $1) => {
      const isCatchAll = /^(\\\.){3}/.test($1);
      const key = $1 // Un-escape key
      .replace(/\\([|\\{}()[\]^$+*?.-])/g, '$1').replace(/^\.{3}/, '');
      return isCatchAll ? `/(?<${escapeRegex(key)}>.+?)` : `/(?<${escapeRegex(key)}>[^/]+?)`;
    });
  }

  return {
    re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),
    groups,
    namedRegex: namedParameterizedRoute ? `^${namedParameterizedRoute}(?:/)?$` : undefined
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;

var _url = __webpack_require__(/*! url */ "url");
/**
* Utils
*/


function execOnce(fn) {
  let used = false;
  let result;
  return (...args) => {
    if (!used) {
      used = true;
      result = fn(...args);
    }

    return result;
  };
}

function getLocationOrigin() {
  const {
    protocol,
    hostname,
    port
  } = window.location;
  return `${protocol}//${hostname}${port ? ':' + port : ''}`;
}

function getURL() {
  const {
    href
  } = window.location;
  const origin = getLocationOrigin();
  return href.substring(origin.length);
}

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

async function loadGetInitialProps(App, ctx) {
  if (true) {
    var _App$prototype;

    if ((_App$prototype = App.prototype) === null || _App$prototype === void 0 ? void 0 : _App$prototype.getInitialProps) {
      const message = `"${getDisplayName(App)}.getInitialProps()" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.`;
      throw new Error(message);
    }
  } // when called from _app `ctx` is nested in `ctx`


  const res = ctx.res || ctx.ctx && ctx.ctx.res;

  if (!App.getInitialProps) {
    if (ctx.ctx && ctx.Component) {
      // @ts-ignore pageProps default
      return {
        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
      };
    }

    return {};
  }

  const props = await App.getInitialProps(ctx);

  if (res && isResSent(res)) {
    return props;
  }

  if (!props) {
    const message = `"${getDisplayName(App)}.getInitialProps()" should resolve to an object. But found "${props}" instead.`;
    throw new Error(message);
  }

  if (true) {
    if (Object.keys(props).length === 0 && !ctx.ctx) {
      console.warn(`${getDisplayName(App)} returned an empty object from \`getInitialProps\`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps`);
    }
  }

  return props;
}

const urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;

function formatWithValidation(url, options) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(key => {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn(`Unknown key passed via urlObject into url.format: ${key}`);
        }
      });
    }
  }

  return (0, _url.format)(url, options);
}

const SP = typeof performance !== 'undefined';
exports.SP = SP;
const ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/client/link */ "./node_modules/next/dist/client/link.js")


/***/ }),

/***/ "./src/api/shop.ts":
/*!*************************!*\
  !*** ./src/api/shop.ts ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _fake_server_endpoints_categories__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fake-server/endpoints/categories */ "./src/fake-server/endpoints/categories.ts");
/* harmony import */ var _fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fake-server/endpoints/products */ "./src/fake-server/endpoints/products.ts");
/* eslint-disable @typescript-eslint/no-unused-vars,arrow-body-style */
// noinspection ES6UnusedImports


const shopApi = {
  /**
   * Returns array of categories.
   */
  getCategories: (options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/categories.json?depth=2
     *
     * where:
     * - 2 = options.depth
     */
    // return fetch(`https://example.com/api/categories.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_categories__WEBPACK_IMPORTED_MODULE_0__["getCategories"])(options);
  },

  /**
   * Returns category by slug.
   */
  getCategoryBySlug: (slug, options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/categories/power-tools.json?depth=2
     *
     * where:
     * - power-tools = slug
     * - 2           = options.depth
     */
    // return fetch(`https://example.com/api/categories/${slug}.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_categories__WEBPACK_IMPORTED_MODULE_0__["getCategoryBySlug"])(slug, options);
  },

  /**
   * Returns product.
   */
  getProductBySlug: slug => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/products/screwdriver-a2017.json
     *
     * where:
     * - screwdriver-a2017 = slug
     */
    // return fetch(`https://example.com/api/products/${slug}.json`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getProductBySlug"])(slug);
  },

  /**
   * Returns array of related products.
   */
  getRelatedProducts: (slug, options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/shop/products/screwdriver-a2017/related.json&limit=3
     *
     * where:
     * - screwdriver-a2017 = slug
     * - limit             = options.limit
     */
    // return fetch(`https://example.com/api/products/${slug}/related.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getRelatedProducts"])(slug, options);
  },

  /**
   * Return products list.
   */
  getProductsList: (options = {}, filters = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/products.json?page=2&limit=12&sort=name_desc&filter_category=screwdriwers&filter_price=500-1000
     *
     * where:
     * - page            = options.page
     * - limit           = options.limit
     * - sort            = options.sort
     * - filter_category = filters.category
     * - filter_price    = filters.price
     */
    // const params = { ...options };
    //
    // Object.keys(filters).forEach((slug) => {
    //     params[`filter_${slug}`] = filters[slug];
    // });
    //
    // return fetch(`https://example.com/api/products.json?${qs.stringify(params)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getProductsList"])(options, filters);
  },

  /**
   * Returns array of featured products.
   */
  getFeaturedProducts: (options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/shop/featured-products.json?limit=3&category=power-tools
     *
     * where:
     * - 3           = options.limit
     * - power-tools = options.category
     */
    // return fetch(`https://example.com/api/featured-products.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getFeaturedProducts"])(options);
  },

  /**
   * Returns array of latest products.
   */
  getLatestProducts: (options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/shop/latest-products.json?limit=3&category=power-tools
     *
     * where:
     * - 3           = options.limit
     * - power-tools = options.category
     */
    // return fetch(`https://example.com/api/latest-products.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getLatestProducts"])(options);
  },

  /**
   * Returns an array of top rated products.
   */
  getTopRatedProducts: (options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/shop/top-rated-products.json?limit=3&category=power-tools
     *
     * where:
     * - 3           = options.limit
     * - power-tools = options.category
     */
    // return fetch(`https://example.com/api/top-rated-products.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getTopRatedProducts"])(options);
  },

  /**
   * Returns an array of discounted products.
   */
  getDiscountedProducts: (options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/shop/discounted-products.json?limit=3&category=power-tools
     *
     * where:
     * - 3           = options.limit
     * - power-tools = options.category
     */
    // return fetch(`https://example.com/api/discounted-products.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getDiscountedProducts"])(options);
  },

  /**
   * Returns an array of most popular products.
   */
  getPopularProducts: (options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/shop/popular-products.json?limit=3&category=power-tools
     *
     * where:
     * - 3           = options.limit
     * - power-tools = options.category
     */
    // return fetch(`https://example.com/api/popular-products.json?${qs.stringify(options)}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getPopularProducts"])(options);
  },

  /**
   * Returns search suggestions.
   */
  getSuggestions: (query, options = {}) => {
    /**
     * This is what your API endpoint might look like:
     *
     * https://example.com/api/search/suggestions.json?query=screwdriver&limit=5&category=power-tools
     *
     * where:
     * - screwdriver = query
     * - 5           = options.limit
     * - power-tools = options.category
     */
    // return fetch(`https://example.com/api/search/suggestions.json?${qs.stringify({ ...options, query })}`)
    //     .then((response) => response.json());
    // This is for demonstration purposes only. Remove it and use the code above.
    return Object(_fake_server_endpoints_products__WEBPACK_IMPORTED_MODULE_1__["getSuggestions"])(query, options);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (shopApi);

/***/ }),

/***/ "./src/components/Layout.tsx":
/*!***********************************!*\
  !*** ./src/components/Layout.tsx ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-toastify */ "react-toastify");
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_toastify__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _footer_Footer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./footer/Footer */ "./src/components/footer/Footer.tsx");
/* harmony import */ var _header_Header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./header/Header */ "./src/components/header/Header.tsx");
/* harmony import */ var _mobile_MobileHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mobile/MobileHeader */ "./src/components/mobile/MobileHeader.tsx");
/* harmony import */ var _mobile_MobileMenu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mobile/MobileMenu */ "./src/components/mobile/MobileMenu.tsx");
/* harmony import */ var _shared_Quickview__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./shared/Quickview */ "./src/components/shared/Quickview.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\Layout.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application







function Layout(props) {
  const {
    children,
    headerLayout
  } = props;
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 9
    }
  }, __jsx(react_toastify__WEBPACK_IMPORTED_MODULE_1__["ToastContainer"], {
    autoClose: 5000,
    hideProgressBar: true,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 13
    }
  }), __jsx(_shared_Quickview__WEBPACK_IMPORTED_MODULE_6__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 13
    }
  }), __jsx(_mobile_MobileMenu__WEBPACK_IMPORTED_MODULE_5__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 13
    }
  }), __jsx("div", {
    className: "site",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 13
    }
  }, __jsx("header", {
    className: "site__header d-lg-none",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 17
    }
  }, __jsx(_mobile_MobileHeader__WEBPACK_IMPORTED_MODULE_4__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 21
    }
  })), __jsx("header", {
    className: "site__header d-lg-block d-none",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 17
    }
  }, __jsx(_header_Header__WEBPACK_IMPORTED_MODULE_3__["default"], {
    layout: headerLayout,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 21
    }
  })), __jsx("div", {
    className: "site__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 17
    }
  }, children), __jsx("footer", {
    className: "site__footer",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 17
    }
  }, __jsx(_footer_Footer__WEBPACK_IMPORTED_MODULE_2__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 21
    }
  }))));
}

/* harmony default export */ __webpack_exports__["default"] = (Layout);

/***/ }),

/***/ "./src/components/footer/Footer.tsx":
/*!******************************************!*\
  !*** ./src/components/footer/Footer.tsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _FooterContacts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FooterContacts */ "./src/components/footer/FooterContacts.tsx");
/* harmony import */ var _FooterNewsletter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FooterNewsletter */ "./src/components/footer/FooterNewsletter.tsx");
/* harmony import */ var _ToTop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToTop */ "./src/components/footer/ToTop.tsx");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _data_theme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data/theme */ "./src/data/theme.ts");
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\footer\\Footer.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
 // application



 // third-party

 // data stubs




const Footer = () => {
  const informationLinks = [{
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.aboutUs",
      defaultMessage: "About Us",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 19,
        columnNumber: 18
      }
    }),
    url: '/about-us'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.privacy",
      defaultMessage: "Privacy Policy",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 20,
        columnNumber: 18
      }
    }),
    url: '/privacy-policy'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.suppliers",
      defaultMessage: "Suppliers",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 21,
        columnNumber: 18
      }
    }),
    url: '/products/suppliers'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.categories",
      defaultMessage: "Categories",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 18
      }
    }),
    url: '/products/categories'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.knowledge",
      defaultMessage: "Knowledge",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 23,
        columnNumber: 18
      }
    }),
    url: '/knowledge'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.news",
      defaultMessage: "News",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 24,
        columnNumber: 18
      }
    }),
    url: '/news'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
      id: "topbar.contacts",
      defaultMessage: "Contact us",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 25,
        columnNumber: 18
      }
    }),
    url: '/contact-us'
  }];
  const linksList = informationLinks && informationLinks.map((item, index) => __jsx("li", {
    key: index,
    className: "footer-links__item",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 9
    }
  }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_6__["default"], {
    href: item.url,
    className: "footer-links__link",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 13
    }
  }, item.title)));
  return __jsx("div", {
    className: "site-footer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "container",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "site-footer__widgets",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "row",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "col-12 col-md-6 col-lg-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 25
    }
  }, __jsx(_FooterContacts__WEBPACK_IMPORTED_MODULE_1__["default"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 29
    }
  })), __jsx("div", {
    className: "col-12 col-md-6 col-lg-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 25
    }
  }, __jsx("div", {
    className: "site-footer__widget footer-links",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 29
    }
  }, __jsx("h5", {
    className: "footer-links__title",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 33
    }
  }, __jsx(react_intl__WEBPACK_IMPORTED_MODULE_4__["FormattedMessage"], {
    id: "topbar.information",
    defaultMessage: "Information",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 69
    }
  })), __jsx("ul", {
    className: "footer-links__list",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 33
    }
  }, linksList))), __jsx("div", {
    className: "col-12 col-md-12 col-lg-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 25
    }
  }, __jsx(_FooterNewsletter__WEBPACK_IMPORTED_MODULE_2__["default"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 29
    }
  })))), __jsx("div", {
    className: "site-footer__bottom",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "site-footer__copyright",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 21
    }
  }, "Powered by", ' ', __jsx("a", {
    href: "",
    rel: "noopener noreferrer",
    target: "_blank",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 25
    }
  }, "Neo Tech"), ' ', "\u2014 Design by", ' ', __jsx("a", {
    href: _data_theme__WEBPACK_IMPORTED_MODULE_5__["default"].author.profile_url,
    target: "_blank",
    rel: "noopener noreferrer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 25
    }
  }, _data_theme__WEBPACK_IMPORTED_MODULE_5__["default"].author.name)), __jsx("div", {
    className: "site-footer__payments",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 21
    }
  }))), __jsx(_ToTop__WEBPACK_IMPORTED_MODULE_3__["default"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 13
    }
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Footer);

/***/ }),

/***/ "./src/components/footer/FooterContacts.tsx":
/*!**************************************************!*\
  !*** ./src/components/footer/FooterContacts.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/theme */ "./src/data/theme.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\footer\\FooterContacts.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

 // data stubs



function FooterContacts() {
  return __jsx("div", {
    className: "site-footer__widget footer-contacts",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 11,
      columnNumber: 9
    }
  }, __jsx("h5", {
    className: "footer-contacts__title",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 13
    }
  }, __jsx(react_intl__WEBPACK_IMPORTED_MODULE_1__["FormattedMessage"], {
    id: "topbar.contacts",
    defaultMessage: "Contact Us",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 52
    }
  })), __jsx("div", {
    className: "footer-contacts__text",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 13
    }
  }), __jsx("ul", {
    className: "footer-contacts__contacts",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 13
    }
  }, __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 17
    }
  }, __jsx("i", {
    className: "footer-contacts__icon fas fa-globe-americas",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 21
    }
  }), _data_theme__WEBPACK_IMPORTED_MODULE_2__["default"].contacts.address), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 17
    }
  }, __jsx("i", {
    className: "footer-contacts__icon far fa-envelope",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 21
    }
  }), _data_theme__WEBPACK_IMPORTED_MODULE_2__["default"].contacts.email), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 17
    }
  }, __jsx("i", {
    className: "footer-contacts__icon fas fa-mobile-alt",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 21
    }
  }), `${_data_theme__WEBPACK_IMPORTED_MODULE_2__["default"].contacts.phone}, ${_data_theme__WEBPACK_IMPORTED_MODULE_2__["default"].contacts.phone}`), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 17
    }
  })));
}

/* harmony default export */ __webpack_exports__["default"] = (FooterContacts);

/***/ }),

/***/ "./src/components/footer/FooterNewsletter.tsx":
/*!****************************************************!*\
  !*** ./src/components/footer/FooterNewsletter.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_SocialLinks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/SocialLinks */ "./src/components/shared/SocialLinks.tsx");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_2__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\footer\\FooterNewsletter.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // application




function FooterNewsletter() {
  return __jsx("div", {
    className: "site-footer__widget footer-newsletter",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 10,
      columnNumber: 9
    }
  }, __jsx("h5", {
    className: "footer-newsletter__title",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 11,
      columnNumber: 13
    }
  }, __jsx(react_intl__WEBPACK_IMPORTED_MODULE_2__["FormattedMessage"], {
    id: "topbar.newsletter",
    defaultMessage: "Newsletter",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 11,
      columnNumber: 54
    }
  })), __jsx("div", {
    className: "footer-newsletter__text",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 13
    }
  }), __jsx("form", {
    action: "",
    className: "footer-newsletter__form",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 16,
      columnNumber: 13
    }
  }, __jsx("label", {
    className: "sr-only",
    htmlFor: "footer-newsletter-address",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 17
    }
  }, "Email Address"), __jsx("input", {
    type: "text",
    className: "footer-newsletter__form-input form-control",
    id: "footer-newsletter-address",
    placeholder: "Email Address...",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 17
    }
  }), __jsx("button", {
    type: "submit",
    className: "footer-newsletter__form-button btn btn-primary",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 17
    }
  }, "Subscribe")), __jsx("div", {
    className: "footer-newsletter__text footer-newsletter__text--social",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 13
    }
  }, "Follow us on social networks"), __jsx(_shared_SocialLinks__WEBPACK_IMPORTED_MODULE_1__["default"], {
    className: "footer-newsletter__social-links",
    shape: "circle",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 13
    }
  }));
}

/* harmony default export */ __webpack_exports__["default"] = (FooterNewsletter);

/***/ }),

/***/ "./src/components/footer/ToTop.tsx":
/*!*****************************************!*\
  !*** ./src/components/footer/ToTop.tsx ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\footer\\ToTop.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application

var ArrowRoundedUp13x8Svg = function ArrowRoundedUp13x8Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M11.4 7.7l-4.9-5-4.9 5c-.4.4-.9.4-1.3 0s-.4-.9 0-1.3L6.5 0l6.2 6.4c.4.4.3.9 0 1.3s-.9.4-1.3 0z"
  }));
};

ArrowRoundedUp13x8Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "13",
  height: "8"
};

function ToTop() {
  const {
    0: show,
    1: setShow
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const showFrom = 300;
  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('totop', {
    'totop--show': show
  });

  const onClick = () => {
    try {
      window.scrollTo({
        top: 0,
        left: 0,
        behavior: 'smooth'
      });
    } catch {
      window.scrollTo(0, 0);
    }
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    let state = false;

    const onScroll = () => {
      const newState = window.pageYOffset >= showFrom;

      if (state !== newState) {
        setShow(state = newState);
      }
    };

    onScroll();
    window.addEventListener('scroll', onScroll, {
      passive: true
    });
    return () => window.removeEventListener('scroll', onScroll, {
      passive: true
    });
  }, [setShow]);
  return __jsx("div", {
    className: classes,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "totop__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "totop__start",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 17
    }
  }), __jsx("div", {
    className: "totop__container container",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 17
    }
  }), __jsx("div", {
    className: "totop__end",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 17
    }
  }, __jsx("button", {
    type: "button",
    className: "totop__button",
    onClick: onClick,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 21
    }
  }, __jsx(ArrowRoundedUp13x8Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 25
    }
  })))));
}

/* harmony default export */ __webpack_exports__["default"] = (ToTop);

/***/ }),

/***/ "./src/components/header/Dropdown.tsx":
/*!********************************************!*\
  !*** ./src/components/header/Dropdown.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Menu */ "./src/components/header/Menu.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Dropdown.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application

var ArrowRoundedDown7x5Svg = function ArrowRoundedDown7x5Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M.3.3c.4-.4 1-.4 1.3 0l1.9 2 1.9-2c.4-.4 1-.4 1.3 0 .4.4.4.9 0 1.3L3.5 5 .3 1.6C-.1 1.2-.1.6.3.3z"
  }));
};

ArrowRoundedDown7x5Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "7",
  height: "5"
};


function Dropdown(props) {
  const {
    title,
    items,
    withIcons = false,
    onClick
  } = props;
  const {
    0: open,
    1: setOpen
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const wrapperRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);

  const handleButtonClick = () => {
    setOpen(prev => !prev);
  };

  const handleItemClick = item => {
    setOpen(false);

    if (onClick) {
      onClick(item);
    }
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const handleOutsideClick = event => {
      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {
        setOpen(false);
      }
    };

    document.addEventListener('mousedown', handleOutsideClick);
    return () => document.removeEventListener('mousedown', handleOutsideClick);
  }, [wrapperRef, setOpen]);
  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('topbar-dropdown', {
    'topbar-dropdown--opened': open
  });
  return __jsx("div", {
    className: classes,
    ref: wrapperRef,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 9
    }
  }, __jsx("button", {
    className: "topbar-dropdown__btn",
    type: "button",
    onClick: handleButtonClick,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 13
    }
  }, title, __jsx(ArrowRoundedDown7x5Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 17
    }
  })), __jsx("div", {
    className: "topbar-dropdown__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 13
    }
  }, __jsx(_Menu__WEBPACK_IMPORTED_MODULE_2__["default"], {
    layout: "topbar",
    withIcons: withIcons,
    items: items,
    onClick: handleItemClick,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 17
    }
  })));
}

/* harmony default export */ __webpack_exports__["default"] = (Dropdown);

/***/ }),

/***/ "./src/components/header/DropdownLanguage.tsx":
/*!****************************************************!*\
  !*** ./src/components/header/DropdownLanguage.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Dropdown */ "./src/components/header/Dropdown.tsx");
/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../i18n */ "./src/i18n/index.ts");
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\DropdownLanguage.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application





function DropdownLanguage() {
  const language = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__["useLanguage"])();
  const localeChange = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__["useLocaleChange"])();
  const items = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(() => _i18n__WEBPACK_IMPORTED_MODULE_3__["default"].map(eachLanguage => ({
    title: eachLanguage.name,
    language: eachLanguage,
    icon: eachLanguage.icon
  })), []);

  const title = __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 32,
      columnNumber: 9
    }
  }, __jsx(react_intl__WEBPACK_IMPORTED_MODULE_1__["FormattedMessage"], {
    id: "topbar.language",
    defaultMessage: "Language",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 13
    }
  }), ': ', __jsx("span", {
    className: "topbar__item-value",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 13
    }
  }, language.code));

  return __jsx(_Dropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    title: title,
    items: items,
    withIcons: true,
    onClick: item => localeChange(item.language.locale),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 9
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (DropdownLanguage);

/***/ }),

/***/ "./src/components/header/Header.tsx":
/*!******************************************!*\
  !*** ./src/components/header/Header.tsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _NavPanel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NavPanel */ "./src/components/header/NavPanel.tsx");
/* harmony import */ var _Topbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Topbar */ "./src/components/header/Topbar.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Header.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party




function Header(props) {
  const {
    layout = 'compact'
  } = props;
  return __jsx("div", {
    className: "site-header",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 9
    }
  }, __jsx(_Topbar__WEBPACK_IMPORTED_MODULE_2__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 13
    }
  }), __jsx("div", {
    className: "site-header__nav-panel",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 13
    }
  }, __jsx(_NavPanel__WEBPACK_IMPORTED_MODULE_1__["default"], {
    layout: layout,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 17
    }
  })));
}

/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(Header));

/***/ }),

/***/ "./src/components/header/Indicator.tsx":
/*!*********************************************!*\
  !*** ./src/components/header/Indicator.tsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Indicator.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// react
 // third-party

 // application



class Indicator extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  constructor(props) {
    super(props);

    _defineProperty(this, "wrapperRef", react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef());

    _defineProperty(this, "handleOutsideClick", event => {
      const {
        open
      } = this.state;

      if (this.wrapperRef.current && !this.wrapperRef.current.contains(event.target) && open) {
        this.close();
      }
    });

    _defineProperty(this, "handleButtonClick", event => {
      const {
        onClick,
        dropdown
      } = this.props;

      if (dropdown) {
        event.preventDefault();
      }

      this.toggle();

      if (onClick) {
        onClick(event);
      }
    });

    this.state = {
      open: false
    };
  }

  componentDidMount() {
    document.addEventListener('mousedown', this.handleOutsideClick);
  }

  componentDidUpdate(prevProps, prevState) {
    const {
      open
    } = this.state;
    const {
      onOpen,
      onClose
    } = this.props;

    if (open !== prevState.open) {
      if (open && onOpen) {
        onOpen();
      }

      if (!open && onClose) {
        onClose();
      }
    }
  }

  componentWillUnmount() {
    document.removeEventListener('mousedown', this.handleOutsideClick);
  }

  toggle() {
    this.setState(state => ({
      open: !state.open
    }));
  }

  open() {
    this.setState(() => ({
      open: true
    }));
  }

  close() {
    this.setState(() => ({
      open: false
    }));
  }

  render() {
    const {
      open
    } = this.state;
    const {
      url,
      className,
      icon
    } = this.props;
    const {
      value,
      dropdown
    } = this.props;
    let buttonElement;
    let dropdownElement;

    const title = __jsx("span", {
      className: "indicator__area",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 107,
        columnNumber: 13
      }
    }, icon, value !== undefined && __jsx("span", {
      className: "indicator__value",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 109,
        columnNumber: 41
      }
    }, value));

    if (url) {
      buttonElement = __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
        href: url,
        className: "indicator__button",
        onClick: this.handleButtonClick,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 115,
          columnNumber: 17
        }
      }, title);
    } else {
      buttonElement = __jsx("button", {
        type: "button",
        className: "indicator__button",
        onClick: this.handleButtonClick,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 121,
          columnNumber: 17
        }
      }, title);
    }

    if (dropdown) {
      dropdownElement = __jsx("div", {
        className: "indicator__dropdown",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 129,
          columnNumber: 17
        }
      }, dropdown);
    }

    const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()(`indicator indicator--trigger--click ${className}`, {
      'indicator--opened': open
    });
    return __jsx("div", {
      className: classes,
      ref: this.wrapperRef,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 140,
        columnNumber: 13
      }
    }, buttonElement, dropdownElement);
  }

}

/* harmony default export */ __webpack_exports__["default"] = (Indicator);

/***/ }),

/***/ "./src/components/header/IndicatorCart.tsx":
/*!*************************************************!*\
  !*** ./src/components/header/IndicatorCart.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _shared_AsyncAction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/AsyncAction */ "./src/components/shared/AsyncAction.tsx");
/* harmony import */ var _shared_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/CurrencyFormat */ "./src/components/shared/CurrencyFormat.tsx");
/* harmony import */ var _Indicator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Indicator */ "./src/components/header/Indicator.tsx");
/* harmony import */ var _services_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/url */ "./src/services/url.ts");
/* harmony import */ var _store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../store/cart/cartHooks */ "./src/store/cart/cartHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\IndicatorCart.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application




var GetQoute = function GetQoute(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M13.3 8.8c0-.4-.3-.8-.7-.8H5c-.5 0-.8.4-.8.8s.3.7.8.7h7.6c.4 0 .7-.3.7-.7zM5 11c-.4 0-.7.3-.7.7 0 .4.3.7.7.7h4.6c.4 0 .7-.3.7-.7 0-.4-.3-.7-.7-.7H5z"
  }), __jsx("path", {
    d: "M6.7 18.1H4.2c-.8 0-1.5-.7-1.5-1.5v-13c0-.8.7-1.5 1.5-1.5h9.1c.8 0 1.5.7 1.5 1.5v4.5c0 .4.3.7.7.7.4 0 .7-.3.7-.7V3.6c0-1.6-1.3-3-3-3h-9c-1.6 0-3 1.3-3 3v13c0 1.6 1.3 3 3 3h2.5c.4 0 .7-.3.7-.7 0-.5-.3-.8-.7-.8z"
  }), __jsx("path", {
    d: "M17.6 11.3c-.9-.9-2.3-.9-3.1 0l-4.1 4.1c-.1.1-.1.2-.2.3l-.9 2.9c-.1.3 0 .5.2.7.1.1.3.2.5.2h.2l3-.8c.1 0 .2-.1.3-.2l4.1-4c.9-.9.9-2.3 0-3.2zm-5 6l-1.5.4.4-1.4 2.7-2.7 1 1-2.6 2.7zm3.9-3.9l-.1.1-1-1 .1-.1c.3-.3.8-.3 1 0 .3.3.3.7 0 1zM12.6 5.1H5c-.4 0-.7.3-.7.7s.2.7.7.7h7.6c.4 0 .7-.3.7-.7s-.3-.7-.7-.7z"
  }));
};

GetQoute.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20"
};

var Cross10Svg = function Cross10Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M8.8 8.8c-.4.4-1 .4-1.4 0L5 6.4 2.6 8.8c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L3.6 5 1.2 2.6c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0L5 3.6l2.4-2.4c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L6.4 5l2.4 2.4c.4.4.4 1 0 1.4z"
  }));
};

Cross10Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "10",
  height: "10"
};





function IndicatorCart() {
  const cart = Object(_store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_7__["useCart"])();
  const cartRemoveItem = Object(_store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_7__["useCartRemoveItem"])();
  let dropdown;
  let totals;

  if (cart.totals.length > 0) {
    totals = cart.totals.map((total, index) => __jsx("tr", {
      key: index,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 25,
        columnNumber: 13
      }
    }, __jsx("th", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 26,
        columnNumber: 17
      }
    }, total.title), __jsx("td", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 27,
        columnNumber: 17
      }
    }, __jsx(_shared_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__["default"], {
      value: total.price,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 27,
        columnNumber: 21
      }
    }))));
    totals = __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 32,
        columnNumber: 13
      }
    }, __jsx("tr", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 33,
        columnNumber: 17
      }
    }, __jsx("th", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 34,
        columnNumber: 21
      }
    }, "Subtotal"), __jsx("td", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35,
        columnNumber: 21
      }
    }, __jsx(_shared_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__["default"], {
      value: cart.subtotal,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35,
        columnNumber: 25
      }
    }))), totals);
  }

  const items = cart.items.map(item => {
    let options;
    let image;

    if (item.options) {
      options = __jsx("ul", {
        className: "dropcart__product-options",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48,
          columnNumber: 17
        }
      }, item.options.map((option, index) => __jsx("li", {
        key: index,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 25
        }
      }, `${option.optionTitle}: ${option.valueTitle}`)));
    }

    if (item.product.images.length) {
      image = __jsx("div", {
        className: "product-image dropcart__product-image",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
        href: _services_url__WEBPACK_IMPORTED_MODULE_6__["default"].product(item.product),
        className: "product-image__body",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 21
        }
      }, __jsx("img", {
        className: "product-image__img",
        src: item.product.images[0],
        alt: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 25
        }
      })));
    }

    const removeButton = __jsx(_shared_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
      action: () => cartRemoveItem(item.id),
      render: ({
        run,
        loading
      }) => {
        const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('dropcart__product-remove btn btn-light btn-sm btn-svg-icon', {
          'btn-loading': loading
        });
        return __jsx("button", {
          type: "button",
          onClick: run,
          className: classes,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75,
            columnNumber: 25
          }
        }, __jsx(Cross10Svg, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 76,
            columnNumber: 29
          }
        }));
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 67,
        columnNumber: 13
      }
    });

    return __jsx("div", {
      key: item.id,
      className: "dropcart__product",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84,
        columnNumber: 13
      }
    }, image, __jsx("div", {
      className: "dropcart__product-info",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 86,
        columnNumber: 17
      }
    }, __jsx("div", {
      className: "dropcart__product-name",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 87,
        columnNumber: 21
      }
    }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
      href: _services_url__WEBPACK_IMPORTED_MODULE_6__["default"].product(item.product),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88,
        columnNumber: 25
      }
    }, item.product.name)), options, __jsx("div", {
      className: "dropcart__product-meta",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 91,
        columnNumber: 21
      }
    }, __jsx("span", {
      className: "dropcart__product-quantity",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 92,
        columnNumber: 25
      }
    }, item.quantity))), removeButton);
  });

  if (cart.quantity) {
    dropdown = __jsx("div", {
      className: "dropcart",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 104,
        columnNumber: 13
      }
    }, __jsx("div", {
      className: "dropcart__products-list",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 105,
        columnNumber: 17
      }
    }, items), __jsx("div", {
      className: "dropcart__buttons",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 110,
        columnNumber: 17
      }
    }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
      href: _services_url__WEBPACK_IMPORTED_MODULE_6__["default"].cart(),
      className: "btn btn-secondary",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 111,
        columnNumber: 21
      }
    }, "View Cart"), __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
      href: _services_url__WEBPACK_IMPORTED_MODULE_6__["default"].checkout(),
      className: "btn btn-primary",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 112,
        columnNumber: 21
      }
    }, "Checkout")));
  } else {
    dropdown = __jsx("div", {
      className: "dropcart",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 118,
        columnNumber: 13
      }
    }, __jsx("div", {
      className: "dropcart__empty",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119,
        columnNumber: 17
      }
    }, "Your cart is empty!"));
  }

  return __jsx(_Indicator__WEBPACK_IMPORTED_MODULE_5__["default"], {
    url: "/get-quote",
    dropdown: dropdown,
    value: cart.quantity,
    icon: __jsx(GetQoute, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 127,
        columnNumber: 85
      }
    }),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 9
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (IndicatorCart);

/***/ }),

/***/ "./src/components/header/IndicatorSearch.tsx":
/*!***************************************************!*\
  !*** ./src/components/header/IndicatorSearch.tsx ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Indicator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Indicator */ "./src/components/header/Indicator.tsx");
/* harmony import */ var _Search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Search */ "./src/components/header/Search.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\IndicatorSearch.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // application

var Cross20Svg = function Cross20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M17.71 17.71a.99.99 0 0 1-1.4 0L10 11.4l-6.31 6.31a.99.99 0 1 1-1.4-1.4L8.6 10 2.29 3.69a.99.99 0 1 1 1.4-1.4L10 8.6l6.31-6.31a.99.99 0 1 1 1.4 1.4L11.4 10l6.31 6.31a.99.99 0 0 1 0 1.4z"
  }));
};

Cross20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};



var Search20Svg = function Search20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M19.2 17.8s-.2.5-.5.8c-.4.4-.9.6-.9.6s-.9.7-2.8-1.6c-1.1-1.4-2.2-2.8-3.1-3.9-1 .8-2.4 1.3-3.9 1.3-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7c0 1.5-.5 2.9-1.3 4 1.1.8 2.5 2 4 3.1 2.3 1.7 1.5 2.7 1.5 2.7zM8 3C5.2 3 3 5.2 3 8s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5z"
  }));
};

Search20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};

function IndicatorSearch() {
  const inputRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const indicatorRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);

  const handleOpen = () => {
    if (inputRef.current) {
      inputRef.current.focus();
    }
  };

  const handleClose = () => {
    if (indicatorRef.current) {
      indicatorRef.current.close();
    }
  };

  const searchIcon = __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 9
    }
  }, __jsx(Search20Svg, {
    className: "indicator__icon",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 13
    }
  }), __jsx(Cross20Svg, {
    className: "indicator__icon indicator__icon--open",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 13
    }
  }));

  const searchDropdown = __jsx(_Search__WEBPACK_IMPORTED_MODULE_2__["default"], {
    context: "indicator",
    inputRef: inputRef,
    onClose: handleClose,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 9
    }
  });

  return __jsx(_Indicator__WEBPACK_IMPORTED_MODULE_1__["default"], {
    ref: indicatorRef,
    dropdown: searchDropdown,
    icon: searchIcon,
    onOpen: handleOpen,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (IndicatorSearch);

/***/ }),

/***/ "./src/components/header/Megamenu.tsx":
/*!********************************************!*\
  !*** ./src/components/header/Megamenu.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _MegamenuLinks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MegamenuLinks */ "./src/components/header/MegamenuLinks.tsx");
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Megamenu.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // application




function Megamenu(props) {
  const {
    menu,
    location = 'nav-links'
  } = props;
  const direction = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_2__["useDirection"])();

  if (!menu) {
    return null;
  }

  let menuStyle = {};
  let {
    image
  } = menu;

  if (image) {
    menuStyle = {
      backgroundImage: `url('${image}')`
    };
  }

  const columns = menu.columns.map((column, index) => __jsx("div", {
    key: index,
    className: `col-${column.size}`,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 9
    }
  }, __jsx(_MegamenuLinks__WEBPACK_IMPORTED_MODULE_1__["default"], {
    links: column.links,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 13
    }
  })));
  return __jsx("div", {
    className: `megamenu megamenu--${location}`,
    style: menuStyle,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "row",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 13
    }
  }, columns));
}

/* harmony default export */ __webpack_exports__["default"] = (Megamenu);

/***/ }),

/***/ "./src/components/header/MegamenuLinks.tsx":
/*!*************************************************!*\
  !*** ./src/components/header/MegamenuLinks.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\MegamenuLinks.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application



function MegamenuLinks(props) {
  const {
    links,
    depth = 0
  } = props;
  const linksList = links.map((link, index) => {
    let title = null;
    let subLinks = null;

    if (link.title) {
      title = __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
        href: link.url,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 24,
          columnNumber: 21
        }
      }, link.title);
    }

    if (link.children && link.children.length) {
      subLinks = __jsx(MegamenuLinks, {
        links: link.children,
        depth: depth + 1,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 28,
          columnNumber: 24
        }
      });
    }

    const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('megamenu__item', {
      'megamenu__item--with-submenu': subLinks
    });
    return __jsx("li", {
      key: index,
      className: classes,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 36,
        columnNumber: 13
      }
    }, title, subLinks);
  });
  return __jsx("ul", {
    className: `megamenu__links megamenu__links--level--${depth}`,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  }, linksList);
}

/* harmony default export */ __webpack_exports__["default"] = (MegamenuLinks);

/***/ }),

/***/ "./src/components/header/Menu.tsx":
/*!****************************************!*\
  !*** ./src/components/header/Menu.tsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Menu.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application



var ArrowRoundedRight6x9Svg = function ArrowRoundedRight6x9Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M.4 8.8c-.4-.4-.5-1-.1-1.4l3-2.9-3-2.9C-.1 1.2-.1.5.4.2c.4-.3.9-.3 1.3.1L6 4.5 1.6 8.7c-.3.4-.9.4-1.2.1z"
  }));
};

ArrowRoundedRight6x9Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "6",
  height: "9"
};

function Menu(props) {
  const {
    layout = 'classic',
    withIcons = false,
    items = [],
    onClick = () => {}
  } = props;

  const renderLink = (item, content) => {
    let link;

    if (item.url) {
      link = __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
        href: item.url,
        onClick: () => onClick && onClick(item),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 33,
          columnNumber: 20
        }
      }, content);
    } else {
      link = __jsx("button", {
        type: "button",
        onClick: () => onClick && onClick(item),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 20
        }
      }, content);
    }

    return link;
  };

  const itemsList = items.map((item, index) => {
    let arrow;
    let submenu;
    let icon;

    if (item.children && item.children.length) {
      arrow = __jsx(ArrowRoundedRight6x9Svg, {
        className: "menu__arrow",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47,
          columnNumber: 21
        }
      });
    }

    if (item.children && item.children.length) {
      submenu = __jsx("div", {
        className: "menu__submenu",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52,
          columnNumber: 17
        }
      }, __jsx(Menu, {
        items: item.children,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53,
          columnNumber: 21
        }
      }));
    }

    if (withIcons && item.icon) {
      icon = __jsx("div", {
        className: "menu__icon",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 17
        }
      }, __jsx("img", {
        src: item.icon,
        alt: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61,
          columnNumber: 21
        }
      }));
    }

    return __jsx("li", {
      key: index,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 67,
        columnNumber: 13
      }
    }, renderLink(item, __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 69,
        columnNumber: 21
      }
    }, icon, item.title, arrow)), submenu);
  });
  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()(`menu menu--layout--${layout}`, {
    'menu--with-icons': withIcons
  });
  return __jsx("ul", {
    className: classes,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 9
    }
  }, itemsList);
}

/* harmony default export */ __webpack_exports__["default"] = (Menu);

/***/ }),

/***/ "./src/components/header/NavLinks.tsx":
/*!********************************************!*\
  !*** ./src/components/header/NavLinks.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _Megamenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Megamenu */ "./src/components/header/Megamenu.tsx");
/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Menu */ "./src/components/header/Menu.tsx");
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
/* harmony import */ var _data_headerNavigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/headerNavigation */ "./src/data/headerNavigation.ts");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_7__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\NavLinks.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// react
 // third-party

 // application



var ArrowRoundedDown9x6Svg = function ArrowRoundedDown9x6Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M.2.4c.4-.4 1-.5 1.4-.1l2.9 3 2.9-3c.4-.4 1.1-.4 1.4.1.3.4.3.9-.1 1.3L4.5 6 .3 1.6C-.1 1.3-.1.7.2.4z"
  }));
};

ArrowRoundedDown9x6Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "9",
  height: "6"
};



 // third-party



function NavLinks() {
  const direction = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_5__["useDirection"])();

  const handleMouseEnter = event => {
    const item = event.currentTarget;
    const megamenu = item.querySelector('.nav-links__megamenu');

    if (megamenu) {
      const container = megamenu.offsetParent;
      const containerWidth = container.getBoundingClientRect().width;
      const megamenuWidth = megamenu.getBoundingClientRect().width;
      const itemOffsetLeft = item.offsetLeft;
      const megamenuPosition = Math.round(Math.min(itemOffsetLeft, containerWidth - megamenuWidth));
      megamenu.style.right = '';
      megamenu.style.left = `${megamenuPosition}px`;
    }
  };

  const linksList = _data_headerNavigation__WEBPACK_IMPORTED_MODULE_6__["default"].map((item, index) => {
    let arrow;
    let submenu;

    if (item.submenu) {
      arrow = __jsx(ArrowRoundedDown9x6Svg, {
        className: "nav-links__arrow",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 21
        }
      });
    }

    if (item.submenu && item.submenu.type === 'menu') {
      submenu = __jsx("div", {
        className: "nav-links__menu",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 17
        }
      }, __jsx(_Menu__WEBPACK_IMPORTED_MODULE_4__["default"], {
        items: item.submenu.menu,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 21
        }
      }));
    }

    if (item.submenu && item.submenu.type === 'megamenu') {
      submenu = __jsx("div", {
        className: `nav-links__megamenu nav-links__megamenu--size--${item.submenu.menu.size}`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      }, __jsx(_Megamenu__WEBPACK_IMPORTED_MODULE_3__["default"], {
        menu: item.submenu.menu,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 21
        }
      }));
    }

    const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('nav-links__item', {
      'nav-links__item--with-submenu': item.submenu
    });
    return __jsx("li", {
      key: index,
      className: classes,
      onMouseEnter: handleMouseEnter,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 69,
        columnNumber: 13
      }
    }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], _extends({
      href: item.url
    }, item.props, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 70,
        columnNumber: 17
      }
    }), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 71,
        columnNumber: 21
      }
    }, __jsx(react_intl__WEBPACK_IMPORTED_MODULE_7__["FormattedMessage"], {
      id: item.title,
      defaultMessage: item.title,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72,
        columnNumber: 25
      }
    }), arrow)), submenu);
  });
  return __jsx("ul", {
    className: "nav-links__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 9
    }
  }, linksList);
}

/* harmony default export */ __webpack_exports__["default"] = (NavLinks);

/***/ }),

/***/ "./src/components/header/NavPanel.tsx":
/*!********************************************!*\
  !*** ./src/components/header/NavPanel.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _IndicatorCart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IndicatorCart */ "./src/components/header/IndicatorCart.tsx");
/* harmony import */ var _IndicatorSearch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IndicatorSearch */ "./src/components/header/IndicatorSearch.tsx");
/* harmony import */ var _NavLinks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NavLinks */ "./src/components/header/NavLinks.tsx");
/* harmony import */ var _store_wishlist_wishlistHooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/wishlist/wishlistHooks */ "./src/store/wishlist/wishlistHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\NavPanel.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // application







function NavPanel(props) {
  const {
    layout = 'default'
  } = props;
  const {
    items: {
      length: wishlistCount
    }
  } = Object(_store_wishlist_wishlistHooks__WEBPACK_IMPORTED_MODULE_5__["useWishlist"])();
  let logo = null;
  let departments = null;
  let searchIndicator;
  logo = __jsx("div", {
    className: "nav-panel__logo",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 9
    }
  }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_1__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 32,
      columnNumber: 13
    }
  }, __jsx("img", {
    src: "/images/logos/neotechlogo.png",
    alt: "",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 17
    }
  })));
  searchIndicator = __jsx(_IndicatorSearch__WEBPACK_IMPORTED_MODULE_3__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 23
    }
  });
  return __jsx("div", {
    className: "nav-panel",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "nav-panel__container container",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "nav-panel__row",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 17
    }
  }, logo, __jsx("div", {
    className: "nav-panel__nav-links nav-links",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 21
    }
  }, __jsx(_NavLinks__WEBPACK_IMPORTED_MODULE_4__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 25
    }
  })), __jsx("div", {
    className: "nav-panel__indicators",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 21
    }
  }, searchIndicator, __jsx(_IndicatorCart__WEBPACK_IMPORTED_MODULE_2__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 25
    }
  })))));
}

/* harmony default export */ __webpack_exports__["default"] = (NavPanel);

/***/ }),

/***/ "./src/components/header/Search.tsx":
/*!******************************************!*\
  !*** ./src/components/header/Search.tsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _api_shop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../api/shop */ "./src/api/shop.ts");
/* harmony import */ var _Suggestions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Suggestions */ "./src/components/header/Suggestions.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Search.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// react
 // third-party


 // application

var Cross20Svg = function Cross20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M17.71 17.71a.99.99 0 0 1-1.4 0L10 11.4l-6.31 6.31a.99.99 0 1 1-1.4-1.4L8.6 10 2.29 3.69a.99.99 0 1 1 1.4-1.4L10 8.6l6.31-6.31a.99.99 0 1 1 1.4 1.4L11.4 10l6.31 6.31a.99.99 0 0 1 0 1.4z"
  }));
};

Cross20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};

var Search20Svg = function Search20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M19.2 17.8s-.2.5-.5.8c-.4.4-.9.6-.9.6s-.9.7-2.8-1.6c-1.1-1.4-2.2-2.8-3.1-3.9-1 .8-2.4 1.3-3.9 1.3-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7c0 1.5-.5 2.9-1.3 4 1.1.8 2.5 2 4 3.1 2.3 1.7 1.5 2.7 1.5 2.7zM8 3C5.2 3 3 5.2 3 8s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5z"
  }));
};

Search20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};



function useCategories() {
  const {
    0: categories,
    1: setCategories
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    let canceled = false;

    const treeToList = (categories, depth = 0) => categories.reduce((result, category) => [...result, _objectSpread({
      depth
    }, category), ...treeToList(category.children || [], depth + 1)], []);

    _api_shop__WEBPACK_IMPORTED_MODULE_3__["default"].getCategories({
      depth: 1
    }).then(categories => {
      if (canceled) {
        return;
      }

      setCategories(treeToList(categories));
    });
    return () => {
      canceled = true;
    };
  }, [setCategories]);
  return categories;
}

function Search(props) {
  const {
    context,
    className,
    inputRef,
    onClose
  } = props;
  const {
    0: cancelFn,
    1: setCancelFn
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(() => () => {});
  const {
    0: suggestionsOpen,
    1: setSuggestionsOpen
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: hasSuggestions,
    1: setHasSuggestions
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: suggestedProducts,
    1: setSuggestedProducts
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const {
    0: query,
    1: setQuery
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: category,
    1: setCategory
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('[all]');
  const categories = useCategories();
  const wrapperRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_2__["useRouter"])();
  const close = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(() => {
    if (onClose) {
      onClose();
    }

    setSuggestionsOpen(false);
  }, [onClose]); // Close suggestions when the location has been changed.

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => close(), [close, router.pathname]); // Close suggestions when a click has been made outside component.

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const onGlobalClick = event => {
      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {
        close();
      }
    };

    document.addEventListener('mousedown', onGlobalClick);
    return () => document.removeEventListener('mousedown', onGlobalClick);
  }, [close]); // Cancel previous typing.

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => () => cancelFn(), [cancelFn]);

  const handleFocus = () => {
    setSuggestionsOpen(true);
  };

  const handleChangeCategory = event => {
    setCategory(event.target.value);
  };

  const handleChangeQuery = event => {
    let canceled = false;
    let timer;

    const newCancelFn = () => {
      canceled = true;
      clearTimeout(timer);
    };

    const query = event.target.value;
    setQuery(query);

    if (query === '') {
      setHasSuggestions(false);
    } else {
      timer = setTimeout(() => {
        const options = {
          limit: 5
        };

        if (category !== '[all]') {
          options.category = category;
        }

        _api_shop__WEBPACK_IMPORTED_MODULE_3__["default"].getSuggestions(query, options).then(products => {
          if (canceled) {
            return;
          }

          setSuggestedProducts(products);
          setHasSuggestions(products.length > 0);
          setSuggestionsOpen(true);
        });
      }, 100);
    }

    setCancelFn(() => newCancelFn);
  };

  const handleBlur = () => {
    setTimeout(() => {
      if (!document.activeElement || document.activeElement === document.body) {
        return;
      } // Close suggestions if the focus received an external element.


      if (wrapperRef.current && !wrapperRef.current.contains(document.activeElement)) {
        close();
      }
    }, 10);
  }; // Close suggestions when the Escape key has been pressed.


  const handleKeyDown = event => {
    // Escape.
    if (event.which === 27) {
      close();
    }
  };

  const rootClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()(`search search--location--${context}`, className, {
    'search--suggestions-open': suggestionsOpen,
    'search--has-suggestions': hasSuggestions
  });
  const closeButton = context !== 'mobile-header' ? '' : __jsx("button", {
    className: "search__button search__button--type--close",
    type: "button",
    onClick: close,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182,
      columnNumber: 9
    }
  }, __jsx(Cross20Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 183,
      columnNumber: 13
    }
  }));
  const categoryOptions = categories.map(category => __jsx("option", {
    key: category.slug,
    value: category.slug,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 9
    }
  }, '\u00A0'.repeat(4 * category.depth), category.name));
  return __jsx("div", {
    className: rootClasses,
    ref: wrapperRef,
    onBlur: handleBlur,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 195,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "search__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 196,
      columnNumber: 13
    }
  }, __jsx("form", {
    className: "search__form",
    action: "",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 17
    }
  }, context === 'header' && __jsx("select", {
    className: "search__categories",
    "aria-label": "Category",
    value: category,
    onFocus: close,
    onChange: handleChangeCategory,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199,
      columnNumber: 25
    }
  }, __jsx("option", {
    value: "[all]",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 206,
      columnNumber: 29
    }
  }, "All Categories"), categoryOptions), __jsx("input", {
    ref: inputRef,
    onChange: handleChangeQuery,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown,
    value: query,
    className: "search__input",
    name: "search",
    placeholder: "Search over 10,000 products",
    "aria-label": "Site search",
    type: "text",
    autoComplete: "off",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 21
    }
  }), __jsx("button", {
    className: "search__button search__button--type--submit",
    type: "submit",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 21
    }
  }, __jsx(Search20Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 25
    }
  })), closeButton, __jsx("div", {
    className: "search__border",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227,
      columnNumber: 21
    }
  })), __jsx(_Suggestions__WEBPACK_IMPORTED_MODULE_4__["default"], {
    className: "search__suggestions",
    context: context,
    products: suggestedProducts,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 230,
      columnNumber: 17
    }
  })));
}

/* harmony default export */ __webpack_exports__["default"] = (Search);

/***/ }),

/***/ "./src/components/header/Suggestions.tsx":
/*!***********************************************!*\
  !*** ./src/components/header/Suggestions.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _shared_AsyncAction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/AsyncAction */ "./src/components/shared/AsyncAction.tsx");
/* harmony import */ var _shared_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/CurrencyFormat */ "./src/components/shared/CurrencyFormat.tsx");
/* harmony import */ var _services_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/url */ "./src/services/url.ts");
/* harmony import */ var _store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../store/cart/cartHooks */ "./src/store/cart/cartHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Suggestions.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application




var Cart16Svg = function Cart16Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M.4 16c0 9.1.2 12.8.3 8.2.2-4.5.2-11.9 0-16.5C.6 3.2.4 6.9.4 16zM24 3.5c0 3.6.8 4.3 2.8 2.3.8-.8 1.5-.8 2.7.2 2.3 1.9 1.9 3.2-2 7-3.4 3.3-3.5 3.6-3.5 11.2V32h8V0h-4c-3.9 0-4 .1-4 3.5zM2 16v15h21V17.6l-3.2 3.1c-3.4 3.1-6.9 5.3-8.7 5.3-2.2 0 1.2-5.9 6.4-11 5-4.9 5.5-5.9 5.5-9.7V1H2v15zM21.5 5.5c0 1.8-.8 2-8.7 2.3L4 8.1V2.9l8.8.3c7.9.3 8.7.5 8.7 2.3zM10 10c0 .5-1.1 1-2.5 1S5 10.5 5 10c0-.6 1.1-1 2.5-1s2.5.4 2.5 1zm9 0c0 .5-1.6 1-3.6 1-2.1 0-3.3-.4-2.9-1 .3-.6 1.9-1 3.6-1 1.6 0 2.9.4 2.9 1zm-2.5 3c.4.6-1.7 1-5.4 1-3.4 0-6.1-.4-6.1-1s2.4-1 5.4-1c3 0 5.8.4 6.1 1zm-3 3c.4.6-1.2 1-3.9 1-2.5 0-4.6-.5-4.6-1 0-.6 1.8-1 3.9-1 2.2 0 4.3.4 4.6 1zM11 19c0 .5-1.3 1-3 1-1.6 0-3-.5-3-1 0-.6 1.4-1 3-1 1.7 0 3 .4 3 1zm-1.5 3c.4.6-.5 1-1.9 1S5 22.5 5 22c0-.6.9-1 1.9-1 1.1 0 2.3.4 2.6 1zM8 25c0 .5-.7 1-1.5 1S5 25.5 5 25c0-.6.7-1 1.5-1s1.5.4 1.5 1zm12 3c0 .6-3.2 1-7.5 1S5 28.6 5 28s3.2-1 7.5-1 7.5.4 7.5 1z"
  }), __jsx("path", {
    d: "M5 5c0 .6 3.2 1 7.5 1S20 5.6 20 5s-3.2-1-7.5-1S5 4.4 5 5zM27.5 8c.3.5 1.1 1 1.6 1 .6 0 .7-.5.4-1-.3-.6-1.1-1-1.6-1-.6 0-.7.4-.4 1zM19.7 14.8c-5.9 5.9-6.6 7.2-4.4 7.2C17 22 28.2 10.6 27.4 9.7c-1.2-1.2-1.8-.8-7.7 5.1z"
  }));
};

Cart16Svg.defaultProps = {
  version: "1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "42.667",
  height: "42.667",
  viewBox: "0 0 32.000000 32.000000"
};




function Suggestions(props) {
  const {
    context,
    className,
    products
  } = props;
  const rootClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()(`suggestions suggestions--location--${context}`, className);
  const cartAddItem = Object(_store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_6__["useCartAddItem"])();
  const list = products && products.map(product => __jsx("li", {
    key: product.id,
    className: "suggestions__item",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 32,
      columnNumber: 9
    }
  }, product.images && product.images.length > 0 && __jsx("div", {
    className: "suggestions__item-image product-image",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "product-image__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 21
    }
  }, __jsx("img", {
    className: "product-image__img",
    src: product.images[0],
    alt: "",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "suggestions__item-info",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 13
    }
  }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: _services_url__WEBPACK_IMPORTED_MODULE_5__["default"].product(product),
    className: "suggestions__item-name",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 17
    }
  }, product.name), __jsx("div", {
    className: "suggestions__item-meta",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 17
    }
  }, "SKU: 83690/32")), __jsx("div", {
    className: "suggestions__item-price",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 13
    }
  }, __jsx(_shared_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__["default"], {
    value: product.price,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 17
    }
  })), context === 'header' && __jsx("div", {
    className: "suggestions__item-actions",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 17
    }
  }, __jsx(_shared_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
    action: () => cartAddItem(product),
    render: ({
      run,
      loading
    }) => __jsx("button", {
      type: "button",
      onClick: run,
      title: "Add to cart",
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('btn btn-primary btn-sm btn-svg-icon', {
        'btn-loading': loading
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 54,
        columnNumber: 29
      }
    }, __jsx(Cart16Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 62,
        columnNumber: 33
      }
    })),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 21
    }
  }))));
  return __jsx("div", {
    className: rootClasses,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 9
    }
  }, __jsx("ul", {
    className: "suggestions__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 13
    }
  }, list));
}

/* harmony default export */ __webpack_exports__["default"] = (Suggestions);

/***/ }),

/***/ "./src/components/header/Topbar.tsx":
/*!******************************************!*\
  !*** ./src/components/header/Topbar.tsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Topbar; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _DropdownLanguage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DropdownLanguage */ "./src/components/header/DropdownLanguage.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\header\\Topbar.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application



function Topbar() {
  const links = [{
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_1__["FormattedMessage"], {
      id: "topbar.aboutUs",
      defaultMessage: "About Us",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 14,
        columnNumber: 18
      }
    }),
    url: '/about-us'
  }, {
    title: __jsx(react_intl__WEBPACK_IMPORTED_MODULE_1__["FormattedMessage"], {
      id: "topbar.contacts",
      defaultMessage: "Contact us",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 15,
        columnNumber: 18
      }
    }),
    url: '/contact-us'
  }];
  const linksList = links.map((item, index) => __jsx("div", {
    key: index,
    className: "topbar__item topbar__item--link",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 9
    }
  }, __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: item.url,
    className: "topbar-link",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 13
    }
  }, item.title)));
  return __jsx("div", {
    className: "site-header__topbar topbar",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "topbar__container container",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "topbar__row",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 17
    }
  }, linksList, __jsx("div", {
    className: "topbar__spring",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 21
    }
  }), __jsx("div", {
    className: "topbar__item",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 21
    }
  }, __jsx(_DropdownLanguage__WEBPACK_IMPORTED_MODULE_3__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 25
    }
  })))));
}

/***/ }),

/***/ "./src/components/mobile/MobileHeader.tsx":
/*!************************************************!*\
  !*** ./src/components/mobile/MobileHeader.tsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _header_Indicator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../header/Indicator */ "./src/components/header/Indicator.tsx");
/* harmony import */ var _header_Search__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../header/Search */ "./src/components/header/Search.tsx");
/* harmony import */ var _services_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/url */ "./src/services/url.ts");
/* harmony import */ var _store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../store/cart/cartHooks */ "./src/store/cart/cartHooks.ts");
/* harmony import */ var _store_mobile_menu_mobileMenuHooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../store/mobile-menu/mobileMenuHooks */ "./src/store/mobile-menu/mobileMenuHooks.ts");
/* harmony import */ var _store_wishlist_wishlistHooks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../store/wishlist/wishlistHooks */ "./src/store/wishlist/wishlistHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\mobile\\MobileHeader.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application



var Cart20Svg = function Cart20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M13.3 8.8c0-.4-.3-.8-.7-.8H5c-.5 0-.8.4-.8.8s.3.7.8.7h7.6c.4 0 .7-.3.7-.7zM5 11c-.4 0-.7.3-.7.7 0 .4.3.7.7.7h4.6c.4 0 .7-.3.7-.7 0-.4-.3-.7-.7-.7H5z"
  }), __jsx("path", {
    d: "M6.7 18.1H4.2c-.8 0-1.5-.7-1.5-1.5v-13c0-.8.7-1.5 1.5-1.5h9.1c.8 0 1.5.7 1.5 1.5v4.5c0 .4.3.7.7.7.4 0 .7-.3.7-.7V3.6c0-1.6-1.3-3-3-3h-9c-1.6 0-3 1.3-3 3v13c0 1.6 1.3 3 3 3h2.5c.4 0 .7-.3.7-.7 0-.5-.3-.8-.7-.8z"
  }), __jsx("path", {
    d: "M17.6 11.3c-.9-.9-2.3-.9-3.1 0l-4.1 4.1c-.1.1-.1.2-.2.3l-.9 2.9c-.1.3 0 .5.2.7.1.1.3.2.5.2h.2l3-.8c.1 0 .2-.1.3-.2l4.1-4c.9-.9.9-2.3 0-3.2zm-5 6l-1.5.4.4-1.4 2.7-2.7 1 1-2.6 2.7zm3.9-3.9l-.1.1-1-1 .1-.1c.3-.3.8-.3 1 0 .3.3.3.7 0 1zM12.6 5.1H5c-.4 0-.7.3-.7.7s.2.7.7.7h7.6c.4 0 .7-.3.7-.7s-.3-.7-.7-.7z"
  }));
};

Cart20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20"
};


var Menu18x14Svg = function Menu18x14Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M0 8V6h18v2H0zm0-8h18v2H0V0zm14 14H0v-2h14v2z"
  }));
};

Menu18x14Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "18",
  height: "14"
};


var Search20Svg = function Search20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M19.2 17.8s-.2.5-.5.8c-.4.4-.9.6-.9.6s-.9.7-2.8-1.6c-1.1-1.4-2.2-2.8-3.1-3.9-1 .8-2.4 1.3-3.9 1.3-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7c0 1.5-.5 2.9-1.3 4 1.1.8 2.5 2 4 3.1 2.3 1.7 1.5 2.7 1.5 2.7zM8 3C5.2 3 3 5.2 3 8s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5z"
  }));
};

Search20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};





function MobileHeader() {
  const {
    0: searchOpen,
    1: setSearchOpen
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const inputRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const cart = Object(_store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_6__["useCart"])();
  const {
    items: {
      length: wishlistCount
    }
  } = Object(_store_wishlist_wishlistHooks__WEBPACK_IMPORTED_MODULE_8__["useWishlist"])();
  const mobileMenuOpen = Object(_store_mobile_menu_mobileMenuHooks__WEBPACK_IMPORTED_MODULE_7__["useMobileMenuOpen"])();
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (searchOpen && inputRef.current) {
      inputRef.current.focus();
    }
  }, [searchOpen]);

  const handleOpenSearch = () => {
    setSearchOpen(true);
  };

  const handleCloseSearch = () => {
    setSearchOpen(false);
  };

  const searchClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()('mobile-header__search', {
    'mobile-header__search--open': searchOpen
  });
  return __jsx("div", {
    className: "mobile-header",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "mobile-header__panel",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "container",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "mobile-header__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: "mobile-header__menu-button",
    onClick: mobileMenuOpen,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 25
    }
  }, __jsx(Menu18x14Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 29
    }
  })), __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: _services_url__WEBPACK_IMPORTED_MODULE_5__["default"].home(),
    className: "mobile-header__logo",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 25
    }
  }, __jsx("img", {
    src: "/images/logos/neotechlogo.png",
    alt: "",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 29
    }
  })), __jsx(_header_Search__WEBPACK_IMPORTED_MODULE_4__["default"], {
    context: "mobile-header",
    className: searchClasses,
    inputRef: inputRef,
    onClose: handleCloseSearch,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 25
    }
  }), __jsx("div", {
    className: "mobile-header__indicators",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 25
    }
  }, __jsx(_header_Indicator__WEBPACK_IMPORTED_MODULE_3__["default"], {
    className: "indicator--mobile indicator--mobile-search d-md-none",
    onClick: handleOpenSearch,
    icon: __jsx(Search20Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 66,
        columnNumber: 39
      }
    }),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 29
    }
  }), __jsx(_header_Indicator__WEBPACK_IMPORTED_MODULE_3__["default"], {
    className: "indicator--mobile",
    url: _services_url__WEBPACK_IMPORTED_MODULE_5__["default"].cart(),
    value: cart.quantity,
    icon: __jsx(Cart20Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72,
        columnNumber: 39
      }
    }),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 29
    }
  }))))));
}

/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(MobileHeader));

/***/ }),

/***/ "./src/components/mobile/MobileLinks.tsx":
/*!***********************************************!*\
  !*** ./src/components/mobile/MobileLinks.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shared_AppLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _shared_Collapse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/Collapse */ "./src/components/shared/Collapse.tsx");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\mobile\\MobileLinks.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // application



var ArrowRoundedDown12x7Svg = function ArrowRoundedDown12x7Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M.286.273a.92.92 0 0 0-.01 1.292l5.24 5.428 5.241-5.428a.92.92 0 0 0-.01-1.292.923.923 0 0 0-1.31.006L5.516 4.296 1.596.279A.923.923 0 0 0 .286.273z"
  }));
};

ArrowRoundedDown12x7Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "7"
};


function MobileLinks(props) {
  const {
    links = [],
    level = 0,
    onItemClick
  } = props;

  const handleItemClick = item => {
    if (onItemClick) {
      onItemClick(item);
    }
  };

  const linksList = links.map((link, index) => {
    let item;

    if (link.type === 'link' || link.type === 'button') {
      const renderItem = ({
        toggle,
        setItemRef,
        setContentRef
      }) => {
        let arrow;
        let subLinks;
        let linkOrButton;

        if (link.children && link.children.length > 0) {
          arrow = __jsx("button", {
            className: "mobile-links__item-toggle",
            type: "button",
            onClick: toggle,
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 38,
              columnNumber: 25
            }
          }, __jsx(ArrowRoundedDown12x7Svg, {
            className: "mobile-links__item-arrow",
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 39,
              columnNumber: 29
            }
          }));
          subLinks = __jsx("div", {
            className: "mobile-links__item-sub-links",
            ref: setContentRef,
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 44,
              columnNumber: 25
            }
          }, __jsx(MobileLinks, {
            links: link.children,
            level: level + 1,
            onItemClick: onItemClick,
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 45,
              columnNumber: 29
            }
          }));
        }

        if (link.type === 'link') {
          linkOrButton = __jsx(_shared_AppLink__WEBPACK_IMPORTED_MODULE_1__["default"], {
            href: link.url,
            className: "mobile-links__item-link",
            onClick: () => handleItemClick(link),
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 56,
              columnNumber: 25
            }
          }, link.title);
        } else {
          linkOrButton = __jsx("button", {
            type: "button",
            className: "mobile-links__item-link",
            onClick: () => handleItemClick(link),
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 66,
              columnNumber: 25
            }
          }, link.title);
        }

        return __jsx("div", {
          className: "mobile-links__item",
          ref: setItemRef,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 77,
            columnNumber: 21
          }
        }, __jsx("div", {
          className: "mobile-links__item-title",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 78,
            columnNumber: 25
          }
        }, linkOrButton, arrow), subLinks);
      };

      item = __jsx(_shared_Collapse__WEBPACK_IMPORTED_MODULE_2__["default"], {
        toggleClass: "mobile-links__item--open",
        render: renderItem,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 20
        }
      });
    } else if (link.type === 'divider') {
      item = __jsx("div", {
        className: "mobile-links__divider",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 89,
          columnNumber: 20
        }
      });
    }

    return __jsx("li", {
      key: index,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 92,
        columnNumber: 16
      }
    }, item);
  });
  return __jsx("ul", {
    className: `mobile-links mobile-links--level--${level}`,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 9
    }
  }, linksList);
}

/* harmony default export */ __webpack_exports__["default"] = (MobileLinks);

/***/ }),

/***/ "./src/components/mobile/MobileMenu.tsx":
/*!**********************************************!*\
  !*** ./src/components/mobile/MobileMenu.tsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _MobileLinks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MobileLinks */ "./src/components/mobile/MobileLinks.tsx");
/* harmony import */ var _store_currency_currencyHooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/currency/currencyHooks */ "./src/store/currency/currencyHooks.ts");
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
/* harmony import */ var _store_mobile_menu_mobileMenuHooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/mobile-menu/mobileMenuHooks */ "./src/store/mobile-menu/mobileMenuHooks.ts");
/* harmony import */ var _data_mobileMenu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/mobileMenu */ "./src/data/mobileMenu.ts");
/* harmony import */ var _data_shopCurrencies__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../data/shopCurrencies */ "./src/data/shopCurrencies.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\mobile\\MobileMenu.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application

var Cross20Svg = function Cross20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M17.71 17.71a.99.99 0 0 1-1.4 0L10 11.4l-6.31 6.31a.99.99 0 1 1-1.4-1.4L8.6 10 2.29 3.69a.99.99 0 1 1 1.4-1.4L10 8.6l6.31-6.31a.99.99 0 1 1 1.4 1.4L11.4 10l6.31 6.31a.99.99 0 0 1 0 1.4z"
  }));
};

Cross20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};



 // data stubs




function MobileMenu() {
  const mobileMenu = Object(_store_mobile_menu_mobileMenuHooks__WEBPACK_IMPORTED_MODULE_5__["useMobileMenu"])();
  const mobileMenuClose = Object(_store_mobile_menu_mobileMenuHooks__WEBPACK_IMPORTED_MODULE_5__["useMobileMenuClose"])();
  const localeChange = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__["useLocaleChange"])();
  const currencyChange = Object(_store_currency_currencyHooks__WEBPACK_IMPORTED_MODULE_3__["useCurrencyChange"])();
  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('mobilemenu', {
    'mobilemenu--open': mobileMenu.open
  });

  const handleItemClick = item => {
    if (item.data) {
      if (item.data.type === 'language') {
        localeChange(item.data.locale);
        mobileMenuClose();
      }

      if (item.data.type === 'currency') {
        const currency = _data_shopCurrencies__WEBPACK_IMPORTED_MODULE_7__["default"].find(x => x.code === item.data.code);

        if (currency) {
          currencyChange(currency);
          mobileMenuClose();
        }
      }
    }

    if (item.type === 'link') {
      mobileMenuClose();
    }
  };

  return __jsx("div", {
    className: classes,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "mobilemenu__backdrop",
    onClick: mobileMenuClose,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 13
    }
  }), __jsx("div", {
    className: "mobilemenu__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "mobilemenu__header",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "mobilemenu__title",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 21
    }
  }, "Menu"), __jsx("button", {
    type: "button",
    className: "mobilemenu__close",
    onClick: mobileMenuClose,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 21
    }
  }, __jsx(Cross20Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "mobilemenu__content",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 17
    }
  }, __jsx(_MobileLinks__WEBPACK_IMPORTED_MODULE_2__["default"], {
    links: _data_mobileMenu__WEBPACK_IMPORTED_MODULE_6__["default"],
    onItemClick: handleItemClick,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 21
    }
  }))));
}

/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(MobileMenu));

/***/ }),

/***/ "./src/components/shared/AppLink.tsx":
/*!*******************************************!*\
  !*** ./src/components/shared/AppLink.tsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\AppLink.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

 // third-party



function isLink(href) {
  return href !== undefined;
}

function isSimpleLink(href) {
  return href !== undefined && typeof href === 'string';
}

function isExternal(href) {
  return /^(https?:)?\/\//.test(href);
}

function AppLink(props) {
  const {
    href,
    children
  } = props,
        anchorProps = _objectWithoutProperties(props, ["href", "children"]);

  let link;

  if (!isLink(href) || isSimpleLink(href) && isExternal(href)) {
    link = __jsx("a", _extends({
      href: href
    }, anchorProps, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 30,
        columnNumber: 16
      }
    }), children);
  } else {
    const linkProps = typeof href === 'string' ? {
      href
    } : href;
    link = __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, _extends({}, linkProps, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35,
        columnNumber: 13
      }
    }), __jsx("a", _extends({}, anchorProps, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 36,
        columnNumber: 17
      }
    }), children));
  }

  return link;
}

/* harmony default export */ __webpack_exports__["default"] = (AppLink);

/***/ }),

/***/ "./src/components/shared/AsyncAction.tsx":
/*!***********************************************!*\
  !*** ./src/components/shared/AsyncAction.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
// react


function AsyncAction(props) {
  const {
    action,
    render
  } = props;
  const {
    0: loading,
    1: setLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const canceledRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(false);

  const run = () => {
    if (loading || !action) {
      return;
    }

    setLoading(true);
    action().then(() => {
      if (canceledRef.current) {
        return;
      }

      setLoading(false);
    });
  };

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => () => {
    canceledRef.current = true;
  }, [canceledRef]);

  if (render) {
    return render({
      run,
      loading
    });
  }

  return null;
}

/* harmony default export */ __webpack_exports__["default"] = (AsyncAction);

/***/ }),

/***/ "./src/components/shared/Collapse.tsx":
/*!********************************************!*\
  !*** ./src/components/shared/Collapse.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\Collapse.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react


function Collapse(props) {
  const {
    toggleClass,
    render,
    open
  } = props;
  const {
    0: init,
    1: setInit
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const itemRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const contentRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const expand = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])((immediate = false) => {
    if (!itemRef.current || !contentRef.current) {
      return;
    }

    if (immediate) {
      itemRef.current.classList.add(toggleClass);
      contentRef.current.style.height = '';
    } else {
      const startHeight = contentRef.current.getBoundingClientRect().height;
      itemRef.current.classList.add(toggleClass);
      const endHeight = contentRef.current.getBoundingClientRect().height;
      contentRef.current.style.height = `${startHeight}px`;
      contentRef.current.getBoundingClientRect(); // force reflow

      contentRef.current.style.height = `${endHeight}px`;
    }
  }, [toggleClass, itemRef, contentRef]);
  const collapse = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])((immediate = false) => {
    if (!itemRef.current || !contentRef.current) {
      return;
    }

    if (immediate) {
      itemRef.current.classList.remove(toggleClass);
      contentRef.current.style.height = '';
    } else {
      const startHeight = contentRef.current.getBoundingClientRect().height;
      contentRef.current.style.height = `${startHeight}px`;
      itemRef.current.classList.remove(toggleClass);
      contentRef.current.getBoundingClientRect(); // force reflow

      contentRef.current.style.height = '';
    }
  }, [toggleClass, itemRef, contentRef]);
  const handleToggle = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(() => {
    if (!itemRef.current || !contentRef.current) {
      return;
    }

    if (itemRef.current.classList.contains(toggleClass)) {
      collapse();
    } else {
      expand();
    }
  }, [toggleClass, itemRef, contentRef]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (typeof open === 'boolean') {
      if (open) {
        expand(!init);
      } else {
        collapse(!init);
      }
    }

    setInit(true);
  }, [open, init]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (!contentRef.current) {
      return () => {};
    }

    const handleTransitionEnd = event => {
      if (contentRef.current && event.propertyName === 'height') {
        contentRef.current.style.height = '';
      }
    };

    contentRef.current.addEventListener('transitionend', handleTransitionEnd);
    return () => {
      if (!contentRef.current) {
        return;
      }

      contentRef.current.removeEventListener('transitionend', handleTransitionEnd);
    };
  }, [contentRef]);

  if (render) {
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119,
        columnNumber: 13
      }
    }, Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(() => render({
      toggle: handleToggle,
      setItemRef: itemRef,
      setContentRef: contentRef
    }), [render, handleToggle, itemRef, contentRef]));
  }

  return null;
}

/* harmony default export */ __webpack_exports__["default"] = (Collapse);

/***/ }),

/***/ "./src/components/shared/CurrencyFormat.tsx":
/*!**************************************************!*\
  !*** ./src/components/shared/CurrencyFormat.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _store_currency_currencyHooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/currency/currencyHooks */ "./src/store/currency/currencyHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\CurrencyFormat.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // application



function CurrencyFormat(props) {
  const {
    value,
    currency
  } = props;
  const currentCurrency = Object(_store_currency_currencyHooks__WEBPACK_IMPORTED_MODULE_1__["useCurrency"])();
  const {
    symbol
  } = currency || currentCurrency;
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 12
    }
  }, `${symbol}${value.toFixed(2)}`);
}

/* harmony default export */ __webpack_exports__["default"] = (CurrencyFormat);

/***/ }),

/***/ "./src/components/shared/InputNumber.tsx":
/*!***********************************************!*\
  !*** ./src/components/shared/InputNumber.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\InputNumber.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// react
 // third-party



function InputNumber(props) {
  const {
    size,
    className,
    onChange
  } = props,
        otherProps = _objectWithoutProperties(props, ["size", "className", "onChange"]);

  const {
    value = '',
    step = 1,
    min = null,
    max = null
  } = props;

  const change = (direction, prevValue = value) => {
    // noinspection SuspiciousTypeOfGuard
    let newValue = typeof prevValue === 'string' ? parseFloat(prevValue) : prevValue;
    newValue = (Number.isNaN(newValue) ? 0 : newValue) + step * direction;

    if (max !== null) {
      newValue = Math.min(max, newValue);
    }

    if (min !== null) {
      newValue = Math.max(min, newValue);
    }

    if (newValue !== prevValue && onChange) {
      onChange(newValue);
    }

    return newValue;
  };

  const changeByTimer = direction => {
    let prevValue = value;
    let interval;
    const timer = setTimeout(() => {
      interval = setInterval(() => {
        prevValue = change(direction, prevValue);
      }, 50);
    }, 300);

    const documentMouseUp = () => {
      clearTimeout(timer);
      clearInterval(interval);
      document.removeEventListener('mouseup', documentMouseUp, false);
    };

    document.addEventListener('mouseup', documentMouseUp, false);
  };

  const handleAddMouseDown = () => {
    change(1);
    changeByTimer(1);
  };

  const handleSubMouseDown = () => {
    change(-1);
    changeByTimer(-1);
  };

  const handleChange = event => {
    if (onChange) {
      if (event.target.value.trim() === '') {
        onChange('');
      } else {
        const value = parseFloat(event.target.value);
        onChange(Number.isNaN(value) ? min || 0 : value);
      }
    }
  };

  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('input-number', className);
  const formControlClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()('form-control input-number__input', {
    'form-control-sm': size === 'sm',
    'form-control-lg': size === 'lg'
  });
  return __jsx("div", {
    className: classes,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 9
    }
  }, __jsx("input", _extends({
    className: formControlClasses,
    type: "number",
    onChange: handleChange
  }, otherProps, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 13
    }
  })), __jsx("div", {
    className: "input-number__add",
    onMouseDown: handleAddMouseDown,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 13
    }
  }), __jsx("div", {
    className: "input-number__sub",
    onMouseDown: handleSubMouseDown,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 13
    }
  }));
}

/* harmony default export */ __webpack_exports__["default"] = (InputNumber);

/***/ }),

/***/ "./src/components/shared/Product.tsx":
/*!*******************************************!*\
  !*** ./src/components/shared/Product.tsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AsyncAction */ "./src/components/shared/AsyncAction.tsx");
/* harmony import */ var _CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CurrencyFormat */ "./src/components/shared/CurrencyFormat.tsx");
/* harmony import */ var _InputNumber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./InputNumber */ "./src/components/shared/InputNumber.tsx");
/* harmony import */ var _ProductGallery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ProductGallery */ "./src/components/shared/ProductGallery.tsx");
/* harmony import */ var _Rating__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Rating */ "./src/components/shared/Rating.tsx");
/* harmony import */ var _store_compare_compareHooks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../store/compare/compareHooks */ "./src/store/compare/compareHooks.ts");
/* harmony import */ var _store_wishlist_wishlistHooks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store/wishlist/wishlistHooks */ "./src/store/wishlist/wishlistHooks.ts");
/* harmony import */ var _store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store/cart/cartHooks */ "./src/store/cart/cartHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\Product.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application




var Compare16Svg = function Compare16Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M9 15H7c-.6 0-1-.4-1-1V2c0-.6.4-1 1-1h2c.6 0 1 .4 1 1v12c0 .6-.4 1-1 1zM1 9h2c.6 0 1 .4 1 1v4c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1v-4c0-.6.4-1 1-1zM15 5h-2c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V6c0-.6-.4-1-1-1z"
  }));
};

Compare16Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16"
};





var Wishlist16Svg = function Wishlist16Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M13.9 8.4l-5.4 5.4c-.3.3-.7.3-1 0L2.1 8.4C.6 6.9.6 4.6 2.1 3.1 2.8 2.4 3.8 2 4.8 2s1.9.4 2.6 1.1l.6.6.6-.6c.7-.7 1.7-1.1 2.7-1.1 1 0 1.9.4 2.6 1.1 1.5 1.5 1.5 3.8 0 5.3z"
  }));
};

Wishlist16Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16"
};




function Product(props) {
  const {
    product,
    layout
  } = props;
  const {
    0: quantity,
    1: setQuantity
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(1);
  const cartAddItem = Object(_store_cart_cartHooks__WEBPACK_IMPORTED_MODULE_10__["useCartAddItem"])();
  const wishlistAddItem = Object(_store_wishlist_wishlistHooks__WEBPACK_IMPORTED_MODULE_9__["useWishlistAddItem"])();
  const compareAddItem = Object(_store_compare_compareHooks__WEBPACK_IMPORTED_MODULE_8__["useCompareAddItem"])();

  const addToCart = () => {
    if (typeof quantity === 'string') {
      return Promise.resolve();
    }

    return cartAddItem(product, [], quantity);
  };

  let prices;

  if (product.compareAtPrice) {
    prices = __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 13
      }
    }, __jsx("span", {
      className: "product__new-price",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48,
        columnNumber: 17
      }
    }, __jsx(_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__["default"], {
      value: product.price,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48,
        columnNumber: 54
      }
    })), ' ', __jsx("span", {
      className: "product__old-price",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 17
      }
    }, __jsx(_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__["default"], {
      value: product.compareAtPrice,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 54
      }
    })));
  } else {
    prices = __jsx(_CurrencyFormat__WEBPACK_IMPORTED_MODULE_4__["default"], {
      value: product.price,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 54,
        columnNumber: 18
      }
    });
  }

  return __jsx("div", {
    className: `product product--layout--${layout}`,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "product__content",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 13
    }
  }, __jsx(_ProductGallery__WEBPACK_IMPORTED_MODULE_6__["default"], {
    layout: layout,
    images: product.images,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 17
    }
  }), __jsx("div", {
    className: "product__info",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "product__wishlist-compare",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 21
    }
  }, __jsx(_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
    action: () => wishlistAddItem(product),
    render: ({
      run,
      loading
    }) => __jsx("button", {
      type: "button",
      "data-toggle": "tooltip",
      "data-placement": "right",
      title: "Wishlist",
      onClick: run,
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('btn btn-sm btn-light btn-svg-icon', {
        'btn-loading': loading
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 67,
        columnNumber: 33
      }
    }, __jsx(Wishlist16Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 77,
        columnNumber: 37
      }
    })),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 25
    }
  }), __jsx(_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
    action: () => compareAddItem(product),
    render: ({
      run,
      loading
    }) => __jsx("button", {
      type: "button",
      "data-toggle": "tooltip",
      "data-placement": "right",
      title: "Compare",
      onClick: run,
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('btn btn-sm btn-light btn-svg-icon', {
        'btn-loading': loading
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84,
        columnNumber: 33
      }
    }, __jsx(Compare16Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 94,
        columnNumber: 37
      }
    })),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 25
    }
  })), __jsx("h1", {
    className: "product__name",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 21
    }
  }, product.name), __jsx("div", {
    className: "product__rating",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "product__rating-stars",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 25
    }
  }, __jsx(_Rating__WEBPACK_IMPORTED_MODULE_7__["default"], {
    value: product.rating,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 29
    }
  })), __jsx("div", {
    className: "product__rating-legend",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 25
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 29
    }
  }, `${product.reviews} Reviews`), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 29
    }
  }, "/"), __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 29
    }
  }, "Write A Review"))), __jsx("div", {
    className: "product__description",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 21
    }
  }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur ornare, mi in ornare elementum, libero nibh lacinia urna, quis convallis lorem erat at purus. Maecenas eu varius nisi."), __jsx("ul", {
    className: "product__features",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 21
    }
  }, __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 25
    }
  }, "Speed: 750 RPM"), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 25
    }
  }, "Power Source: Cordless-Electric"), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 25
    }
  }, "Battery Cell Type: Lithium"), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 25
    }
  }, "Voltage: 20 Volts"), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 25
    }
  }, "Battery Capacity: 2 Ah")), __jsx("ul", {
    className: "product__meta",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 21
    }
  }, __jsx("li", {
    className: "product__meta-availability",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 25
    }
  }, "Availability:", ' ', __jsx("span", {
    className: "text-success",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 29
    }
  }, "In Stock")), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 25
    }
  }, "Brand:", __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 29
    }
  }, "Wakita")), __jsx("li", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 25
    }
  }, "SKU: 83690/32"))), __jsx("div", {
    className: "product__sidebar",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "product__availability",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 21
    }
  }, "Availability:", ' ', __jsx("span", {
    className: "text-success",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 25
    }
  }, "In Stock")), __jsx("div", {
    className: "product__prices",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 21
    }
  }, prices), __jsx("form", {
    className: "product__options",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "form-group product__option",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 25
    }
  }, __jsx("div", {
    className: "product__option-label",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 29
    }
  }, "Color"), __jsx("div", {
    className: "input-radio-color",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 29
    }
  }, __jsx("div", {
    className: "input-radio-color__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 33
    }
  }, __jsx("label", {
    className: "input-radio-color__item input-radio-color__item--white",
    style: {
      color: '#fff'
    },
    "data-toggle": "tooltip",
    title: "White",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "color",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 158,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 41
    }
  })), __jsx("label", {
    className: "input-radio-color__item",
    style: {
      color: '#ffd333'
    },
    "data-toggle": "tooltip",
    title: "Yellow",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "color",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 168,
      columnNumber: 41
    }
  })), __jsx("label", {
    className: "input-radio-color__item",
    style: {
      color: '#ff4040'
    },
    "data-toggle": "tooltip",
    title: "Red",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 170,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "color",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 41
    }
  })), __jsx("label", {
    className: "input-radio-color__item input-radio-color__item--disabled",
    style: {
      color: '#4080ff'
    },
    "data-toggle": "tooltip",
    title: "Blue",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "color",
    disabled: true,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 185,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 186,
      columnNumber: 41
    }
  }))))), __jsx("div", {
    className: "form-group product__option",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 191,
      columnNumber: 25
    }
  }, __jsx("div", {
    className: "product__option-label",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 29
    }
  }, "Material"), __jsx("div", {
    className: "input-radio-label",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 29
    }
  }, __jsx("div", {
    className: "input-radio-label__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 194,
      columnNumber: 33
    }
  }, __jsx("label", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 195,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "material",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 196,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 41
    }
  }, "Metal")), __jsx("label", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "material",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 41
    }
  }, "Wood")), __jsx("label", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 203,
      columnNumber: 37
    }
  }, __jsx("input", {
    type: "radio",
    name: "material",
    disabled: true,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 204,
      columnNumber: 41
    }
  }), __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 205,
      columnNumber: 41
    }
  }, "Plastic"))))), __jsx("div", {
    className: "form-group product__option",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 25
    }
  }, __jsx("label", {
    htmlFor: "product-quantity",
    className: "product__option-label",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 29
    }
  }, "Quantity"), __jsx("div", {
    className: "product__actions",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 212,
      columnNumber: 29
    }
  }, __jsx("div", {
    className: "product__actions-item",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 213,
      columnNumber: 33
    }
  }, __jsx(_InputNumber__WEBPACK_IMPORTED_MODULE_5__["default"], {
    id: "product-quantity",
    "aria-label": "Quantity",
    className: "product__quantity",
    size: "lg",
    min: 1,
    value: quantity,
    onChange: setQuantity,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 214,
      columnNumber: 37
    }
  })), __jsx("div", {
    className: "product__actions-item product__actions-item--addtocart",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 33
    }
  }, __jsx(_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
    action: () => addToCart(),
    render: ({
      run,
      loading
    }) => __jsx("button", {
      type: "button",
      onClick: run,
      disabled: !quantity,
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('btn btn-primary btn-lg', {
        'btn-loading': loading
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 228,
        columnNumber: 45
      }
    }, "Add to cart"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 225,
      columnNumber: 37
    }
  })), __jsx("div", {
    className: "product__actions-item product__actions-item--wishlist",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241,
      columnNumber: 33
    }
  }, __jsx(_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
    action: () => wishlistAddItem(product),
    render: ({
      run,
      loading
    }) => __jsx("button", {
      type: "button",
      "data-toggle": "tooltip",
      title: "Wishlist",
      onClick: run,
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('btn btn-secondary btn-svg-icon btn-lg', {
        'btn-loading': loading
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 245,
        columnNumber: 45
      }
    }, __jsx(Wishlist16Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 254,
        columnNumber: 49
      }
    })),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 242,
      columnNumber: 37
    }
  })), __jsx("div", {
    className: "product__actions-item product__actions-item--compare",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 259,
      columnNumber: 33
    }
  }, __jsx(_AsyncAction__WEBPACK_IMPORTED_MODULE_3__["default"], {
    action: () => compareAddItem(product),
    render: ({
      run,
      loading
    }) => __jsx("button", {
      type: "button",
      "data-toggle": "tooltip",
      title: "Compare",
      onClick: run,
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('btn btn-secondary btn-svg-icon btn-lg', {
        'btn-loading': loading
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 263,
        columnNumber: 45
      }
    }, __jsx(Compare16Svg, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 272,
        columnNumber: 49
      }
    })),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 260,
      columnNumber: 37
    }
  })))))), __jsx("div", {
    className: "product__footer",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 282,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "product__tags tags",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 283,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "tags__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 284,
      columnNumber: 25
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 285,
      columnNumber: 29
    }
  }, "Mounts"), __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 286,
      columnNumber: 29
    }
  }, "Electrodes"), __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 287,
      columnNumber: 29
    }
  }, "Chainsaws"))), __jsx("div", {
    className: "product__share-links share-links",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 291,
      columnNumber: 21
    }
  }, __jsx("ul", {
    className: "share-links__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 292,
      columnNumber: 25
    }
  }, __jsx("li", {
    className: "share-links__item share-links__item--type--like",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 293,
      columnNumber: 29
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 294,
      columnNumber: 33
    }
  }, "Like")), __jsx("li", {
    className: "share-links__item share-links__item--type--tweet",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 296,
      columnNumber: 29
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 297,
      columnNumber: 33
    }
  }, "Tweet")), __jsx("li", {
    className: "share-links__item share-links__item--type--pin",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 299,
      columnNumber: 29
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 300,
      columnNumber: 33
    }
  }, "Pin It")), __jsx("li", {
    className: "share-links__item share-links__item--type--counter",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 302,
      columnNumber: 29
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: "/",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 303,
      columnNumber: 33
    }
  }, "4K")))))));
}

/* harmony default export */ __webpack_exports__["default"] = (Product);

/***/ }),

/***/ "./src/components/shared/ProductGallery.tsx":
/*!**************************************************!*\
  !*** ./src/components/shared/ProductGallery.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _AppLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AppLink */ "./src/components/shared/AppLink.tsx");
/* harmony import */ var _StroykaSlick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StroykaSlick */ "./src/components/shared/StroykaSlick.tsx");
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\ProductGallery.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// react
 // third-party


// application



var ZoomIn24Svg = function ZoomIn24Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M15 18c-2 0-3.8-.6-5.2-1.7-1 1.3-2.1 2.8-3.5 4.6-2.2 2.8-3.4 1.9-3.4 1.9s-.6-.3-1.1-.7c-.4-.4-.7-1-.7-1S.2 19.9 3 17.8c1.8-1.4 3.3-2.5 4.6-3.5C6.6 12.8 6 11 6 9c0-5 4-9 9-9s9 4 9 9-4 9-9 9zm0-16c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm1 11h-2v-3h-3V8h3V5h2v3h3v2h-3v3z"
  }));
};

ZoomIn24Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24"
};

const slickSettingsFeatured = {
  dots: false,
  arrows: false,
  infinite: false,
  speed: 400,
  slidesToShow: 1,
  slidesToScroll: 1
};
const slickSettingsThumbnails = {
  standard: {
    dots: false,
    arrows: false,
    infinite: false,
    speed: 400,
    slidesToShow: 5,
    slidesToScroll: 1,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 991,
      settings: {
        slidesToShow: 3
      }
    }, {
      breakpoint: 767,
      settings: {
        slidesToShow: 5
      }
    }, {
      breakpoint: 479,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 379,
      settings: {
        slidesToShow: 3
      }
    }]
  },
  sidebar: {
    dots: false,
    arrows: false,
    infinite: false,
    speed: 400,
    slidesToShow: 4,
    slidesToScroll: 1,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 3
      }
    }, {
      breakpoint: 767,
      settings: {
        slidesToShow: 5
      }
    }, {
      breakpoint: 479,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 379,
      settings: {
        slidesToShow: 3
      }
    }]
  },
  columnar: {
    dots: false,
    arrows: false,
    infinite: false,
    speed: 400,
    slidesToShow: 4,
    slidesToScroll: 1,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 3
      }
    }, {
      breakpoint: 767,
      settings: {
        slidesToShow: 5
      }
    }, {
      breakpoint: 479,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 379,
      settings: {
        slidesToShow: 3
      }
    }]
  },
  quickview: {
    dots: false,
    arrows: false,
    infinite: false,
    speed: 400,
    slidesToShow: 5,
    slidesToScroll: 1,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 767,
      settings: {
        slidesToShow: 5
      }
    }, {
      breakpoint: 479,
      settings: {
        slidesToShow: 4
      }
    }, {
      breakpoint: 379,
      settings: {
        slidesToShow: 3
      }
    }]
  }
};

function ProductGallery(props) {
  const {
    layout,
    images
  } = props;
  const direction = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_4__["useDirection"])();
  const {
    0: state,
    1: setState
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
    currentIndex: 0,
    transition: false
  });
  const imagesRefs = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])([]);
  const slickFeaturedRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const createGalleryRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const galleryRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const getIndexDependOnDirRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const unmountedRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(false);
  const getIndexDependOnDir = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(index => {
    // we need to invert index id direction === 'rtl' due to react-slick bug
    return index;
  }, [direction, images]);

  const openPhotoswipe = index => {
    if (!createGalleryRef.current) {
      return;
    }

    const items = imagesRefs.current.map((tag, index) => {
      if (!tag) {
        throw Error('Image ref is null');
      }

      const width = (tag.dataset.width ? parseFloat(tag.dataset.width) : null) || tag.naturalWidth;
      const height = (tag.dataset.height ? parseFloat(tag.dataset.height) : null) || tag.naturalHeight;
      return {
        src: images[index],
        msrc: images[index],
        w: width,
        h: height
      };
    }); // noinspection JSUnusedGlobalSymbols

    const options = {
      getThumbBoundsFn: index => {
        // IMPORTANT: Inside this function, we can use variables and functions only through ref.
        if (!getIndexDependOnDirRef.current) {
          return {
            x: 0,
            y: 0,
            w: 0
          };
        }

        const dirDependentIndex = getIndexDependOnDirRef.current(index);
        const tag = imagesRefs.current[dirDependentIndex];

        if (!tag) {
          return {
            x: 0,
            y: 0,
            w: 0
          };
        }

        const width = tag.naturalWidth;
        const height = tag.naturalHeight;
        const rect = tag.getBoundingClientRect();
        const ration = Math.min(rect.width / width, rect.height / height);
        const fitWidth = width * ration;
        const fitHeight = height * ration;
        return {
          x: rect.left + (rect.width - fitWidth) / 2 + window.pageXOffset,
          y: rect.top + (rect.height - fitHeight) / 2 + window.pageYOffset,
          w: fitWidth
        };
      },
      index: getIndexDependOnDir(index),
      bgOpacity: 0.9,
      history: false
    };
    createGalleryRef.current.then(createGallery => {
      // IMPORTANT: Inside this function, we can use variables and functions only through ref.
      if (unmountedRef.current) {
        return;
      }

      galleryRef.current = createGallery(items, options);
      galleryRef.current.listen('beforeChange', () => {
        if (galleryRef.current && slickFeaturedRef.current) {
          slickFeaturedRef.current.slickGoTo(galleryRef.current.getCurrentIndex(), true);
        }
      });
      galleryRef.current.listen('destroy', () => {
        galleryRef.current = null;
      });
      galleryRef.current.init();
    });
  };

  const handleFeaturedClick = (event, index) => {
    if (!createGalleryRef.current || layout === 'quickview') {
      return;
    }

    event.preventDefault();
    openPhotoswipe(index);
  };

  const handleThumbnailClick = index => {
    if (state.transition) {
      return;
    }

    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {
      currentIndex: index
    }));

    if (slickFeaturedRef.current) {
      slickFeaturedRef.current.slickGoTo(getIndexDependOnDir(index));
    }
  };

  const handleFeaturedBeforeChange = (oldIndex, newIndex) => {
    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {
      currentIndex: getIndexDependOnDir(newIndex),
      transition: true
    }));
  };

  const handleFeaturedAfterChange = index => {
    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {
      currentIndex: getIndexDependOnDir(index),
      transition: false
    }));
  };

  const handleZoomButtonClick = () => {
    openPhotoswipe(state.currentIndex);
  }; // componentDidMount


  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    createGalleryRef.current = __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! ../../photoswipe */ "./src/photoswipe.ts")).then(module => module.default);
  }, []); // componentWillUnmount

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => () => {
    if (galleryRef.current) {
      galleryRef.current.destroy();
    }

    unmountedRef.current = true;
  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    // this is necessary to reset the transition state,
    // because when the direction changes, the afterChange event does not fire
    const timer = setTimeout(() => {
      setState(prev => _objectSpread(_objectSpread({}, prev), {}, {
        transition: false
      }));
    }, 0);
    return () => {
      clearTimeout(timer);
    };
  }, [direction]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    getIndexDependOnDirRef.current = getIndexDependOnDir;
  }, [getIndexDependOnDir]);
  const featured = images.map((image, index) => __jsx("div", {
    key: index,
    className: "product-image product-image--location--gallery",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 270,
      columnNumber: 9
    }
  }, __jsx(_AppLink__WEBPACK_IMPORTED_MODULE_2__["default"], {
    href: `/${image}`,
    className: "product-image__body",
    target: "_blank",
    onClick: event => handleFeaturedClick(event, index),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 271,
      columnNumber: 13
    }
  }, __jsx("img", {
    className: "product-image__img",
    src: image,
    alt: "",
    ref: element => {
      imagesRefs.current[index] = element;
    },
    "data-width": "700",
    "data-height": "700",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 285,
      columnNumber: 17
    }
  }))));
  const thumbnails = images.map((image, index) => {
    const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('product-gallery__carousel-item product-image', {
      'product-gallery__carousel-item--active': index === state.currentIndex
    });
    return __jsx("button", {
      type: "button",
      key: index,
      onClick: () => handleThumbnailClick(index),
      className: classes,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 303,
        columnNumber: 13
      }
    }, __jsx("div", {
      className: "product-image__body",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 309,
        columnNumber: 17
      }
    }, __jsx("img", {
      className: "product-image__img product-gallery__carousel-image",
      src: image,
      alt: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 310,
        columnNumber: 21
      }
    })));
  });
  return __jsx("div", {
    className: "product__gallery",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 317,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "product-gallery",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 318,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "product-gallery__featured",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 319,
      columnNumber: 17
    }
  }, layout !== 'quickview' && __jsx("button", {
    type: "button",
    className: "product-gallery__zoom",
    onClick: handleZoomButtonClick,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 321,
      columnNumber: 25
    }
  }, __jsx(ZoomIn24Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 322,
      columnNumber: 29
    }
  })), __jsx(_StroykaSlick__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({
    ref: slickFeaturedRef
  }, slickSettingsFeatured, {
    beforeChange: handleFeaturedBeforeChange,
    afterChange: handleFeaturedAfterChange,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 325,
      columnNumber: 21
    }
  }), featured)), __jsx("div", {
    className: "product-gallery__carousel",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 334,
      columnNumber: 17
    }
  }, __jsx(_StroykaSlick__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({}, slickSettingsThumbnails[layout], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 335,
      columnNumber: 21
    }
  }), thumbnails))));
}

/* harmony default export */ __webpack_exports__["default"] = (ProductGallery);

/***/ }),

/***/ "./src/components/shared/Quickview.tsx":
/*!*********************************************!*\
  !*** ./src/components/shared/Quickview.tsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var reactstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! reactstrap */ "reactstrap");
/* harmony import */ var reactstrap__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(reactstrap__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Product__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Product */ "./src/components/shared/Product.tsx");
/* harmony import */ var _store_quickview_quickviewHooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/quickview/quickviewHooks */ "./src/store/quickview/quickviewHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\Quickview.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application

var Cross20Svg = function Cross20Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    d: "M17.71 17.71a.99.99 0 0 1-1.4 0L10 11.4l-6.31 6.31a.99.99 0 1 1-1.4-1.4L8.6 10 2.29 3.69a.99.99 0 1 1 1.4-1.4L10 8.6l6.31-6.31a.99.99 0 1 1 1.4 1.4L11.4 10l6.31 6.31a.99.99 0 0 1 0 1.4z"
  }));
};

Cross20Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20"
};



function Quickview() {
  const quickview = Object(_store_quickview_quickviewHooks__WEBPACK_IMPORTED_MODULE_3__["useQuickview"])();
  const quickviewClose = Object(_store_quickview_quickviewHooks__WEBPACK_IMPORTED_MODULE_3__["useQuickviewClose"])();
  let productView;

  if (quickview.product !== null) {
    productView = __jsx(_Product__WEBPACK_IMPORTED_MODULE_2__["default"], {
      product: quickview.product,
      layout: "quickview",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 19,
        columnNumber: 23
      }
    });
  }

  return __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_1__["Modal"], {
    isOpen: quickview.open,
    toggle: quickviewClose,
    centered: true,
    size: "xl",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "quickview",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 13
    }
  }, __jsx("button", {
    className: "quickview__close",
    type: "button",
    onClick: quickviewClose,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 17
    }
  }, __jsx(Cross20Svg, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 21
    }
  })), productView));
}

/* harmony default export */ __webpack_exports__["default"] = (Quickview);

/***/ }),

/***/ "./src/components/shared/Rating.tsx":
/*!******************************************!*\
  !*** ./src/components/shared/Rating.tsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\Rating.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // application

var Rating13x12Svg = function Rating13x12Svg(props) {
  return __jsx("svg", props, __jsx("path", {
    className: "rating__fill",
    d: "M7 .3L9 4h3.5c.4.1.6.8.3 1.1L10 7.4l1 4c.1.4-.4.8-.8.6l-3.7-2-3.7 1.9c-.4.2-.9-.1-.8-.6l1-4L.2 5.1C-.2 4.8 0 4.1.5 4H4L6 .3c.2-.4.8-.4 1 0z"
  }), __jsx("path", {
    className: "rating__stroke",
    d: "M6.5 1.5l1.6 3 .3.5h3l-2 1.6-.5.4.1.6.7 3L7 9.1l-.5-.2-.5.2-2.8 1.5.7-3 .2-.6-.5-.4-2-1.6h3l.3-.5 1.6-3m0-1.5c-.2 0-.4.1-.5.3L4 4H.5c-.5.1-.7.8-.3 1.1L3 7.4l-1 4c-.1.3.2.6.5.6.1 0 .2 0 .3-.1L6.5 10l3.7 1.9c.1 0 .2.1.3.1.3 0 .6-.3.5-.6l-1-4 2.8-2.3c.3-.3.1-1-.3-1.1H9L7 .3C6.9.1 6.7 0 6.5 0z"
  }));
};

Rating13x12Svg.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "13",
  height: "12"
};

function Rating(props) {
  const {
    value = 0
  } = props;
  const stars = [1, 2, 3, 4, 5].map(rating => {
    const rootClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()('rating__star', {
      'rating__star--active': value >= rating
    });
    return __jsx(Rating13x12Svg, {
      key: rating,
      className: rootClasses,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 16
      }
    });
  });
  return __jsx("div", {
    className: "rating",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "rating__body",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 13
    }
  }, stars));
}

/* harmony default export */ __webpack_exports__["default"] = (Rating);

/***/ }),

/***/ "./src/components/shared/SocialLinks.tsx":
/*!***********************************************!*\
  !*** ./src/components/shared/SocialLinks.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _data_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/theme */ "./src/data/theme.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\SocialLinks.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
// react
 // third-party

 // data stubs



function SocialLinks(props) {
  const {
    shape,
    className
  } = props;
  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()(className, 'social-links', {
    'social-links--shape--circle': shape === 'circle',
    'social-links--shape--rounded': shape === 'rounded'
  });
  const items = [{
    type: 'facebook',
    url: _data_theme__WEBPACK_IMPORTED_MODULE_2__["default"].author.profile_url,
    icon: 'fab fa-facebook-f'
  }, // { type: 'twitter', url: theme.author.profile_url, icon: 'fab fa-twitter' },
  // { type: 'youtube', url: theme.author.profile_url, icon: 'fab fa-youtube' },
  {
    type: 'instagram',
    url: _data_theme__WEBPACK_IMPORTED_MODULE_2__["default"].author.profile_url,
    icon: 'fab fa-instagram'
  } // { type: 'rss', url: theme.author.profile_url, icon: 'fas fa-rss' },
  ].map(item => __jsx("li", {
    key: item.type,
    className: "social-links__item",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 32,
      columnNumber: 9
    }
  }, __jsx("a", {
    className: `social-links__link social-links__link--type--${item.type}`,
    href: item.url,
    target: "_blank",
    rel: "noopener noreferrer",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 13
    }
  }, __jsx("i", {
    className: item.icon,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 17
    }
  }))));
  return __jsx("div", {
    className: classes,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 9
    }
  }, __jsx("ul", {
    className: "social-links__list",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 13
    }
  }, items));
}

/* harmony default export */ __webpack_exports__["default"] = (SocialLinks);

/***/ }),

/***/ "./src/components/shared/StroykaSlick.tsx":
/*!************************************************!*\
  !*** ./src/components/shared/StroykaSlick.tsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_slick__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-slick */ "react-slick");
/* harmony import */ var react_slick__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_slick__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\components\\shared\\StroykaSlick.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// react
 // third-party


 // application



function StroykaSlickInner(props) {
  const {
    children,
    forwardRef,
    beforeChange
  } = props,
        otherProps = _objectWithoutProperties(props, ["children", "forwardRef", "beforeChange"]);

  const direction = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_3__["useDirection"])();
  const slickRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const originalSlickNextRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(() => {});
  const originalSlickPrevRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(() => {});
  const slickNextRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(() => {});
  const slickPrevRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(() => {});

  const getSlidesCount = () => react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.toArray(children).length;

  const getSlidesToShow = () => {
    const {
      responsive,
      slidesToShow
    } = props;
    let result = slidesToShow || 1;

    if (false) {}

    return result;
  }; // react-slick has a bug due to which it is initialized
  // with the incorrect position if the RTL property is true
  // this function returns the correct values


  const getStartPosition = () => {
    let {
      infinite
    } = props;
    infinite = infinite === true || infinite === undefined;

    if (direction === 'ltr') {
      return 0;
    }

    const slidesToShow = getSlidesToShow();
    const slidesCount = getSlidesCount();

    if (!infinite) {
      return Math.max(0, slidesCount - slidesToShow);
    }

    return (Math.ceil(slidesCount / slidesToShow) - 1) * slidesToShow;
  }; // returns indexes of active slides by currentIndex


  const getActiveSlides = currentIndex => {
    const slidesToShow = getSlidesToShow();
    const activeSlides = [];
    const slidesCount = getSlidesCount();
    const firstSlide = Math.max(0, Math.min(slidesCount - slidesToShow, currentIndex));
    const lastSlide = Math.min(slidesCount, firstSlide + slidesToShow);

    for (let i = firstSlide; i < lastSlide; i += 1) {
      activeSlides.push(i);
    }

    return activeSlides;
  };

  const {
    0: preventClick,
    1: setPreventClick
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: activeSlides,
    1: setActiveSlides
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(getActiveSlides(getStartPosition()));

  const onMousedown = event => {
    const downX = event.screenX;
    const downY = event.screenY;
    let clickPrevented = false;

    const onMousemove = moveEvent => {
      if (clickPrevented) {
        return;
      } // Thank you Pythagoras.


      const distance = Math.sqrt(Math.abs(downX - moveEvent.screenX) ** 2 + Math.abs(downY - moveEvent.screenY) ** 2);

      if (moveEvent.cancelable && distance > 3) {
        moveEvent.preventDefault();
      }

      if (distance > 15) {
        clickPrevented = true;
        setPreventClick(clickPrevented);
      }
    };

    const onMouseup = () => {
      clickPrevented = false;
      setPreventClick(clickPrevented);
      document.removeEventListener('mousemove', onMousemove);
      document.removeEventListener('mouseup', onMouseup);
    };

    document.addEventListener('mousemove', onMousemove);
    document.addEventListener('mouseup', onMouseup);
  };

  const setSlickRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(ref => {
    if (forwardRef) {
      if ('current' in forwardRef) {
        forwardRef.current = ref;
      } else {
        forwardRef(ref);
      }
    }

    if (ref && ref !== slickRef.current) {
      // react-slick forgot that if the RTL parameter is true,
      // then the next and prev methods need to be swapped, so let's do it yourself
      originalSlickNextRef.current = ref.slickNext;
      originalSlickPrevRef.current = ref.slickPrev; // eslint-disable-next-line no-param-reassign

      ref.slickNext = () => slickNextRef.current && slickNextRef.current(); // eslint-disable-next-line no-param-reassign


      ref.slickPrev = () => slickPrevRef.current && slickPrevRef.current();
    }

    slickRef.current = ref;
  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    slickNextRef.current = () => {
      originalSlickNextRef.current();
    };

    slickPrevRef.current = () => {
      originalSlickPrevRef.current();
    };
  }, [direction]); // If the slides have changed, we also need to change the active slides.

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const timer = setTimeout(() => {
      setActiveSlides(getActiveSlides(getStartPosition()));
    }, 0);
    return () => {
      clearTimeout(timer);
    };
  }, [children]); // Resets position when changing direction.

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (slickRef.current) {
      slickRef.current.slickGoTo(getStartPosition(), true);
    }
  }, [direction]);
  const beforeChangeWrapper = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])((oldIndex, newIndex) => {
    if (beforeChange) {
      beforeChange(oldIndex, newIndex);
    } // react-slick incorrectly adds the .slick-active class to slides
    // if the RTL parameter is true so we will do it ourselves


    setTimeout(() => {
      setActiveSlides(getActiveSlides(newIndex));
    }, 0);
  }, [beforeChange]);
  const classes = classnames__WEBPACK_IMPORTED_MODULE_1___default()('slick-prevent-click', {
    'slick-prevent-click--active': preventClick
  }); // we need to reverse slides if direction is RTL
  // because react-slick displays them in the wrong order

  let reversedChildren = react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.toArray(children);
  reversedChildren = reversedChildren.map((slide, index) => {
    // react-slick incorrectly adds the .slick-active class to slides
    // if the RTL parameter is true so we will do it ourselves
    const slideClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()({
      'correct-slick-active': activeSlides.includes(index)
    });
    return __jsx("div", {
      key: index,
      dir: direction,
      className: slideClasses,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 231,
        columnNumber: 13
      }
    }, slide);
  });
  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions
    __jsx("div", {
      className: classes,
      onMouseDown: onMousedown,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 239,
        columnNumber: 9
      }
    }, __jsx(react_slick__WEBPACK_IMPORTED_MODULE_2___default.a, _extends({}, otherProps, {
      beforeChange: beforeChangeWrapper,
      ref: setSlickRef,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 243,
        columnNumber: 13
      }
    }), reversedChildren))
  );
}

/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef((props, ref) => {
  const {
    children
  } = props;
  return __jsx(StroykaSlickInner, _extends({
    forwardRef: ref
  }, props, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 13
    }
  }), children);
}));

/***/ }),

/***/ "./src/data/headerNavigation.ts":
/*!**************************************!*\
  !*** ./src/data/headerNavigation.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const dataHeaderNavigation = [{
  title: 'Home',
  url: '/'
}, {
  title: 'Products',
  url: '/products',
  submenu: {
    type: 'menu',
    menu: [{
      title: 'Categories',
      url: '/products/categories'
    }, {
      title: 'Process',
      url: '/products/process'
    }, {
      title: 'Application',
      url: '/products/application'
    }, {
      title: 'Suppliers',
      url: '/products/suppliers'
    }]
  }
}, {
  title: 'Knowledge',
  url: '/knowledge',
  submenu: {
    type: 'menu',
    menu: [{
      title: 'Process',
      url: '/knowledge/process'
    }, {
      title: 'Application',
      url: '/knowledge/application'
    }]
  }
}, {
  title: 'News/Update',
  url: '/news'
}, {
  title: 'Suppliers',
  url: '',
  submenu: {
    type: 'megamenu',
    menu: {
      size: 'xl',
      columns: [{
        size: 12,
        links: []
      }]
    }
  }
}, {
  title: 'Abouts',
  url: '/about-us'
}, {
  title: 'Contacts',
  url: '/contact-us'
}];
/* harmony default export */ __webpack_exports__["default"] = (dataHeaderNavigation);

/***/ }),

/***/ "./src/data/mobileMenu.ts":
/*!********************************!*\
  !*** ./src/data/mobileMenu.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const dataMobileMenu = [{
  type: 'link',
  title: 'Home',
  url: '/'
}, {
  type: 'link',
  title: 'Products',
  url: '/products',
  children: [{
    type: 'link',
    title: 'Categories',
    url: '/products/categories'
  }, {
    type: 'link',
    title: 'Process',
    url: '/products/process'
  }, {
    type: 'link',
    title: 'Application',
    url: '/products/application'
  }, {
    type: 'link',
    title: 'Suppliers',
    url: '/products/suppliers'
  }]
}, {
  type: 'link',
  title: 'Knowledge',
  url: '/knowledge',
  children: [{
    type: 'link',
    title: 'Process',
    url: '/knowledge/process'
  }, {
    type: 'link',
    title: 'Application',
    url: '/knowledge/application'
  }]
}, {
  type: 'link',
  title: 'News/Update',
  url: '/news-update'
}, {
  type: 'link',
  title: 'Suppliers',
  url: '',
  children: []
}, {
  type: 'link',
  title: 'About us',
  url: '/about-us'
}, {
  type: 'link',
  title: 'Contact us',
  url: '/contact-us'
}, {
  type: 'button',
  title: 'Get Quote'
}, {
  type: 'button',
  title: 'Language',
  children: [{
    type: 'button',
    title: 'English',
    data: {
      type: 'language',
      locale: 'en'
    }
  }, {
    type: 'button',
    title: 'Thailand',
    data: {
      type: 'language',
      locale: 'th'
    }
  }]
}];
/* harmony default export */ __webpack_exports__["default"] = (dataMobileMenu);

/***/ }),

/***/ "./src/data/shopCurrencies.ts":
/*!************************************!*\
  !*** ./src/data/shopCurrencies.ts ***!
  \************************************/
/*! exports provided: dataShopDefaultCurrency, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataShopDefaultCurrency", function() { return dataShopDefaultCurrency; });
const dataShopCurrencies = [{
  code: 'EUR',
  symbol: '€',
  name: 'Euro'
}, {
  code: 'GBP',
  symbol: '£',
  name: 'Pound Sterling'
}, {
  code: 'USD',
  symbol: '$',
  name: 'US Dollar'
}, {
  code: 'RUB',
  symbol: '₽',
  name: 'Russian Ruble'
}];
const dataShopDefaultCurrency = dataShopCurrencies.find(x => x.code === 'USD');
/* harmony default export */ __webpack_exports__["default"] = (dataShopCurrencies);

/***/ }),

/***/ "./src/data/theme.ts":
/*!***************************!*\
  !*** ./src/data/theme.ts ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  name: 'Neotech Composite นีโอเทค คอมโพสิท ผู้นำเข้าอุปกรณ์คอมโพสิต ทุกชนิดราคาย่อมเยาว์',
  fullName: 'Neotech Composite นีโอเทค คอมโพสิท',
  url: 'https://neo.co.th',
  author: {
    name: 'Kapongdesign',
    profile_url: 'https://kapongdesign.com'
  },
  contacts: {
    address: '139 ซ. พระยาสุเรนทร์ 30 ถ.พระยาสุเรนทร์ แขวงบางชัน เขตคลองสามวา กรุงเทพ 10510',
    email: 'nattawut@neo.co.th',
    phone: '081-686-2922'
  },
  apiurl: 'http://127.0.0.1/neo.co.th/core-api/'
});

/***/ }),

/***/ "./src/fake-server/database/attributes.ts":
/*!************************************************!*\
  !*** ./src/fake-server/database/attributes.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const attributesDef = [{
  name: 'Color',
  slug: 'color',
  values: [{
    name: 'White',
    slug: 'white'
  }, {
    name: 'Silver',
    slug: 'silver'
  }, {
    name: 'Light Gray',
    slug: 'light-gray'
  }, {
    name: 'Gray',
    slug: 'gray'
  }, {
    name: 'Dark Gray',
    slug: 'dark-gray'
  }, {
    name: 'Coal',
    slug: 'coal'
  }, {
    name: 'Black',
    slug: 'black'
  }, {
    name: 'Red',
    slug: 'red'
  }, {
    name: 'Orange',
    slug: 'orange'
  }, {
    name: 'Yellow',
    slug: 'yellow'
  }, {
    name: 'Pear Green',
    slug: 'pear-green'
  }, {
    name: 'Green',
    slug: 'green'
  }, {
    name: 'Emerald',
    slug: 'emerald'
  }, {
    name: 'Shamrock',
    slug: 'shamrock'
  }, {
    name: 'Shakespeare',
    slug: 'shakespeare'
  }, {
    name: 'Blue',
    slug: 'blue'
  }, {
    name: 'Dark Blue',
    slug: 'dark-blue'
  }, {
    name: 'Violet',
    slug: 'violet'
  }, {
    name: 'Purple',
    slug: 'purple'
  }, {
    name: 'Cerise',
    slug: 'cerise'
  }]
}, {
  name: 'Speed',
  slug: 'speed',
  values: [{
    name: '750 RPM',
    slug: '750-rpm'
  }]
}, {
  name: 'Power Source',
  slug: 'power-source',
  values: [{
    name: 'Cordless-Electric',
    slug: 'cordless-electric'
  }]
}, {
  name: 'Battery Cell Type',
  slug: 'battery-cell-type',
  values: [{
    name: 'Lithium',
    slug: 'lithium'
  }]
}, {
  name: 'Voltage',
  slug: 'voltage',
  values: [{
    name: '20 Volts',
    slug: '20-volts'
  }]
}, {
  name: 'Battery Capacity',
  slug: 'battery-capacity',
  values: [{
    name: '2 Ah',
    slug: '2-Ah'
  }]
}];
/* harmony default export */ __webpack_exports__["default"] = (attributesDef);

/***/ }),

/***/ "./src/fake-server/database/brands.ts":
/*!********************************************!*\
  !*** ./src/fake-server/database/brands.ts ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const brandsData = [{
  name: 'Brandix',
  slug: 'brandix',
  image: 'assets/images/logos/logo-1.png'
}, {
  name: 'Wakita',
  slug: 'wakita',
  image: 'assets/images/logos/logo-2.png'
}, {
  name: 'Zosch',
  slug: 'zosch',
  image: 'assets/images/logos/logo-3.png'
}, {
  name: 'WeVALT',
  slug: 'wevalt',
  image: 'assets/images/logos/logo-4.png'
}, {
  name: 'Hammer',
  slug: 'hammer',
  image: 'assets/images/logos/logo-5.png'
}, {
  name: 'Mitasia',
  slug: 'mitasia',
  image: 'assets/images/logos/logo-6.png'
}, {
  name: 'Metaggo',
  slug: 'metaggo',
  image: 'assets/images/logos/logo-7.png'
}];
/* harmony default export */ __webpack_exports__["default"] = (brandsData);

/***/ }),

/***/ "./src/fake-server/database/categories.ts":
/*!************************************************!*\
  !*** ./src/fake-server/database/categories.ts ***!
  \************************************************/
/*! exports provided: prepareCategory, categoriesTreeData, categoriesListData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prepareCategory", function() { return prepareCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "categoriesTreeData", function() { return categoriesTreeData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "categoriesListData", function() { return categoriesListData; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./src/fake-server/utils.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


const getId = Object(_utils__WEBPACK_IMPORTED_MODULE_0__["makeIdGenerator"])();
const categoriesDef = [{
  name: 'Instruments',
  slug: 'instruments',
  items: 272,
  children: [{
    name: 'Power Tools',
    slug: 'power-tools',
    image: 'assets/images/categories/category-1.jpg',
    items: 370,
    children: [{
      name: 'Drills & Mixers',
      slug: 'drills-mixers',
      items: 57
    }, {
      name: 'Cordless Screwdrivers',
      slug: 'cordless-screwdrivers',
      items: 15
    }, {
      name: 'Screwdrivers',
      slug: 'screwdrivers',
      items: 126
    }, {
      name: 'Wrenches',
      slug: 'wrenches',
      items: 12
    }, {
      name: 'Grinding Machines',
      slug: 'grinding-machines',
      items: 25
    }, {
      name: 'Milling Cutters',
      slug: 'milling-cutters',
      items: 78
    }, {
      name: 'Electric Spray Guns',
      slug: 'electric-spray-guns',
      items: 3
    }]
  }, {
    name: 'Hand Tools',
    slug: 'hand-tools',
    image: 'assets/images/categories/category-2.jpg',
    items: 134,
    children: [{
      name: 'Tool Kits',
      slug: 'tool-kits',
      items: 57
    }, {
      name: 'Hammers',
      slug: 'hammers',
      items: 15
    }, {
      name: 'Spanners',
      slug: 'spanners',
      items: 5
    }, {
      name: 'Handsaws',
      slug: 'handsaws',
      items: 54
    }, {
      name: 'Paint Tools',
      slug: 'paint-tools',
      items: 13
    }]
  }, {
    name: 'Machine Tools',
    slug: 'machine-tools',
    image: 'assets/images/categories/category-3.jpg',
    items: 302,
    children: [{
      name: 'Lathes',
      slug: 'lathes',
      items: 104
    }, {
      name: 'Milling Machines',
      slug: 'milling-machines',
      items: 12
    }, {
      name: 'Grinding Machines',
      slug: 'grinding-machines',
      items: 67
    }, {
      name: 'CNC Machines',
      slug: 'cnc-machines',
      items: 5
    }, {
      name: 'Sharpening Machines',
      slug: 'sharpening-machines',
      items: 88
    }]
  }, {
    name: 'Power Machinery',
    slug: 'power-machinery',
    image: 'assets/images/categories/category-4.jpg',
    items: 79,
    children: [{
      name: 'Generators',
      slug: 'generators',
      items: 23
    }, {
      name: 'Compressors',
      slug: 'compressors',
      items: 76
    }, {
      name: 'Winches',
      slug: 'winches',
      items: 43
    }, {
      name: 'Plasma Cutting',
      slug: 'plasma-cutting',
      items: 128
    }, {
      name: 'Electric Motors',
      slug: 'electric-motors',
      items: 76
    }]
  }, {
    name: 'Measurement',
    slug: 'measurement',
    image: 'assets/images/categories/category-5.jpg',
    items: 366,
    children: [{
      name: 'Tape Measure',
      slug: 'tape-measure',
      items: 57
    }, {
      name: 'Theodolites',
      slug: 'theodolites',
      items: 5
    }, {
      name: 'Thermal Imagers',
      slug: 'thermal-imagers',
      items: 3
    }, {
      name: 'Calipers',
      slug: 'calipers',
      items: 37
    }, {
      name: 'Levels',
      slug: 'levels',
      items: 14
    }]
  }, {
    name: 'Clothes and PPE',
    slug: 'clothes-and-ppe',
    image: 'assets/images/categories/category-6.jpg',
    items: 82,
    children: [{
      name: 'Winter Workwear',
      slug: 'winter-workwear',
      items: 24
    }, {
      name: 'Summer Workwear',
      slug: 'summer-workwear',
      items: 87
    }, {
      name: 'Helmets',
      slug: 'helmets',
      items: 9
    }, {
      name: 'Belts and Bags',
      slug: 'belts-and-bags',
      items: 1
    }, {
      name: 'Work Shoes',
      slug: 'work-shoes',
      items: 0
    }]
  }]
}, {
  name: 'Electronics',
  slug: 'electronics',
  items: 54
}, {
  name: 'Computers',
  slug: 'computers',
  items: 421
}, {
  name: 'Automotive',
  slug: 'automotive',
  items: 182
}, {
  name: 'Furniture & Appliances',
  slug: 'furniture-appliances',
  items: 15
}, {
  name: 'Music & Books',
  slug: 'music-books',
  items: 89
}, {
  name: 'Health & Beauty',
  slug: 'health-beauty',
  items: 201
}];

function makeShopCategory(def) {
  return {
    type: 'shop',
    id: getId(),
    name: def.name,
    slug: def.slug || Object(_utils__WEBPACK_IMPORTED_MODULE_0__["nameToSlug"])(def.name),
    image: def.image,
    items: def.items || 0,
    customFields: {},
    parent: undefined,
    children: []
  };
}

function walkTree(makeFn, defs, parent) {
  let list = [];
  const tree = defs.map(def => {
    const category = makeFn(def);
    const [childrenTree, childrenList] = walkTree(makeFn, def.children || [], category);
    category.parent = parent;
    category.children = childrenTree;
    list = [...list, category, ...childrenList];
    return category;
  });
  return [tree, list];
}

function prepareCategory(category, depth) {
  let children;

  if (depth && depth > 0) {
    children = category.children && category.children.map(x => prepareCategory(x, depth - 1));
  }

  return JSON.parse(JSON.stringify(_objectSpread(_objectSpread({}, category), {}, {
    parent: category.parent ? prepareCategory(category.parent) : null,
    children
  })));
}
const [categoriesTreeData, categoriesListData] = walkTree(makeShopCategory, categoriesDef);

/***/ }),

/***/ "./src/fake-server/database/products.ts":
/*!**********************************************!*\
  !*** ./src/fake-server/database/products.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./src/fake-server/utils.ts");
/* harmony import */ var _brands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./brands */ "./src/fake-server/database/brands.ts");
/* harmony import */ var _categories__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./categories */ "./src/fake-server/database/categories.ts");
/* harmony import */ var _attributes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attributes */ "./src/fake-server/database/attributes.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





const getId = Object(_utils__WEBPACK_IMPORTED_MODULE_0__["makeIdGenerator"])();
const productsDef = [{
  slug: 'electric-planer-brandix-kl370090g-300-watts',
  name: 'Electric Planer Brandix KL370090G 300 Watts',
  price: 749,
  images: ['/images/products/product-1.jpg', '/images/products/product-1-1.jpg'],
  badges: 'new',
  rating: 4,
  reviews: 12,
  availability: 'in-stock',
  brand: 'brandix',
  categories: ['screwdrivers'],
  attributes: [{
    slug: 'color',
    values: 'yellow'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'undefined-tool-iradix-dps3000sy-2700-watts',
  name: 'Undefined Tool IRadix DPS3000SY 2700 Watts',
  price: 1019,
  images: ['/images/products/product-2.jpg', '/images/products/product-2-1.jpg'],
  badges: 'hot',
  rating: 5,
  reviews: 3,
  availability: 'in-stock',
  brand: 'zosch',
  categories: ['instruments'],
  attributes: [{
    slug: 'color',
    values: ['silver', 'cerise']
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'drill-screwdriver-brandix-alx7054-200-watts',
  name: 'Drill Screwdriver Brandix ALX7054 200 Watts',
  price: 850,
  images: ['/images/products/product-3.jpg', '/images/products/product-3-1.jpg'],
  rating: 4,
  reviews: 8,
  availability: 'in-stock',
  brand: 'brandix',
  categories: ['power-tools'],
  attributes: [{
    slug: 'color',
    values: 'yellow'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'drill-series-3-brandix-ksr4590pqs-1500-watts',
  name: 'Drill Series 3 Brandix KSR4590PQS 1500 Watts',
  price: 949,
  compareAtPrice: 1189,
  images: ['/images/products/product-4.jpg', '/images/products/product-4-1.jpg'],
  badges: 'sale',
  rating: 3,
  reviews: 15,
  availability: 'in-stock',
  brand: 'brandix',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'white'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-router-power-tool-2017erxpk',
  name: 'Brandix Router Power Tool 2017ERXPK',
  price: 1700,
  images: ['/images/products/product-5.jpg', '/images/products/product-5-1.jpg'],
  rating: 4,
  reviews: 2,
  availability: 'in-stock',
  brand: 'wakita',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'dark-blue'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-drilling-machine-dm2019kw4-4kw',
  name: 'Brandix Drilling Machine DM2019KW4 4kW',
  price: 3199,
  images: ['/images/products/product-6.jpg', '/images/products/product-6-1.jpg'],
  rating: 3,
  reviews: 21,
  availability: 'in-stock',
  brand: 'wakita',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'orange'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-pliers',
  name: 'Brandix Pliers',
  price: 24,
  images: ['/images/products/product-7.jpg', '/images/products/product-7-1.jpg'],
  rating: 2,
  reviews: 1,
  availability: 'in-stock',
  brand: 'wevalt',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'red'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'water-hose-40cm',
  name: 'Water Hose 40cm',
  price: 15,
  images: ['/images/products/product-8.jpg', '/images/products/product-8-1.jpg'],
  rating: 2,
  reviews: 5,
  availability: 'in-stock',
  brand: 'hammer',
  categories: [],
  attributes: [{
    slug: 'color',
    values: ['pear-green', 'blue']
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'spanner-wrench',
  name: 'Spanner Wrench',
  price: 19,
  images: ['/images/products/product-9.jpg', '/images/products/product-9-1.jpg'],
  rating: 4,
  reviews: 34,
  availability: 'in-stock',
  brand: 'hammer',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'green'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'water-tap',
  name: 'Water Tap',
  price: 15,
  images: ['/images/products/product-10.jpg', '/images/products/product-10-1.jpg'],
  rating: 5,
  reviews: 3,
  availability: 'in-stock',
  brand: 'hammer',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'gray'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'hand-tool-kit',
  name: 'Hand Tool Kit',
  price: 149,
  images: ['/images/products/product-11.jpg', '/images/products/product-11-1.jpg'],
  rating: 4,
  reviews: 7,
  availability: 'in-stock',
  brand: 'hammer',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'black'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'ash-s-chainsaw-3.5kw',
  name: 'Ash\'s Chainsaw 3.5kW',
  price: 666.99,
  images: ['/images/products/product-12.jpg', '/images/products/product-12-1.jpg'],
  rating: 5,
  reviews: 17,
  availability: 'in-stock',
  brand: 'mitasia',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'violet'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-angle-grinder-kzx3890pqw',
  name: 'Brandix Angle Grinder KZX3890PQW',
  price: 649,
  images: ['/images/products/product-13.jpg', '/images/products/product-13-1.jpg'],
  rating: 2,
  reviews: 8,
  availability: 'in-stock',
  brand: 'mitasia',
  categories: [],
  attributes: [{
    slug: 'color',
    values: 'purple'
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-air-compressor-deltakx500',
  name: 'Brandix Air Compressor DELTAKX500',
  price: 1800,
  images: ['/images/products/product-14.jpg', '/images/products/product-14-1.jpg'],
  rating: 3,
  reviews: 14,
  availability: 'in-stock',
  brand: 'brandix',
  categories: [],
  attributes: [{
    slug: 'color',
    values: ['light-gray', 'emerald']
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-electric-jigsaw-jig7000bq',
  name: 'Brandix Electric Jigsaw JIG7000BQ',
  price: 290,
  images: ['/images/products/product-15.jpg', '/images/products/product-15-1.jpg'],
  rating: 2,
  reviews: 1,
  availability: 'in-stock',
  brand: 'brandix',
  categories: [],
  attributes: [{
    slug: 'color',
    values: ['coal', 'shamrock']
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}, {
  slug: 'brandix-screwdriver-screw1500acc',
  name: 'Brandix Screwdriver SCREW1500ACC',
  price: 1499,
  images: ['/images/products/product-16.jpg', '/images/products/product-16-1.jpg', '/images/products/product-16-2.jpg', '/images/products/product-16-3.jpg', '/images/products/product-16-4.jpg'],
  rating: 5,
  reviews: 3,
  availability: 'in-stock',
  brand: 'metaggo',
  categories: [],
  attributes: [{
    slug: 'color',
    values: ['dark-gray', 'shakespeare']
  }, {
    slug: 'speed',
    values: '750-rpm',
    featured: true
  }, {
    slug: 'power-source',
    values: 'cordless-electric',
    featured: true
  }, {
    slug: 'battery-cell-type',
    values: 'lithium',
    featured: true
  }, {
    slug: 'voltage',
    values: '20-volts',
    featured: true
  }, {
    slug: 'battery-capacity',
    values: '2-Ah',
    featured: true
  }]
}];

function makeBadges(def) {
  if (!def) {
    return [];
  }

  return typeof def === 'string' ? [def] : def.slice();
}

function makeImages(def) {
  if (!def) {
    return [];
  }

  return typeof def === 'string' ? [def] : def.slice();
}

function makeCategories(def) {
  let categoriesDef = [];

  if (def) {
    categoriesDef = typeof def === 'string' ? [def] : def;
  }

  return _categories__WEBPACK_IMPORTED_MODULE_2__["categoriesListData"].filter(category => categoriesDef.includes(category.slug)).map(category => Object(_categories__WEBPACK_IMPORTED_MODULE_2__["prepareCategory"])(category));
}

function makeAttributeValues(defs, attributeDef) {
  const slugs = typeof defs === 'string' ? [defs] : defs;
  return slugs.map(slug => {
    const valueDef = attributeDef.values.find(x => x.slug === slug);

    if (!valueDef) {
      return null;
    }

    return _objectSpread(_objectSpread({}, valueDef), {}, {
      customFields: {}
    });
  }).filter(x => x !== null);
}

function makeAttributes(defs) {
  if (!defs) {
    return [];
  }

  return defs.map(def => {
    const attributeDef = _attributes__WEBPACK_IMPORTED_MODULE_3__["default"].find(x => x.slug === def.slug);

    if (!attributeDef) {
      return null;
    }

    const values = makeAttributeValues(def.values, attributeDef);

    if (!values.length) {
      return null;
    }

    return {
      name: attributeDef.name,
      slug: attributeDef.slug,
      featured: !!def.featured,
      values,
      customFields: {}
    };
  }).filter(x => x !== null);
}

const productsData = productsDef.map(productDef => ({
  id: getId(),
  name: productDef.name,
  sku: '83690/32',
  slug: productDef.slug || Object(_utils__WEBPACK_IMPORTED_MODULE_0__["nameToSlug"])(productDef.name),
  price: productDef.price,
  compareAtPrice: productDef.compareAtPrice || null,
  images: makeImages(productDef.images),
  badges: makeBadges(productDef.badges),
  rating: productDef.rating !== undefined ? productDef.rating : 0,
  reviews: productDef.reviews !== undefined ? productDef.reviews : 0,
  availability: productDef.availability || 'in-stock',
  brand: _brands__WEBPACK_IMPORTED_MODULE_1__["default"].find(x => x.slug === productDef.brand) || null,
  categories: makeCategories(productDef.categories),
  attributes: makeAttributes(productDef.attributes),
  customFields: {}
}));
/* harmony default export */ __webpack_exports__["default"] = (productsData);

/***/ }),

/***/ "./src/fake-server/endpoints/categories.ts":
/*!*************************************************!*\
  !*** ./src/fake-server/endpoints/categories.ts ***!
  \*************************************************/
/*! exports provided: getCategories, getCategoryBySlug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCategories", function() { return getCategories; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCategoryBySlug", function() { return getCategoryBySlug; });
/* harmony import */ var _database_categories__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../database/categories */ "./src/fake-server/database/categories.ts");

function getCategories(options = {}) {
  return Promise.resolve(_database_categories__WEBPACK_IMPORTED_MODULE_0__["categoriesTreeData"].map(x => Object(_database_categories__WEBPACK_IMPORTED_MODULE_0__["prepareCategory"])(x, options.depth)));
}
function getCategoryBySlug(slug, options = {}) {
  const category = _database_categories__WEBPACK_IMPORTED_MODULE_0__["categoriesListData"].find(x => x.slug === slug);
  return category ? Promise.resolve(Object(_database_categories__WEBPACK_IMPORTED_MODULE_0__["prepareCategory"])(category, options.depth)) : Promise.reject();
}

/***/ }),

/***/ "./src/fake-server/endpoints/products.ts":
/*!***********************************************!*\
  !*** ./src/fake-server/endpoints/products.ts ***!
  \***********************************************/
/*! exports provided: getProductBySlug, getRelatedProducts, getProductsList, getFeaturedProducts, getLatestProducts, getTopRatedProducts, getDiscountedProducts, getPopularProducts, getSuggestions, getCategoryLists */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProductBySlug", function() { return getProductBySlug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedProducts", function() { return getRelatedProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProductsList", function() { return getProductsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeaturedProducts", function() { return getFeaturedProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLatestProducts", function() { return getLatestProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTopRatedProducts", function() { return getTopRatedProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDiscountedProducts", function() { return getDiscountedProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPopularProducts", function() { return getPopularProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSuggestions", function() { return getSuggestions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCategoryLists", function() { return getCategoryLists; });
/* harmony import */ var _filters_category__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../filters/category */ "./src/fake-server/filters/category.ts");
/* harmony import */ var _filters_check__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filters/check */ "./src/fake-server/filters/check.ts");
/* harmony import */ var _filters_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../filters/color */ "./src/fake-server/filters/color.ts");
/* harmony import */ var _database_products__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../database/products */ "./src/fake-server/database/products.ts");
/* harmony import */ var _filters_radio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../filters/radio */ "./src/fake-server/filters/radio.ts");
/* harmony import */ var _filters_range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../filters/range */ "./src/fake-server/filters/range.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils */ "./src/fake-server/utils.ts");








function getProducts(shift, options) {
  const limit = options.limit || 8;
  let products = [..._database_products__WEBPACK_IMPORTED_MODULE_3__["default"].slice(shift), ..._database_products__WEBPACK_IMPORTED_MODULE_3__["default"].slice(0, shift)];

  if (options.category === 'power-tools') {
    products = products.slice().reverse();
  } else if (options.category === 'hand-tools') {
    products = [...products.slice(8), ...products.slice(0, 8)];
  } else if (options.category === 'plumbing') {
    products = [...products.slice(8), ...products.slice(0, 8)].reverse();
  }

  return Object(_utils__WEBPACK_IMPORTED_MODULE_6__["delayResponse"])(350, products.slice(0, limit));
}

function getProductBySlug(slug) {
  const product = _database_products__WEBPACK_IMPORTED_MODULE_3__["default"].find(x => x.slug === slug);
  return product ? Promise.resolve(product) : Promise.reject();
}
function getRelatedProducts(slug, options = {}) {
  const limit = options.limit || 8;
  return Promise.resolve(_database_products__WEBPACK_IMPORTED_MODULE_3__["default"].slice(0, limit));
}
function getProductsList(options = {}, filterValues = {}) {
  const filters = [new _filters_category__WEBPACK_IMPORTED_MODULE_0__["default"]('category', 'Categories'), new _filters_range__WEBPACK_IMPORTED_MODULE_5__["default"]('price', 'Price'), new _filters_check__WEBPACK_IMPORTED_MODULE_1__["default"]('brand', 'Brand'), new _filters_radio__WEBPACK_IMPORTED_MODULE_4__["default"]('discount', 'Discount'), new _filters_color__WEBPACK_IMPORTED_MODULE_2__["default"]('color', 'Color')];
  let items = _database_products__WEBPACK_IMPORTED_MODULE_3__["default"].slice(0);
  filters.forEach(filter => filter.makeItems(items, filterValues[filter.slug])); // Calculate items count for filter values.

  filters.forEach(filter => filter.calc(filters)); // Apply filters to products list.

  items = items.filter(product => filters.reduce((mr, filter) => mr && filter.test(product), true));
  const page = options.page || 1;
  const limit = options.limit || 12;
  const sort = options.sort || 'default';
  const total = items.length;
  const pages = Math.ceil(total / limit);
  const from = (page - 1) * limit + 1;
  const to = Math.max(Math.min(page * limit, total), from);
  items = items.sort((a, b) => {
    if (['name_asc', 'name_desc'].includes(sort)) {
      if (a.name === b.name) {
        return 0;
      }

      return (a.name > b.name ? 1 : -1) * (sort === 'name_asc' ? 1 : -1);
    }

    return 0;
  });
  const start = (page - 1) * limit;
  const end = start + limit;
  items = items.slice(start, end);
  return Object(_utils__WEBPACK_IMPORTED_MODULE_6__["delayResponse"])(350, {
    page,
    limit,
    sort,
    total,
    pages,
    from,
    to,
    items,
    filters: filters.map(x => x.build())
  });
}
function getFeaturedProducts(options = {}) {
  return getProducts(0, options);
}
function getLatestProducts(options = {}) {
  return getProducts(0, options);
}
function getTopRatedProducts(options = {}) {
  return getProducts(0, options);
}
function getDiscountedProducts(options = {}) {
  return getProducts(3, options);
}
function getPopularProducts(options = {}) {
  return getProducts(6, options);
}
function getSuggestions(query, options) {
  const limit = options.limit || 5;
  return Promise.resolve(_database_products__WEBPACK_IMPORTED_MODULE_3__["default"].filter(x => x.name.toLowerCase().includes(query.toLowerCase())).slice(0, limit));
}
function getCategoryLists(query, options) {
  const limit = options.limit || 5;
  return Promise.resolve(_database_products__WEBPACK_IMPORTED_MODULE_3__["default"].filter(x => x.name.toLowerCase().includes(query.toLowerCase())).slice(0, limit));
}

/***/ }),

/***/ "./src/fake-server/filters/abstract.ts":
/*!*********************************************!*\
  !*** ./src/fake-server/filters/abstract.ts ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AbstractFilterBuilder; });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class AbstractFilterBuilder {
  constructor(slug, name) {
    _defineProperty(this, "slug", void 0);

    _defineProperty(this, "name", void 0);

    this.slug = slug;
    this.name = name;
  }

}

/***/ }),

/***/ "./src/fake-server/filters/category.ts":
/*!*********************************************!*\
  !*** ./src/fake-server/filters/category.ts ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CategoryFilterBuilder; });
/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/fake-server/filters/abstract.ts");
/* harmony import */ var _database_categories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database/categories */ "./src/fake-server/database/categories.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



class CategoryFilterBuilder extends _abstract__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "value", null);

    _defineProperty(this, "items", []);
  }

  test() {
    if (this.value === null) {
      return true;
    } // return product.categories.reduce((acc, category) => (
    //     acc || category.slug === this.value
    // ), false);


    return true;
  }

  makeItems(products, value) {
    this.value = value || null;
    const category = _database_categories__WEBPACK_IMPORTED_MODULE_1__["categoriesListData"].find(x => x.cat_slug === value); // const categoryHasProductsFn = (x) => categoryHasProducts(x, productsData);

    const categoryHasProductsFn = () => true;

    if (category) {
      this.items = [Object(_database_categories__WEBPACK_IMPORTED_MODULE_1__["prepareCategory"])(category, 1)].map(x => _objectSpread(_objectSpread({}, x), {}, {
        children: x.children === undefined ? [] : x.children.filter(categoryHasProductsFn)
      }));
    } else {
      this.items = _database_categories__WEBPACK_IMPORTED_MODULE_1__["categoriesTreeData"].map(x => Object(_database_categories__WEBPACK_IMPORTED_MODULE_1__["prepareCategory"])(x)).filter(categoryHasProductsFn);
    }
  } // eslint-disable-next-line class-methods-use-this


  calc() {}

  build() {
    return {
      type: 'category',
      slug: this.slug,
      name: this.name,
      items: this.items,
      value: this.value
    };
  }

}

/***/ }),

/***/ "./src/fake-server/filters/check.ts":
/*!******************************************!*\
  !*** ./src/fake-server/filters/check.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CheckFilterBuilder; });
/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/fake-server/filters/abstract.ts");
/* harmony import */ var _database_products__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database/products */ "./src/fake-server/database/products.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function parseValue(value) {
  return value ? value.split(',') : [];
}

class CheckFilterBuilder extends _abstract__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "items", []);

    _defineProperty(this, "value", []);
  }

  test(product) {
    if (this.value.length === 0) {
      return true;
    }

    return this.value.reduce((result, value) => result || this.extractItems(product).map(x => x.slug).includes(value), false);
  }

  makeItems(products, value) {
    products.forEach(product => this.extractItems(product).forEach(item => {
      if (!this.items.find(x => x.slug === item.slug)) {
        this.items.push(item);
      }
    }));
    this.value = parseValue(value);
  }

  calc(filters) {
    const products = _database_products__WEBPACK_IMPORTED_MODULE_1__["default"].filter(product => filters.reduce((isMatched, filter) => isMatched && (filter === this || filter.test(product)), true));
    this.items = this.items.map(item => {
      const count = products.reduce((acc, product) => acc + (this.extractItems(product).map(x => x.slug).includes(item.slug) ? 1 : 0), 0);
      return _objectSpread(_objectSpread({}, item), {}, {
        count
      });
    });
  }

  build() {
    return {
      type: 'check',
      slug: this.slug,
      name: this.name,
      items: this.items,
      value: this.value
    };
  }

  extractItems(product) {
    if (this.slug === 'brand') {
      return product.brand ? [{
        slug: product.brand.slug,
        name: product.brand.name,
        count: 0
      }] : [];
    }

    throw Error();
  }

}

/***/ }),

/***/ "./src/fake-server/filters/color.ts":
/*!******************************************!*\
  !*** ./src/fake-server/filters/color.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ColorFilterBuilder; });
/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/fake-server/filters/abstract.ts");
/* harmony import */ var _database_products__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database/products */ "./src/fake-server/database/products.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



const colors = [{
  slug: 'white',
  color: '#fff'
}, {
  slug: 'silver',
  color: '#d9d9d9'
}, {
  slug: 'light-gray',
  color: '#b3b3b3'
}, {
  slug: 'gray',
  color: '#808080'
}, {
  slug: 'dark-gray',
  color: '#666'
}, {
  slug: 'coal',
  color: '#4d4d4d'
}, {
  slug: 'black',
  color: '#262626'
}, {
  slug: 'red',
  color: '#ff4040'
}, {
  slug: 'orange',
  color: '#ff8126'
}, {
  slug: 'yellow',
  color: '#ffd333'
}, {
  slug: 'pear-green',
  color: '#becc1f'
}, {
  slug: 'green',
  color: '#8fcc14'
}, {
  slug: 'emerald',
  color: '#47cc5e'
}, {
  slug: 'shamrock',
  color: '#47cca0'
}, {
  slug: 'shakespeare',
  color: '#47cccc'
}, {
  slug: 'blue',
  color: '#40bfff'
}, {
  slug: 'dark-blue',
  color: '#3d6dcc'
}, {
  slug: 'violet',
  color: '#7766cc'
}, {
  slug: 'purple',
  color: '#b852cc'
}, {
  slug: 'cerise',
  color: '#e53981'
}];

function getColorCode(slug) {
  const result = colors.find(x => x.slug === slug);
  return result ? result.color : '#000';
}

function parseValue(value) {
  return value ? value.split(',') : [];
}

class ColorFilterBuilder extends _abstract__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "items", []);

    _defineProperty(this, "value", []);
  }

  test(product) {
    if (this.value.length === 0) {
      return true;
    }

    return this.value.reduce((result, value) => result || this.extractItems(product).map(x => x.slug).includes(value), false);
  }

  makeItems(products, value) {
    products.forEach(product => this.extractItems(product).forEach(item => {
      if (!this.items.find(x => x.slug === item.slug)) {
        this.items.push(item);
      }
    }));
    this.value = parseValue(value);
  }

  calc(filters) {
    const products = _database_products__WEBPACK_IMPORTED_MODULE_1__["default"].filter(product => filters.reduce((isMatched, filter) => isMatched && (filter === this || filter.test(product)), true));
    this.items = this.items.map(item => {
      const count = products.reduce((acc, product) => {
        const match = this.extractItems(product).map(x => x.slug).includes(item.slug);
        return acc + (match ? 1 : 0);
      }, 0);
      return _objectSpread(_objectSpread({}, item), {}, {
        count
      });
    }).sort((a, b) => colors.findIndex(x => x.slug === a.slug) - colors.findIndex(x => x.slug === b.slug));
  }

  build() {
    return {
      type: 'color',
      slug: this.slug,
      name: this.name,
      items: this.items,
      value: this.value
    };
  }

  extractItems(product) {
    const attribute = product.attributes.find(x => x.slug === this.slug);

    if (!attribute) {
      return [];
    }

    return attribute.values.map(value => ({
      slug: value.slug,
      name: value.name,
      color: getColorCode(value.slug),
      count: 0
    }));
  }

}

/***/ }),

/***/ "./src/fake-server/filters/radio.ts":
/*!******************************************!*\
  !*** ./src/fake-server/filters/radio.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RadioFilterBuilder; });
/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/fake-server/filters/abstract.ts");
/* harmony import */ var _database_products__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database/products */ "./src/fake-server/database/products.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



class RadioFilterBuilder extends _abstract__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "items", []);

    _defineProperty(this, "value", null);
  }

  test(product) {
    return this.value !== null && this.extractItems(product).map(x => x.slug).includes(this.value);
  }

  makeItems(products, value) {
    products.forEach(product => this.extractItems(product).forEach(item => {
      if (!this.items.find(x => x.slug === item.slug)) {
        this.items.push(item);
      }
    }));
    this.value = value || this.items[0].slug;
  }

  calc(filters) {
    const products = _database_products__WEBPACK_IMPORTED_MODULE_1__["default"].filter(product => filters.reduce((isMatched, filter) => isMatched && (filter === this || filter.test(product)), true));
    this.items = this.items.map(item => {
      const count = products.reduce((acc, product) => {
        const match = this.extractItems(product).map(x => x.slug).includes(item.slug);
        return acc + (match ? 1 : 0);
      }, 0);
      return _objectSpread(_objectSpread({}, item), {}, {
        count
      });
    });
  }

  build() {
    return {
      type: 'radio',
      slug: this.slug,
      name: this.name,
      items: this.items,
      value: this.value
    };
  }

  extractItems(product) {
    if (this.slug === 'discount') {
      const items = [{
        slug: 'any',
        name: 'Any',
        count: 0
      }];

      if (product.compareAtPrice) {
        items.push({
          slug: 'yes',
          name: 'Yes',
          count: 0
        });
      } else {
        items.push({
          slug: 'no',
          name: 'No',
          count: 0
        });
      }

      return items;
    }

    throw Error();
  }

}

/***/ }),

/***/ "./src/fake-server/filters/range.ts":
/*!******************************************!*\
  !*** ./src/fake-server/filters/range.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RangeFilterBuilder; });
/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract */ "./src/fake-server/filters/abstract.ts");
/* harmony import */ var _database_products__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database/products */ "./src/fake-server/database/products.ts");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function parseValue(value) {
  return value.split('-').map(x => parseFloat(x));
}

class RangeFilterBuilder extends _abstract__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "min", 0);

    _defineProperty(this, "max", 0);

    _defineProperty(this, "value", [0, 0]);
  }

  test(product) {
    const value = this.extractValue(product);
    return value >= this.value[0] && value <= this.value[1];
  }

  makeItems(products, value) {
    this.max = _database_products__WEBPACK_IMPORTED_MODULE_1__["default"].reduce((acc, product) => Math.max(acc, this.extractValue(product)), 0);
    this.min = _database_products__WEBPACK_IMPORTED_MODULE_1__["default"].reduce((acc, product) => Math.min(acc, this.extractValue(product)), this.max);
    /** Calculates the number of digits for rounding. */

    let digit = Math.max(Math.ceil(this.max).toString().length - 2, 1);
    digit = 10 ** digit;
    this.max = Math.ceil(this.max / digit) * digit;
    this.min = Math.floor(this.min / digit) * digit;
    this.value = [this.min, this.max];

    if (value) {
      this.value = parseValue(value);
    }
  } // eslint-disable-next-line class-methods-use-this


  calc() {}

  extractValue(product) {
    if (this.slug === 'price') {
      return product.price;
    }

    throw Error();
  }

  build() {
    return {
      type: 'range',
      slug: this.slug,
      name: this.name,
      min: this.min,
      max: this.max,
      value: this.value
    };
  }

}

/***/ }),

/***/ "./src/fake-server/utils.ts":
/*!**********************************!*\
  !*** ./src/fake-server/utils.ts ***!
  \**********************************/
/*! exports provided: makeIdGenerator, nameToSlug, categoryHasProducts, delayResponse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeIdGenerator", function() { return makeIdGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nameToSlug", function() { return nameToSlug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "categoryHasProducts", function() { return categoryHasProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delayResponse", function() { return delayResponse; });
function makeIdGenerator() {
  let lastId = 0;
  return () => {
    lastId += 1;
    return lastId;
  };
}
function nameToSlug(name) {
  return name.toLowerCase().replace(/[^a-z0-9]/, '-').replace(/-+/, '-');
}
function categoryHasProducts(category, products) {
  return products.filter(product => product.categories.findIndex(x => x.slug === category.slug) !== -1).length > 0;
}
function delayResponse(delay, response) {
  return new Promise(resolve => {
    setTimeout(() => resolve(response), false ? undefined : 0);
  });
}

/***/ }),

/***/ "./src/i18n/index.ts":
/*!***************************!*\
  !*** ./src/i18n/index.ts ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _messages_en_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./messages/en.json */ "./src/i18n/messages/en.json");
var _messages_en_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./messages/en.json */ "./src/i18n/messages/en.json", 1);
/* harmony import */ var _messages_th_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages/th.json */ "./src/i18n/messages/th.json");
var _messages_th_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./messages/th.json */ "./src/i18n/messages/th.json", 1);
// application


const languages = [{
  locale: 'en',
  code: 'EN',
  name: 'English',
  icon: '/images/languages/uk.png',
  direction: 'ltr',
  messages: _messages_en_json__WEBPACK_IMPORTED_MODULE_0__
}, {
  locale: 'th',
  code: 'TH',
  name: 'Thailand',
  icon: '/images/languages/thailand.png',
  direction: 'ltr',
  messages: _messages_th_json__WEBPACK_IMPORTED_MODULE_1__
}];
/* harmony default export */ __webpack_exports__["default"] = (languages);

/***/ }),

/***/ "./src/i18n/messages/en.json":
/*!***********************************!*\
  !*** ./src/i18n/messages/en.json ***!
  \***********************************/
/*! exports provided: topbar.aboutUs, topbar.contacts, topbar.storeLocation, topbar.trackOrder, topbar.blog, topbar.myAccount, topbar.currency, topbar.language, topbar.privacy, topbar.suppliers, topbar.categories, topbar.knowledge, topbar.news, topbar.information, topbar.ouraddress, topbar.leaveusamessage, topbar.sendmessage, topbar.message, topbar.subject, topbar.email, topbar.yourname, topbar.website, topbar.lineid, topbar.fax, topbar.phone, topbar.newsletter, header.phoneLabel, header.phone, nav.home, Home, Products, Knowledge, Categories, Process, Application, News/Update, Suppliers, Abouts, Contacts, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"topbar.aboutUs\":\"About Us\",\"topbar.contacts\":\"Contact us\",\"topbar.storeLocation\":\"Store Location\",\"topbar.trackOrder\":\"Track Order\",\"topbar.blog\":\"Blog\",\"topbar.myAccount\":\"My Account\",\"topbar.currency\":\"Currency\",\"topbar.language\":\"Language\",\"topbar.privacy\":\"Privacy Policy\",\"topbar.suppliers\":\"Suppliers\",\"topbar.categories\":\"Categories\",\"topbar.knowledge\":\"Knowledge\",\"topbar.news\":\"News\",\"topbar.information\":\"Information\",\"topbar.ouraddress\":\"Our Address\",\"topbar.leaveusamessage\":\"Leave us a Message\",\"topbar.sendmessage\":\"Send Message\",\"topbar.message\":\"Message\",\"topbar.subject\":\"Subject\",\"topbar.email\":\"Email\",\"topbar.yourname\":\"Your name\",\"topbar.website\":\"Website\",\"topbar.lineid\":\"Line ID\",\"topbar.fax\":\"Fax\",\"topbar.phone\":\"Phone\",\"topbar.newsletter\":\"Newsletter\",\"header.phoneLabel\":\"Customer Service\",\"header.phone\":\"(800) 060-0730\",\"nav.home\":\"Home\",\"Home\":\"Home\",\"Products\":\"Products\",\"Knowledge\":\"Knowledge\",\"Categories\":\"Categories\",\"Process\":\"Process\",\"Application\":\"Application\",\"News/Update\":\"News/Update\",\"Suppliers\":\"Suppliers\",\"Abouts\":\"About us\",\"Contacts\":\"Contact us\"}");

/***/ }),

/***/ "./src/i18n/messages/th.json":
/*!***********************************!*\
  !*** ./src/i18n/messages/th.json ***!
  \***********************************/
/*! exports provided: topbar.aboutUs, topbar.contacts, topbar.storeLocation, topbar.trackOrder, topbar.blog, topbar.myAccount, topbar.currency, topbar.language, topbar.privacy, topbar.suppliers, topbar.categories, topbar.knowledge, topbar.news, topbar.information, topbar.ouraddress, topbar.leaveusamessage, topbar.sendmessage, topbar.message, topbar.subject, topbar.email, topbar.yourname, topbar.website, topbar.lineid, topbar.fax, topbar.phone, topbar.newsletter, header.phoneLabel, header.phone, nav.home, Home, Products, Knowledge, Categories, Process, Application, News/Update, Suppliers, Abouts, Contacts, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"topbar.aboutUs\":\"เกี่ยวกับเรา\",\"topbar.contacts\":\"ติดต่อเรา\",\"topbar.storeLocation\":\"Store Location\",\"topbar.trackOrder\":\"Track Order\",\"topbar.blog\":\"บทความ\",\"topbar.myAccount\":\"My Account\",\"topbar.currency\":\"Currency\",\"topbar.language\":\"เลือกภาษา\",\"topbar.privacy\":\"นโยบายความเป็นส่วนตัว\",\"topbar.suppliers\":\"ผู้ผลิต\",\"topbar.categories\":\"หมวดหมู่สินค้า\",\"topbar.knowledge\":\"สาระหน้ารู้\",\"topbar.news\":\"ข่าวสาร/อัพเดท\",\"topbar.information\":\"ข้อมูลเพิ่มเติม\",\"topbar.ouraddress\":\"ที่อยู่ของเรา\",\"topbar.leaveusamessage\":\"ฝากข้อความถึงเรา\",\"topbar.sendmessage\":\"ส่งข้อความ\",\"topbar.message\":\"ข้อความ\",\"topbar.subject\":\"หัวข้อ\",\"topbar.email\":\"อีเมล์\",\"topbar.yourname\":\"ชื่อ-สกุล\",\"topbar.website\":\"เว็บไซต์\",\"topbar.lineid\":\"ไลน์ไอดี\",\"topbar.fax\":\"แฟกซ์\",\"topbar.phone\":\"โทรศัพท์\",\"topbar.newsletter\":\"สมัครรับข่าวสาร\",\"header.phoneLabel\":\"สายด่วนบริการลูกค้า\",\"header.phone\":\"(081-686-2922)\",\"nav.home\":\"หน้าแรก\",\"Home\":\"หน้าแรก\",\"Products\":\"สินค้าของเรา\",\"Knowledge\":\"สาระหน้ารู้\",\"Categories\":\"หมวดหมู่สินค้า\",\"Process\":\"กระบวนการ\",\"Application\":\"การใช้งาน\",\"News/Update\":\"ข่าวสาร/อัพเดท\",\"Suppliers\":\"ผู้ผลิต\",\"Abouts\":\"เกี่ยวกับเรา\",\"Contacts\":\"ติดต่อเรา\"}");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-intl */ "react-intl");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_intl__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Layout */ "./src/components/Layout.tsx");
/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/store */ "./src/store/store.ts");
/* harmony import */ var _store_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/client */ "./src/store/client.ts");
/* harmony import */ var _store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/locale/localeHooks */ "./src/store/locale/localeHooks.ts");
/* harmony import */ var _scss_index_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scss/index.scss */ "./src/scss/index.scss");
/* harmony import */ var _scss_index_scss__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_scss_index_scss__WEBPACK_IMPORTED_MODULE_7__);
var _jsxFileName = "D:\\xampp\\htdocs\\neo.co.th\\nextapp\\src\\pages\\_app.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// react
 // third-party


 // application




 // styles



function NeoApp({
  Component,
  pageProps,
  router
}) {
  const headerLayout = 'compact';
  const applyClientState = Object(_store_client__WEBPACK_IMPORTED_MODULE_5__["useApplyClientState"])();
  const locale = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_6__["useLocale"])();
  const messages = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_6__["useMessages"])();
  const direction = Object(_store_locale_localeHooks__WEBPACK_IMPORTED_MODULE_6__["useDirection"])();
  const store = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useStore"])(); // preloader

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const preloader = document.querySelector('.site-preloader');

    if (!preloader) {
      return;
    }

    setTimeout(() => {
      const onTransitionEnd = event => {
        if (event instanceof TransitionEvent && event.propertyName === 'opacity' && preloader.parentNode) {
          preloader.parentNode.removeChild(preloader);
        }
      };

      preloader.addEventListener('transitionend', onTransitionEnd);
      preloader.classList.add('site-preloader__fade');

      if (getComputedStyle(preloader).opacity === '0' && preloader.parentNode) {
        preloader.parentNode.removeChild(preloader);
      }
    }, 100);
  }, []); // Loading and saving state on the client side (cart, wishlist, etc.).

  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const state = Object(_store_store__WEBPACK_IMPORTED_MODULE_4__["load"])();

    if (state) {
      applyClientState(state);
    }

    if (false) {}
  }, [store]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    document.documentElement.lang = locale;
    document.documentElement.dir = direction;
  }, [direction, locale]);
  const content = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(() => {
    const PageLayout = Component.Layout || react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment;
    return __jsx(_components_Layout__WEBPACK_IMPORTED_MODULE_3__["default"], {
      headerLayout: headerLayout,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 78,
        columnNumber: 13
      }
    }, __jsx(PageLayout, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 79,
        columnNumber: 17
      }
    }, __jsx(Component, _extends({}, pageProps, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 80,
        columnNumber: 21
      }
    }))));
  }, [headerLayout, Component, pageProps]);
  return __jsx(react_intl__WEBPACK_IMPORTED_MODULE_1__["IntlProvider"], {
    locale: locale,
    messages: messages,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 9
    }
  }, content);
}

/* harmony default export */ __webpack_exports__["default"] = (_store_store__WEBPACK_IMPORTED_MODULE_4__["wrapper"].withRedux(NeoApp));

/***/ }),

/***/ "./src/scss/index.scss":
/*!*****************************!*\
  !*** ./src/scss/index.scss ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/services/url.ts":
/*!*****************************!*\
  !*** ./src/services/url.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const url = {
  home: () => ({
    href: '/'
  }),
  catalog: () => '/shop/catalog',
  cart: () => ({
    href: '/shop/cart'
  }),
  checkout: () => ({
    href: '/shop/checkout'
  }),
  category: category => {
    if (category.type === 'shop') {
      return url.shopCategory(category);
    }

    if (category.type === 'blog') {
      return url.blogCategory();
    }

    throw Error('Undefined category type');
  },
  shopCategory: category => ({
    href: '/shop/catalog/[slug]',
    as: `/shop/catalog/${category.slug}`
  }),
  product: product => ({
    href: '/shop/products/[slug]',
    as: `/shop/products/${product.slug}`
  }),
  wishlist: () => ({
    href: '/shop/wishlist'
  }),
  blogCategory: () => ({
    href: '/blog/category-classic'
  }),
  blogPost: () => ({
    href: '/blog/post-classic'
  }),
  accountSignIn: () => ({
    href: '/account/login'
  }),
  accountSignUp: () => ({
    href: '/account/login'
  }),
  accountSignOut: () => ({
    href: '/account/login'
  }),
  accountDashboard: () => ({
    href: '/account/dashboard'
  }),
  accountProfile: () => ({
    href: '/account/profile'
  }),
  accountOrders: () => ({
    href: '/account/orders'
  }),
  accountOrder: order => ({
    href: '/account/orders/[orderId]',
    as: `/account/orders/${order.id}`
  }),
  accountAddresses: () => ({
    href: '/account/addresses',
    as: '/account/addresses'
  }),
  accountAddress: address => ({
    href: '/account/addresses/[addressId]',
    as: `/account/addresses/${address.id}`
  }),
  accountPassword: () => ({
    href: '/account/password',
    as: '/account/password'
  }),
  contacts: () => ({
    href: '/site/contact-us'
  }),
  terms: () => ({
    href: '/site/terms'
  })
};
/* harmony default export */ __webpack_exports__["default"] = (url);

/***/ }),

/***/ "./src/store/cart/cartActionTypes.ts":
/*!*******************************************!*\
  !*** ./src/store/cart/cartActionTypes.ts ***!
  \*******************************************/
/*! exports provided: CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_QUANTITIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CART_ADD_ITEM", function() { return CART_ADD_ITEM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CART_REMOVE_ITEM", function() { return CART_REMOVE_ITEM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CART_UPDATE_QUANTITIES", function() { return CART_UPDATE_QUANTITIES; });
const CART_ADD_ITEM = 'CART_ADD_ITEM';
const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';
const CART_UPDATE_QUANTITIES = 'CART_UPDATE_QUANTITIES';

/***/ }),

/***/ "./src/store/cart/cartActions.ts":
/*!***************************************!*\
  !*** ./src/store/cart/cartActions.ts ***!
  \***************************************/
/*! exports provided: cartAddItemSuccess, cartRemoveItemSuccess, cartUpdateQuantitiesSuccess, cartAddItem, cartRemoveItem, cartUpdateQuantities */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartAddItemSuccess", function() { return cartAddItemSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartRemoveItemSuccess", function() { return cartRemoveItemSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartUpdateQuantitiesSuccess", function() { return cartUpdateQuantitiesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartAddItem", function() { return cartAddItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartRemoveItem", function() { return cartRemoveItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartUpdateQuantities", function() { return cartUpdateQuantities; });
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-toastify */ "react-toastify");
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_toastify__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _cartActionTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartActionTypes */ "./src/store/cart/cartActionTypes.ts");
// third-party
 // application


function cartAddItemSuccess(product, options = [], quantity = 1) {
  react_toastify__WEBPACK_IMPORTED_MODULE_0__["toast"].success(`Product "${product.name}" added to cart!`);
  return {
    type: _cartActionTypes__WEBPACK_IMPORTED_MODULE_1__["CART_ADD_ITEM"],
    product,
    options,
    quantity
  };
}
function cartRemoveItemSuccess(itemId) {
  return {
    type: _cartActionTypes__WEBPACK_IMPORTED_MODULE_1__["CART_REMOVE_ITEM"],
    itemId
  };
}
function cartUpdateQuantitiesSuccess(quantities) {
  return {
    type: _cartActionTypes__WEBPACK_IMPORTED_MODULE_1__["CART_UPDATE_QUANTITIES"],
    quantities
  };
}
function cartAddItem(product, options = [], quantity = 1) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(cartAddItemSuccess(product, options, quantity));
      resolve();
    }, 500);
  });
}
function cartRemoveItem(itemId) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(cartRemoveItemSuccess(itemId));
      resolve();
    }, 500);
  });
}
function cartUpdateQuantities(quantities) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(cartUpdateQuantitiesSuccess(quantities));
      resolve();
    }, 500);
  });
}

/***/ }),

/***/ "./src/store/cart/cartHooks.ts":
/*!*************************************!*\
  !*** ./src/store/cart/cartHooks.ts ***!
  \*************************************/
/*! exports provided: useCart, useCartAddItem, useCartRemoveItem, useCartUpdateQuantities */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCart", function() { return useCart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCartAddItem", function() { return useCartAddItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCartRemoveItem", function() { return useCartRemoveItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCartUpdateQuantities", function() { return useCartUpdateQuantities; });
/* harmony import */ var _cartActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartActions */ "./src/store/cart/cartActions.ts");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
// application


const useCart = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_1__["useAppSelector"])(state => state.cart);
const useCartAddItem = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_1__["useAppAction"])(_cartActions__WEBPACK_IMPORTED_MODULE_0__["cartAddItem"]);
const useCartRemoveItem = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_1__["useAppAction"])(_cartActions__WEBPACK_IMPORTED_MODULE_0__["cartRemoveItem"]);
const useCartUpdateQuantities = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_1__["useAppAction"])(_cartActions__WEBPACK_IMPORTED_MODULE_0__["cartUpdateQuantities"]);

/***/ }),

/***/ "./src/store/cart/cartReducer.ts":
/*!***************************************!*\
  !*** ./src/store/cart/cartReducer.ts ***!
  \***************************************/
/*! exports provided: CART_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CART_NAMESPACE", function() { return CART_NAMESPACE; });
/* harmony import */ var _cartActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartActionTypes */ "./src/store/cart/cartActionTypes.ts");
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client */ "./src/store/client.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function findItemIndex(items, product, options) {
  return items.findIndex(item => {
    if (item.product.id !== product.id || item.options.length !== options.length) {
      return false;
    }

    for (let i = 0; i < options.length; i += 1) {
      const option = options[i];
      const itemOption = item.options.find(itemOption => itemOption.optionId === option.optionId && itemOption.valueId === option.valueId);

      if (!itemOption) {
        return false;
      }
    }

    return true;
  });
}

function calcSubtotal(items) {
  return items.reduce((subtotal, item) => subtotal + item.total, 0);
}

function calcQuantity(items) {
  return items.reduce((quantity, item) => quantity + item.quantity, 0);
}

function calcTotal(subtotal, totals) {
  return totals.reduce((acc, extraLine) => acc + extraLine.price, subtotal);
}

function calcTotals(items) {
  if (items.length === 0) {
    return [];
  }

  const subtotal = calcSubtotal(items);
  return [{
    type: 'shipping',
    title: 'Shipping',
    price: 25
  }, {
    type: 'tax',
    title: 'Tax',
    price: subtotal * 0.2
  }];
}

function addItem(state, product, options, quantity) {
  const itemIndex = findItemIndex(state.items, product, options);
  let newItems;
  let {
    lastItemId
  } = state;

  if (itemIndex === -1) {
    lastItemId += 1;
    newItems = [...state.items, {
      id: lastItemId,
      product: JSON.parse(JSON.stringify(product)),
      options: JSON.parse(JSON.stringify(options)),
      price: product.price,
      total: product.price * quantity,
      quantity
    }];
  } else {
    const item = state.items[itemIndex];
    newItems = [...state.items.slice(0, itemIndex), _objectSpread(_objectSpread({}, item), {}, {
      quantity: item.quantity + quantity,
      total: (item.quantity + quantity) * item.price
    }), ...state.items.slice(itemIndex + 1)];
  }

  const subtotal = calcSubtotal(newItems);
  const totals = calcTotals(newItems);
  const total = calcTotal(subtotal, totals);
  return _objectSpread(_objectSpread({}, state), {}, {
    lastItemId,
    subtotal,
    totals,
    total,
    items: newItems,
    quantity: calcQuantity(newItems)
  });
}

function removeItem(state, itemId) {
  const {
    items
  } = state;
  const newItems = items.filter(item => item.id !== itemId);
  const subtotal = calcSubtotal(newItems);
  const totals = calcTotals(newItems);
  const total = calcTotal(subtotal, totals);
  return _objectSpread(_objectSpread({}, state), {}, {
    items: newItems,
    quantity: calcQuantity(newItems),
    subtotal,
    totals,
    total
  });
}

function updateQuantities(state, quantities) {
  let needUpdate = false;
  const newItems = state.items.map(item => {
    const quantity = quantities.find(x => x.itemId === item.id && x.value !== item.quantity);

    if (!quantity) {
      return item;
    }

    needUpdate = true;
    return _objectSpread(_objectSpread({}, item), {}, {
      quantity: quantity.value,
      total: quantity.value * item.price
    });
  });

  if (needUpdate) {
    const subtotal = calcSubtotal(newItems);
    const totals = calcTotals(newItems);
    const total = calcTotal(subtotal, totals);
    return _objectSpread(_objectSpread({}, state), {}, {
      items: newItems,
      quantity: calcQuantity(newItems),
      subtotal,
      totals,
      total
    });
  }

  return state;
}

const initialState = {
  lastItemId: 0,
  quantity: 0,
  items: [],
  subtotal: 0,
  totals: [],
  total: 0
};
const CART_NAMESPACE = 'cart';

function cartBaseReducer(state = initialState, action) {
  switch (action.type) {
    case _cartActionTypes__WEBPACK_IMPORTED_MODULE_0__["CART_ADD_ITEM"]:
      return addItem(state, action.product, action.options, action.quantity);

    case _cartActionTypes__WEBPACK_IMPORTED_MODULE_0__["CART_REMOVE_ITEM"]:
      return removeItem(state, action.itemId);

    case _cartActionTypes__WEBPACK_IMPORTED_MODULE_0__["CART_UPDATE_QUANTITIES"]:
      return updateQuantities(state, action.quantities);

    default:
      return state;
  }
}

const cartReducer = Object(_client__WEBPACK_IMPORTED_MODULE_1__["withClientState"])(cartBaseReducer, CART_NAMESPACE);
/* harmony default export */ __webpack_exports__["default"] = (cartReducer);

/***/ }),

/***/ "./src/store/client.ts":
/*!*****************************!*\
  !*** ./src/store/client.ts ***!
  \*****************************/
/*! exports provided: applyClientState, useApplyClientState, withClientState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyClientState", function() { return applyClientState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useApplyClientState", function() { return useApplyClientState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withClientState", function() { return withClientState; });
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks */ "./src/store/hooks.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// third-party
// application

const APPLY_CLIENT_STATE = 'APPLY_CLIENT_STATE';

function isApplyClientStateAction(action) {
  return action.type === APPLY_CLIENT_STATE;
}

function applyClientState(state) {
  return {
    type: APPLY_CLIENT_STATE,
    state
  };
}
const useApplyClientState = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_0__["useAppAction"])(applyClientState);
function withClientState(reducer, namespace) {
  return (state, action) => {
    const childState = reducer(state, action);

    if (isApplyClientStateAction(action) && namespace in action.state) {
      return _objectSpread(_objectSpread({}, action.state[namespace]), {}, {
        stateFrom: 'client'
      });
    }

    if ('stateFrom' in childState) {
      return childState;
    }

    return _objectSpread(_objectSpread({}, childState), {}, {
      stateFrom: false ? undefined : 'server'
    });
  };
}

/***/ }),

/***/ "./src/store/compare/compareActionTypes.ts":
/*!*************************************************!*\
  !*** ./src/store/compare/compareActionTypes.ts ***!
  \*************************************************/
/*! exports provided: COMPARE_ADD_ITEM, COMPARE_REMOVE_ITEM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPARE_ADD_ITEM", function() { return COMPARE_ADD_ITEM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPARE_REMOVE_ITEM", function() { return COMPARE_REMOVE_ITEM; });
// application
const COMPARE_ADD_ITEM = 'COMPARE_ADD_ITEM';
const COMPARE_REMOVE_ITEM = 'COMPARE_REMOVE_ITEM';

/***/ }),

/***/ "./src/store/compare/compareActions.ts":
/*!*********************************************!*\
  !*** ./src/store/compare/compareActions.ts ***!
  \*********************************************/
/*! exports provided: compareAddItemSuccess, compareRemoveItemSuccess, compareAddItem, compareRemoveItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareAddItemSuccess", function() { return compareAddItemSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareRemoveItemSuccess", function() { return compareRemoveItemSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareAddItem", function() { return compareAddItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareRemoveItem", function() { return compareRemoveItem; });
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-toastify */ "react-toastify");
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_toastify__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _compareActionTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compareActionTypes */ "./src/store/compare/compareActionTypes.ts");
// third-party
 // application


function compareAddItemSuccess(product) {
  react_toastify__WEBPACK_IMPORTED_MODULE_0__["toast"].success(`Product "${product.name}" added to compare!`);
  return {
    type: _compareActionTypes__WEBPACK_IMPORTED_MODULE_1__["COMPARE_ADD_ITEM"],
    product
  };
}
function compareRemoveItemSuccess(productId) {
  return {
    type: _compareActionTypes__WEBPACK_IMPORTED_MODULE_1__["COMPARE_REMOVE_ITEM"],
    productId
  };
}
function compareAddItem(product) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(compareAddItemSuccess(product));
      resolve();
    }, 500);
  });
}
function compareRemoveItem(productId) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(compareRemoveItemSuccess(productId));
      resolve();
    }, 500);
  });
}

/***/ }),

/***/ "./src/store/compare/compareHooks.ts":
/*!*******************************************!*\
  !*** ./src/store/compare/compareHooks.ts ***!
  \*******************************************/
/*! exports provided: useCompare, useCompareAddItem, useCompareRemoveItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCompare", function() { return useCompare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCompareAddItem", function() { return useCompareAddItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCompareRemoveItem", function() { return useCompareRemoveItem; });
/* harmony import */ var _compareReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compareReducer */ "./src/store/compare/compareReducer.ts");
/* harmony import */ var _compareActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compareActions */ "./src/store/compare/compareActions.ts");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
// application



const useCompare = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppSelector"])(state => state[_compareReducer__WEBPACK_IMPORTED_MODULE_0__["COMPARE_NAMESPACE"]]);
const useCompareAddItem = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_compareActions__WEBPACK_IMPORTED_MODULE_1__["compareAddItem"]);
const useCompareRemoveItem = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_compareActions__WEBPACK_IMPORTED_MODULE_1__["compareRemoveItem"]);

/***/ }),

/***/ "./src/store/compare/compareReducer.ts":
/*!*********************************************!*\
  !*** ./src/store/compare/compareReducer.ts ***!
  \*********************************************/
/*! exports provided: COMPARE_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMPARE_NAMESPACE", function() { return COMPARE_NAMESPACE; });
/* harmony import */ var _compareActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compareActionTypes */ "./src/store/compare/compareActionTypes.ts");
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client */ "./src/store/client.ts");
// application



function addItem(state, product) {
  const itemIndex = state.items.findIndex(x => x.id === product.id);

  if (itemIndex === -1) {
    return {
      items: [...state.items, JSON.parse(JSON.stringify(product))]
    };
  }

  return state;
}

function removeItem(state, productId) {
  return {
    items: state.items.filter(x => x.id !== productId)
  };
}

const initialState = {
  items: []
};
const COMPARE_NAMESPACE = 'compare';

function compareBaseReducer(state = initialState, action) {
  switch (action.type) {
    case _compareActionTypes__WEBPACK_IMPORTED_MODULE_0__["COMPARE_ADD_ITEM"]:
      return addItem(state, action.product);

    case _compareActionTypes__WEBPACK_IMPORTED_MODULE_0__["COMPARE_REMOVE_ITEM"]:
      return removeItem(state, action.productId);

    default:
      return state;
  }
}

const compareReducer = Object(_client__WEBPACK_IMPORTED_MODULE_1__["withClientState"])(compareBaseReducer, COMPARE_NAMESPACE);
/* harmony default export */ __webpack_exports__["default"] = (compareReducer);

/***/ }),

/***/ "./src/store/currency/currencyActionTypes.ts":
/*!***************************************************!*\
  !*** ./src/store/currency/currencyActionTypes.ts ***!
  \***************************************************/
/*! exports provided: CURRENCY_CHANGE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CURRENCY_CHANGE", function() { return CURRENCY_CHANGE; });
// application
const CURRENCY_CHANGE = 'CURRENCY_CHANGE';

/***/ }),

/***/ "./src/store/currency/currencyActions.ts":
/*!***********************************************!*\
  !*** ./src/store/currency/currencyActions.ts ***!
  \***********************************************/
/*! exports provided: currencyChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "currencyChange", function() { return currencyChange; });
/* harmony import */ var _currencyActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currencyActionTypes */ "./src/store/currency/currencyActionTypes.ts");
// application

// eslint-disable-next-line import/prefer-default-export
function currencyChange(currency) {
  return {
    type: _currencyActionTypes__WEBPACK_IMPORTED_MODULE_0__["CURRENCY_CHANGE"],
    currency
  };
}

/***/ }),

/***/ "./src/store/currency/currencyHooks.ts":
/*!*********************************************!*\
  !*** ./src/store/currency/currencyHooks.ts ***!
  \*********************************************/
/*! exports provided: useCurrency, useCurrencyChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCurrency", function() { return useCurrency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCurrencyChange", function() { return useCurrencyChange; });
/* harmony import */ var _currencyReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currencyReducer */ "./src/store/currency/currencyReducer.ts");
/* harmony import */ var _currencyActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./currencyActions */ "./src/store/currency/currencyActions.ts");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
// application



const useCurrency = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppSelector"])(state => state[_currencyReducer__WEBPACK_IMPORTED_MODULE_0__["CURRENCY_NAMESPACE"]].current);
const useCurrencyChange = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_currencyActions__WEBPACK_IMPORTED_MODULE_1__["currencyChange"]);

/***/ }),

/***/ "./src/store/currency/currencyReducer.ts":
/*!***********************************************!*\
  !*** ./src/store/currency/currencyReducer.ts ***!
  \***********************************************/
/*! exports provided: CURRENCY_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CURRENCY_NAMESPACE", function() { return CURRENCY_NAMESPACE; });
/* harmony import */ var _currencyActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currencyActionTypes */ "./src/store/currency/currencyActionTypes.ts");
/* harmony import */ var _data_shopCurrencies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/shopCurrencies */ "./src/data/shopCurrencies.ts");
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../client */ "./src/store/client.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// application



const initialState = {
  current: _data_shopCurrencies__WEBPACK_IMPORTED_MODULE_1__["dataShopDefaultCurrency"]
};
const CURRENCY_NAMESPACE = 'currency';

function currencyBaseReducer(state = initialState, action) {
  if (action.type === _currencyActionTypes__WEBPACK_IMPORTED_MODULE_0__["CURRENCY_CHANGE"] && state.current.code !== action.currency.code) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: JSON.parse(JSON.stringify(action.currency))
    });
  }

  return state;
}

const currencyReducer = Object(_client__WEBPACK_IMPORTED_MODULE_2__["withClientState"])(currencyBaseReducer, CURRENCY_NAMESPACE);
/* harmony default export */ __webpack_exports__["default"] = (currencyReducer);

/***/ }),

/***/ "./src/store/hooks.ts":
/*!****************************!*\
  !*** ./src/store/hooks.ts ***!
  \****************************/
/*! exports provided: useAppAction, useAppSelector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useAppAction", function() { return useAppAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useAppSelector", function() { return useAppSelector; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);
// react
 // third-party

 // application

function useAppAction(action) {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__["useDispatch"])();
  return Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])((...args) => dispatch(action(...args)), []);
}
function useAppSelector(selector) {
  return Object(react_redux__WEBPACK_IMPORTED_MODULE_1__["useSelector"])(selector);
}

/***/ }),

/***/ "./src/store/locale/localeActionTypes.ts":
/*!***********************************************!*\
  !*** ./src/store/locale/localeActionTypes.ts ***!
  \***********************************************/
/*! exports provided: LOCALE_CHANGE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCALE_CHANGE", function() { return LOCALE_CHANGE; });
// application
const LOCALE_CHANGE = 'LOCALE_CHANGE';

/***/ }),

/***/ "./src/store/locale/localeActions.ts":
/*!*******************************************!*\
  !*** ./src/store/locale/localeActions.ts ***!
  \*******************************************/
/*! exports provided: localeChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "localeChange", function() { return localeChange; });
/* harmony import */ var _localeActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localeActionTypes */ "./src/store/locale/localeActionTypes.ts");
// application
 // eslint-disable-next-line import/prefer-default-export

function localeChange(locale) {
  return {
    type: _localeActionTypes__WEBPACK_IMPORTED_MODULE_0__["LOCALE_CHANGE"],
    locale
  };
}

/***/ }),

/***/ "./src/store/locale/localeHooks.ts":
/*!*****************************************!*\
  !*** ./src/store/locale/localeHooks.ts ***!
  \*****************************************/
/*! exports provided: useLocale, useLanguage, useDirection, useMessages, useLocaleChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useLocale", function() { return useLocale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useLanguage", function() { return useLanguage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useDirection", function() { return useDirection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMessages", function() { return useMessages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useLocaleChange", function() { return useLocaleChange; });
/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n */ "./src/i18n/index.ts");
/* harmony import */ var _localeReducer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localeReducer */ "./src/store/locale/localeReducer.ts");
/* harmony import */ var _localeActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./localeActions */ "./src/store/locale/localeActions.ts");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
// application





const localeSelector = state => state[_localeReducer__WEBPACK_IMPORTED_MODULE_1__["LOCALE_NAMESPACE"]].current;

const useLocale = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_3__["useAppSelector"])(localeSelector);
function useLanguage(selector) {
  return Object(_hooks__WEBPACK_IMPORTED_MODULE_3__["useAppSelector"])(state => {
    const locale = localeSelector(state);
    const language = _i18n__WEBPACK_IMPORTED_MODULE_0__["default"].find(x => x.locale === locale);

    if (!language) {
      throw Error(`Language with locale: ${locale} not found!`);
    }

    if (selector) {
      return selector(language);
    }

    return language;
  });
}
const useDirection = () => useLanguage(language => language.direction);
const useMessages = () => useLanguage(language => language.messages);
const useLocaleChange = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_3__["useAppAction"])(_localeActions__WEBPACK_IMPORTED_MODULE_2__["localeChange"]);

/***/ }),

/***/ "./src/store/locale/localeReducer.ts":
/*!*******************************************!*\
  !*** ./src/store/locale/localeReducer.ts ***!
  \*******************************************/
/*! exports provided: LOCALE_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCALE_NAMESPACE", function() { return LOCALE_NAMESPACE; });
/* harmony import */ var _localeActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localeActionTypes */ "./src/store/locale/localeActionTypes.ts");
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client */ "./src/store/client.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// application


const initialState = {
  current: 'en'
};
const LOCALE_NAMESPACE = 'locale';

function localeBaseReducer(state = initialState, action) {
  if (action.type === _localeActionTypes__WEBPACK_IMPORTED_MODULE_0__["LOCALE_CHANGE"]) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: action.locale
    });
  }

  return state;
}

const localeReducer = Object(_client__WEBPACK_IMPORTED_MODULE_1__["withClientState"])(localeBaseReducer, LOCALE_NAMESPACE);
/* harmony default export */ __webpack_exports__["default"] = (localeReducer);

/***/ }),

/***/ "./src/store/mobile-menu/mobileMenuActionTypes.ts":
/*!********************************************************!*\
  !*** ./src/store/mobile-menu/mobileMenuActionTypes.ts ***!
  \********************************************************/
/*! exports provided: MOBILE_MENU_OPEN, MOBILE_MENU_CLOSE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MOBILE_MENU_OPEN", function() { return MOBILE_MENU_OPEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MOBILE_MENU_CLOSE", function() { return MOBILE_MENU_CLOSE; });
const MOBILE_MENU_OPEN = 'MOBILE_MENU_OPEN';
const MOBILE_MENU_CLOSE = 'MOBILE_MENU_CLOSE';

/***/ }),

/***/ "./src/store/mobile-menu/mobileMenuActions.ts":
/*!****************************************************!*\
  !*** ./src/store/mobile-menu/mobileMenuActions.ts ***!
  \****************************************************/
/*! exports provided: mobileMenuOpen, mobileMenuClose */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileMenuOpen", function() { return mobileMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileMenuClose", function() { return mobileMenuClose; });
/* harmony import */ var _mobileMenuActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobileMenuActionTypes */ "./src/store/mobile-menu/mobileMenuActionTypes.ts");
// application

function mobileMenuOpen() {
  return {
    type: _mobileMenuActionTypes__WEBPACK_IMPORTED_MODULE_0__["MOBILE_MENU_OPEN"]
  };
}
function mobileMenuClose() {
  return {
    type: _mobileMenuActionTypes__WEBPACK_IMPORTED_MODULE_0__["MOBILE_MENU_CLOSE"]
  };
}

/***/ }),

/***/ "./src/store/mobile-menu/mobileMenuHooks.ts":
/*!**************************************************!*\
  !*** ./src/store/mobile-menu/mobileMenuHooks.ts ***!
  \**************************************************/
/*! exports provided: useMobileMenu, useMobileMenuOpen, useMobileMenuClose */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMobileMenu", function() { return useMobileMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMobileMenuOpen", function() { return useMobileMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMobileMenuClose", function() { return useMobileMenuClose; });
/* harmony import */ var _mobileMenuReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobileMenuReducer */ "./src/store/mobile-menu/mobileMenuReducer.ts");
/* harmony import */ var _mobileMenuActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mobileMenuActions */ "./src/store/mobile-menu/mobileMenuActions.ts");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
// application



const useMobileMenu = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppSelector"])(state => state[_mobileMenuReducer__WEBPACK_IMPORTED_MODULE_0__["MOBILE_MENU_NAMESPACE"]]);
const useMobileMenuOpen = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_mobileMenuActions__WEBPACK_IMPORTED_MODULE_1__["mobileMenuOpen"]);
const useMobileMenuClose = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_mobileMenuActions__WEBPACK_IMPORTED_MODULE_1__["mobileMenuClose"]);

/***/ }),

/***/ "./src/store/mobile-menu/mobileMenuReducer.ts":
/*!****************************************************!*\
  !*** ./src/store/mobile-menu/mobileMenuReducer.ts ***!
  \****************************************************/
/*! exports provided: MOBILE_MENU_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MOBILE_MENU_NAMESPACE", function() { return MOBILE_MENU_NAMESPACE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mobileMenuReducer; });
/* harmony import */ var _mobileMenuActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobileMenuActionTypes */ "./src/store/mobile-menu/mobileMenuActionTypes.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// application

const initialState = {
  open: false
};
const MOBILE_MENU_NAMESPACE = 'mobileMenu';
function mobileMenuReducer(state = initialState, action) {
  switch (action.type) {
    case _mobileMenuActionTypes__WEBPACK_IMPORTED_MODULE_0__["MOBILE_MENU_OPEN"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        open: true
      });

    case _mobileMenuActionTypes__WEBPACK_IMPORTED_MODULE_0__["MOBILE_MENU_CLOSE"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        open: false
      });

    default:
      return state;
  }
}

/***/ }),

/***/ "./src/store/quickview/quickviewActionTypes.ts":
/*!*****************************************************!*\
  !*** ./src/store/quickview/quickviewActionTypes.ts ***!
  \*****************************************************/
/*! exports provided: QUICKVIEW_OPEN, QUICKVIEW_CLOSE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUICKVIEW_OPEN", function() { return QUICKVIEW_OPEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUICKVIEW_CLOSE", function() { return QUICKVIEW_CLOSE; });
// application
const QUICKVIEW_OPEN = 'QUICKVIEW_OPEN';
const QUICKVIEW_CLOSE = 'QUICKVIEW_CLOSE';

/***/ }),

/***/ "./src/store/quickview/quickviewActions.ts":
/*!*************************************************!*\
  !*** ./src/store/quickview/quickviewActions.ts ***!
  \*************************************************/
/*! exports provided: quickviewOpenSuccess, quickviewClose, quickviewOpen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quickviewOpenSuccess", function() { return quickviewOpenSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quickviewClose", function() { return quickviewClose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quickviewOpen", function() { return quickviewOpen; });
/* harmony import */ var _api_shop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api/shop */ "./src/api/shop.ts");
/* harmony import */ var _quickviewActionTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quickviewActionTypes */ "./src/store/quickview/quickviewActionTypes.ts");
// application



let cancelPreviousRequest = () => {};

function quickviewOpenSuccess(product) {
  return {
    type: _quickviewActionTypes__WEBPACK_IMPORTED_MODULE_1__["QUICKVIEW_OPEN"],
    product
  };
}
function quickviewClose() {
  return {
    type: _quickviewActionTypes__WEBPACK_IMPORTED_MODULE_1__["QUICKVIEW_CLOSE"]
  };
}
function quickviewOpen(productSlug) {
  return dispatch => {
    cancelPreviousRequest();
    return new Promise(resolve => {
      let canceled = false; // sending request to server, timeout is used as a stub

      const timer = setTimeout(() => {
        _api_shop__WEBPACK_IMPORTED_MODULE_0__["default"].getProductBySlug(productSlug).then(product => {
          if (canceled) {
            return;
          }

          if (product) {
            dispatch(quickviewOpenSuccess(product));
          }

          resolve();
        });
      }, 350);

      cancelPreviousRequest = () => {
        canceled = true;
        clearTimeout(timer);
        resolve();
      };
    });
  };
}

/***/ }),

/***/ "./src/store/quickview/quickviewHooks.ts":
/*!***********************************************!*\
  !*** ./src/store/quickview/quickviewHooks.ts ***!
  \***********************************************/
/*! exports provided: useQuickview, useQuickviewOpen, useQuickviewClose */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useQuickview", function() { return useQuickview; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useQuickviewOpen", function() { return useQuickviewOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useQuickviewClose", function() { return useQuickviewClose; });
/* harmony import */ var _quickviewReducer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quickviewReducer */ "./src/store/quickview/quickviewReducer.ts");
/* harmony import */ var _quickviewActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quickviewActions */ "./src/store/quickview/quickviewActions.ts");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
// application



const useQuickview = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppSelector"])(state => state[_quickviewReducer__WEBPACK_IMPORTED_MODULE_0__["QUICKVIEW_NAMESPACE"]]);
const useQuickviewOpen = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_quickviewActions__WEBPACK_IMPORTED_MODULE_1__["quickviewOpen"]);
const useQuickviewClose = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_2__["useAppAction"])(_quickviewActions__WEBPACK_IMPORTED_MODULE_1__["quickviewClose"]);

/***/ }),

/***/ "./src/store/quickview/quickviewReducer.ts":
/*!*************************************************!*\
  !*** ./src/store/quickview/quickviewReducer.ts ***!
  \*************************************************/
/*! exports provided: QUICKVIEW_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUICKVIEW_NAMESPACE", function() { return QUICKVIEW_NAMESPACE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quickviewReducer; });
/* harmony import */ var _quickviewActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quickviewActionTypes */ "./src/store/quickview/quickviewActionTypes.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// application

const initialState = {
  open: false,
  product: null
};
const QUICKVIEW_NAMESPACE = 'quickview';
function quickviewReducer(state = initialState, action) {
  let newState = state;

  if (action.type === _quickviewActionTypes__WEBPACK_IMPORTED_MODULE_0__["QUICKVIEW_OPEN"]) {
    newState = _objectSpread(_objectSpread({}, state), {}, {
      open: true,
      product: JSON.parse(JSON.stringify(action.product))
    });
  } else if (action.type === _quickviewActionTypes__WEBPACK_IMPORTED_MODULE_0__["QUICKVIEW_CLOSE"]) {
    newState = _objectSpread(_objectSpread({}, state), {}, {
      open: false
    });
  }

  return newState;
}

/***/ }),

/***/ "./src/store/root/rootReducer.ts":
/*!***************************************!*\
  !*** ./src/store/root/rootReducer.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ "redux");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../version */ "./src/store/version.ts");
/* harmony import */ var _cart_cartReducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cart/cartReducer */ "./src/store/cart/cartReducer.ts");
/* harmony import */ var _compare_compareReducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compare/compareReducer */ "./src/store/compare/compareReducer.ts");
/* harmony import */ var _currency_currencyReducer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../currency/currencyReducer */ "./src/store/currency/currencyReducer.ts");
/* harmony import */ var _locale_localeReducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../locale/localeReducer */ "./src/store/locale/localeReducer.ts");
/* harmony import */ var _mobile_menu_mobileMenuReducer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../mobile-menu/mobileMenuReducer */ "./src/store/mobile-menu/mobileMenuReducer.ts");
/* harmony import */ var _quickview_quickviewReducer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../quickview/quickviewReducer */ "./src/store/quickview/quickviewReducer.ts");
/* harmony import */ var _wishlist_wishlistReducer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../wishlist/wishlistReducer */ "./src/store/wishlist/wishlistReducer.ts");
/* harmony import */ var _shop_shopReducer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shop/shopReducer */ "./src/store/shop/shopReducer.ts");
/* harmony import */ var _shop_shopTypes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shop/shopTypes */ "./src/store/shop/shopTypes.ts");
// third-party
 // application











/* harmony default export */ __webpack_exports__["default"] = (Object(redux__WEBPACK_IMPORTED_MODULE_0__["combineReducers"])({
  version: (state = _version__WEBPACK_IMPORTED_MODULE_1__["default"]) => state,
  [_cart_cartReducer__WEBPACK_IMPORTED_MODULE_2__["CART_NAMESPACE"]]: _cart_cartReducer__WEBPACK_IMPORTED_MODULE_2__["default"],
  [_compare_compareReducer__WEBPACK_IMPORTED_MODULE_3__["COMPARE_NAMESPACE"]]: _compare_compareReducer__WEBPACK_IMPORTED_MODULE_3__["default"],
  [_currency_currencyReducer__WEBPACK_IMPORTED_MODULE_4__["CURRENCY_NAMESPACE"]]: _currency_currencyReducer__WEBPACK_IMPORTED_MODULE_4__["default"],
  [_locale_localeReducer__WEBPACK_IMPORTED_MODULE_5__["LOCALE_NAMESPACE"]]: _locale_localeReducer__WEBPACK_IMPORTED_MODULE_5__["default"],
  [_mobile_menu_mobileMenuReducer__WEBPACK_IMPORTED_MODULE_6__["MOBILE_MENU_NAMESPACE"]]: _mobile_menu_mobileMenuReducer__WEBPACK_IMPORTED_MODULE_6__["default"],
  [_quickview_quickviewReducer__WEBPACK_IMPORTED_MODULE_7__["QUICKVIEW_NAMESPACE"]]: _quickview_quickviewReducer__WEBPACK_IMPORTED_MODULE_7__["default"],
  [_wishlist_wishlistReducer__WEBPACK_IMPORTED_MODULE_8__["WISHLIST_NAMESPACE"]]: _wishlist_wishlistReducer__WEBPACK_IMPORTED_MODULE_8__["default"],
  [_shop_shopTypes__WEBPACK_IMPORTED_MODULE_10__["SHOP_NAMESPACE"]]: _shop_shopReducer__WEBPACK_IMPORTED_MODULE_9__["default"]
}));

/***/ }),

/***/ "./src/store/shop/shopActionTypes.ts":
/*!*******************************************!*\
  !*** ./src/store/shop/shopActionTypes.ts ***!
  \*******************************************/
/*! exports provided: SHOP_HYDRATE, SHOP_INIT, SHOP_FETCH_CATEGORY_SUCCESS, SHOP_FETCH_PRODUCTS_LIST_START, SHOP_FETCH_PRODUCTS_LIST_SUCCESS, SHOP_SET_OPTION_VALUE, SHOP_SET_FILTER_VALUE, SHOP_RESET_FILTERS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_HYDRATE", function() { return SHOP_HYDRATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_INIT", function() { return SHOP_INIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_FETCH_CATEGORY_SUCCESS", function() { return SHOP_FETCH_CATEGORY_SUCCESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_FETCH_PRODUCTS_LIST_START", function() { return SHOP_FETCH_PRODUCTS_LIST_START; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_FETCH_PRODUCTS_LIST_SUCCESS", function() { return SHOP_FETCH_PRODUCTS_LIST_SUCCESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_SET_OPTION_VALUE", function() { return SHOP_SET_OPTION_VALUE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_SET_FILTER_VALUE", function() { return SHOP_SET_FILTER_VALUE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_RESET_FILTERS", function() { return SHOP_RESET_FILTERS; });
/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-redux-wrapper */ "next-redux-wrapper");
/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shopTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shopTypes */ "./src/store/shop/shopTypes.ts");
// third-party
 // application


const SHOP_HYDRATE = next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__["HYDRATE"];
const SHOP_INIT = 'SHOP_INIT';
const SHOP_FETCH_CATEGORY_SUCCESS = 'SHOP_FETCH_CATEGORY_SUCCESS';
const SHOP_FETCH_PRODUCTS_LIST_START = 'SHOP_FETCH_PRODUCTS_LIST_START';
const SHOP_FETCH_PRODUCTS_LIST_SUCCESS = 'SHOP_FETCH_PRODUCTS_LIST_SUCCESS';
const SHOP_SET_OPTION_VALUE = 'SHOP_SET_OPTION_VALUE';
const SHOP_SET_FILTER_VALUE = 'SHOP_SET_FILTER_VALUE';
const SHOP_RESET_FILTERS = 'SHOP_RESET_FILTERS';

/***/ }),

/***/ "./src/store/shop/shopReducer.ts":
/*!***************************************!*\
  !*** ./src/store/shop/shopReducer.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _shopTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shopTypes */ "./src/store/shop/shopTypes.ts");
/* harmony import */ var _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shopActionTypes */ "./src/store/shop/shopActionTypes.ts");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// application


const initialState = {
  init: false,
  categorySlug: null,
  categoryIsLoading: true,
  category: null,
  productsListIsLoading: true,
  productsList: null,
  options: {},
  filters: {}
};

function shopReducerSetFilterValue(state, action) {
  const currentFilters = _objectSpread({}, state.filters);

  let filters;

  if (action.value !== null) {
    filters = _objectSpread(_objectSpread({}, currentFilters), {}, {
      [action.filter]: action.value
    });
  } else {
    delete currentFilters[action.filter];
    filters = _objectSpread({}, currentFilters);
  }

  return _objectSpread(_objectSpread({}, state), {}, {
    options: _objectSpread(_objectSpread({}, state.options), {}, {
      page: 1
    }),
    filters
  });
}

function shopReducer(state = initialState, action) {
  switch (action.type) {
    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_HYDRATE"]:
      return action.payload[_shopTypes__WEBPACK_IMPORTED_MODULE_0__["SHOP_NAMESPACE"]];

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_INIT"]:
      return _objectSpread(_objectSpread({}, initialState), {}, {
        categorySlug: action.categorySlug,
        options: action.options,
        filters: action.filters
      });

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_FETCH_CATEGORY_SUCCESS"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        init: true,
        categoryIsLoading: false,
        category: action.category
      });

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_FETCH_PRODUCTS_LIST_START"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        productsListIsLoading: true
      });

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_FETCH_PRODUCTS_LIST_SUCCESS"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        productsListIsLoading: false,
        productsList: action.productsList
      });

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_SET_OPTION_VALUE"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        options: _objectSpread(_objectSpread({}, state.options), {}, {
          page: 1,
          [action.option]: action.value
        })
      });

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_SET_FILTER_VALUE"]:
      return shopReducerSetFilterValue(state, action);

    case _shopActionTypes__WEBPACK_IMPORTED_MODULE_1__["SHOP_RESET_FILTERS"]:
      return _objectSpread(_objectSpread({}, state), {}, {
        options: _objectSpread(_objectSpread({}, state.options), {}, {
          page: 1
        }),
        filters: {}
      });

    default:
      return state;
  }
}

/* harmony default export */ __webpack_exports__["default"] = (shopReducer);

/***/ }),

/***/ "./src/store/shop/shopTypes.ts":
/*!*************************************!*\
  !*** ./src/store/shop/shopTypes.ts ***!
  \*************************************/
/*! exports provided: SHOP_NAMESPACE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHOP_NAMESPACE", function() { return SHOP_NAMESPACE; });
// application
const SHOP_NAMESPACE = 'shop';

/***/ }),

/***/ "./src/store/store.ts":
/*!****************************!*\
  !*** ./src/store/store.ts ***!
  \****************************/
/*! exports provided: save, load, wrapper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "save", function() { return save; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "load", function() { return load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapper", function() { return wrapper; });
/* harmony import */ var redux_thunk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-thunk */ "redux-thunk");
/* harmony import */ var redux_thunk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redux_thunk__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux */ "redux");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var redux_devtools_extension__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux-devtools-extension */ "redux-devtools-extension");
/* harmony import */ var redux_devtools_extension__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux_devtools_extension__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-redux-wrapper */ "next-redux-wrapper");
/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _root_rootReducer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./root/rootReducer */ "./src/store/root/rootReducer.ts");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version */ "./src/store/version.ts");
// third-party



 // application



const save = state => {
  try {
    localStorage.setItem('state', JSON.stringify(state));
  } catch (error) {
    // eslint-disable-next-line no-console
    console.error(error);
  }
};
const load = () => {
  if (true) {
    return undefined;
  }

  let state;

  try {
    state = localStorage.getItem('state');

    if (typeof state === 'string') {
      state = JSON.parse(state);
    }

    if (state && state.version !== _version__WEBPACK_IMPORTED_MODULE_5__["default"]) {
      state = undefined;
    }
  } catch (error) {
    // eslint-disable-next-line no-console
    console.error(error);
  }

  return state || undefined;
}; // create a makeStore function

const makeStore = () => Object(redux__WEBPACK_IMPORTED_MODULE_1__["createStore"])(_root_rootReducer__WEBPACK_IMPORTED_MODULE_4__["default"], Object(redux_devtools_extension__WEBPACK_IMPORTED_MODULE_2__["composeWithDevTools"])(Object(redux__WEBPACK_IMPORTED_MODULE_1__["applyMiddleware"])(redux_thunk__WEBPACK_IMPORTED_MODULE_0___default.a))); // export an assembled wrapper


const wrapper = Object(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__["createWrapper"])(makeStore);

/***/ }),

/***/ "./src/store/version.ts":
/*!******************************!*\
  !*** ./src/store/version.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const version = 1;
/* harmony default export */ __webpack_exports__["default"] = (version);

/***/ }),

/***/ "./src/store/wishlist/wishlistActionTypes.ts":
/*!***************************************************!*\
  !*** ./src/store/wishlist/wishlistActionTypes.ts ***!
  \***************************************************/
/*! exports provided: WISHLIST_ADD_ITEM, WISHLIST_REMOVE_ITEM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WISHLIST_ADD_ITEM", function() { return WISHLIST_ADD_ITEM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WISHLIST_REMOVE_ITEM", function() { return WISHLIST_REMOVE_ITEM; });
// application
const WISHLIST_ADD_ITEM = 'WISHLIST_ADD_ITEM';
const WISHLIST_REMOVE_ITEM = 'WISHLIST_REMOVE_ITEM';

/***/ }),

/***/ "./src/store/wishlist/wishlistActions.ts":
/*!***********************************************!*\
  !*** ./src/store/wishlist/wishlistActions.ts ***!
  \***********************************************/
/*! exports provided: wishlistAddItemSuccess, wishlistRemoveItemSuccess, wishlistAddItem, wishlistRemoveItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishlistAddItemSuccess", function() { return wishlistAddItemSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishlistRemoveItemSuccess", function() { return wishlistRemoveItemSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishlistAddItem", function() { return wishlistAddItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wishlistRemoveItem", function() { return wishlistRemoveItem; });
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-toastify */ "react-toastify");
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_toastify__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wishlistActionTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wishlistActionTypes */ "./src/store/wishlist/wishlistActionTypes.ts");
// third-party
 // application


function wishlistAddItemSuccess(product) {
  react_toastify__WEBPACK_IMPORTED_MODULE_0__["toast"].success(`Product "${product.name}" added to wish list!`);
  return {
    type: _wishlistActionTypes__WEBPACK_IMPORTED_MODULE_1__["WISHLIST_ADD_ITEM"],
    product
  };
}
function wishlistRemoveItemSuccess(productId) {
  return {
    type: _wishlistActionTypes__WEBPACK_IMPORTED_MODULE_1__["WISHLIST_REMOVE_ITEM"],
    productId
  };
}
function wishlistAddItem(product) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(wishlistAddItemSuccess(product));
      resolve();
    }, 500);
  });
}
function wishlistRemoveItem(productId) {
  // sending request to server, timeout is used as a stub
  return dispatch => new Promise(resolve => {
    setTimeout(() => {
      dispatch(wishlistRemoveItemSuccess(productId));
      resolve();
    }, 500);
  });
}

/***/ }),

/***/ "./src/store/wishlist/wishlistHooks.ts":
/*!*********************************************!*\
  !*** ./src/store/wishlist/wishlistHooks.ts ***!
  \*********************************************/
/*! exports provided: useWishlist, useWishlistAddItem, useWishlistRemoveItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useWishlist", function() { return useWishlist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useWishlistAddItem", function() { return useWishlistAddItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useWishlistRemoveItem", function() { return useWishlistRemoveItem; });
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hooks */ "./src/store/hooks.ts");
/* harmony import */ var _wishlistReducer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wishlistReducer */ "./src/store/wishlist/wishlistReducer.ts");
/* harmony import */ var _wishlistActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wishlistActions */ "./src/store/wishlist/wishlistActions.ts");
// application



const useWishlist = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_0__["useAppSelector"])(state => state[_wishlistReducer__WEBPACK_IMPORTED_MODULE_1__["WISHLIST_NAMESPACE"]]);
const useWishlistAddItem = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_0__["useAppAction"])(_wishlistActions__WEBPACK_IMPORTED_MODULE_2__["wishlistAddItem"]);
const useWishlistRemoveItem = () => Object(_hooks__WEBPACK_IMPORTED_MODULE_0__["useAppAction"])(_wishlistActions__WEBPACK_IMPORTED_MODULE_2__["wishlistRemoveItem"]);

/***/ }),

/***/ "./src/store/wishlist/wishlistReducer.ts":
/*!***********************************************!*\
  !*** ./src/store/wishlist/wishlistReducer.ts ***!
  \***********************************************/
/*! exports provided: WISHLIST_NAMESPACE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WISHLIST_NAMESPACE", function() { return WISHLIST_NAMESPACE; });
/* harmony import */ var _wishlistActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wishlistActionTypes */ "./src/store/wishlist/wishlistActionTypes.ts");
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client */ "./src/store/client.ts");
// application



function addItem(state, product) {
  const itemIndex = state.items.findIndex(x => x.id === product.id);

  if (itemIndex === -1) {
    return {
      items: [...state.items, JSON.parse(JSON.stringify(product))]
    };
  }

  return state;
}

function removeItem(state, productId) {
  return {
    items: state.items.filter(x => x.id !== productId)
  };
}

const initialState = {
  items: []
};
const WISHLIST_NAMESPACE = 'wishlist';

function wishlistBaseReducer(state = initialState, action) {
  switch (action.type) {
    case _wishlistActionTypes__WEBPACK_IMPORTED_MODULE_0__["WISHLIST_ADD_ITEM"]:
      return addItem(state, action.product);

    case _wishlistActionTypes__WEBPACK_IMPORTED_MODULE_0__["WISHLIST_REMOVE_ITEM"]:
      return removeItem(state, action.productId);

    default:
      return state;
  }
}

const wishlistReducer = Object(_client__WEBPACK_IMPORTED_MODULE_1__["withClientState"])(wishlistBaseReducer, WISHLIST_NAMESPACE);
/* harmony default export */ __webpack_exports__["default"] = (wishlistReducer);

/***/ }),

/***/ 0:
/*!*****************************************!*\
  !*** multi private-next-pages/_app.tsx ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! private-next-pages/_app.tsx */"./src/pages/_app.tsx");


/***/ }),

/***/ "classnames":
/*!*****************************!*\
  !*** external "classnames" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("classnames");

/***/ }),

/***/ "next-redux-wrapper":
/*!*************************************!*\
  !*** external "next-redux-wrapper" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next-redux-wrapper");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/router");

/***/ }),

/***/ "photoswipe":
/*!*****************************!*\
  !*** external "photoswipe" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("photoswipe");

/***/ }),

/***/ "photoswipe/dist/photoswipe-ui-default":
/*!********************************************************!*\
  !*** external "photoswipe/dist/photoswipe-ui-default" ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("photoswipe/dist/photoswipe-ui-default");

/***/ }),

/***/ "prop-types":
/*!*****************************!*\
  !*** external "prop-types" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ "prop-types-exact":
/*!***********************************!*\
  !*** external "prop-types-exact" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("prop-types-exact");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ "react-intl":
/*!*****************************!*\
  !*** external "react-intl" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-intl");

/***/ }),

/***/ "react-is":
/*!***************************!*\
  !*** external "react-is" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-is");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-redux");

/***/ }),

/***/ "react-slick":
/*!******************************!*\
  !*** external "react-slick" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-slick");

/***/ }),

/***/ "react-toastify":
/*!*********************************!*\
  !*** external "react-toastify" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-toastify");

/***/ }),

/***/ "reactstrap":
/*!*****************************!*\
  !*** external "reactstrap" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("reactstrap");

/***/ }),

/***/ "redux":
/*!************************!*\
  !*** external "redux" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux");

/***/ }),

/***/ "redux-devtools-extension":
/*!*******************************************!*\
  !*** external "redux-devtools-extension" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-devtools-extension");

/***/ }),

/***/ "redux-thunk":
/*!******************************!*\
  !*** external "redux-thunk" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-thunk");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,